plugins {
    id 'taack-grails-common'
    id 'org.apache.grails.gradle.grails-app'
    id 'war'
    id 'org.apache.grails.gradle.grails-web'
    id 'com.bertramlabs.asset-pipeline'
}

group = "taack.ui.test.minimal"
version = "0.7.0"

dependencies {
    implementation platform("org.apache.grails:grails-bom:$grailsVersion")
//    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.apache.grails:grails-web-boot"
    implementation "org.apache.grails:grails-url-mappings"
    implementation "org.apache.grails:grails-rest-transforms"

    profile "org.apache.grails.profiles:web"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "com.zaxxer:HikariCP"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails"
    implementation "org.apache.grails:grails-spring-security:${grailsSpringSecurity}"

}

grails {
    // should use gradle -Dgrails.run.active=true bootRun
    exploded = false
    plugins {
        implementation project(':taack-ui')
    }
}

bootJar {
    enabled = true
    requiresUnpack '**/asciidoctorj*.jar'
}

bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-XX:+UnlockExperimentalVMOptions',
            '-XX:+UseCompactObjectHeaders',
            '-XX:+UseEpsilonGC',
            '-Xmx1024m'
    )
}

assets {
    minifyJs = true
    minifyCss = true
}

bootBuildImage {
    verboseLogging = true
    builder = "paketobuildpacks/builder-jammy-base"
    buildpacks.add("paketo-buildpacks/java")
    buildpacks.add("paketo-buildpacks/syft")
    buildpacks.add("paketo-buildpacks/executable-jar")
    buildpacks.add("paketobuildpacks/graalvm")
    buildpacks.add("paketo-buildpacks/native-image")
    buildpacks.add("paketo-buildpacks/java-native-image")
    environment = [
            "BP_NATIVE_IMAGE": "true",
            "BPL_SPRING_AOT_ENABLED": "true",
            "BP_SPRING_AOT_ENABLED": "true",
            "BP_JVM_VERSION": "24",
            "BP_NATIVE_IMAGE_BUILD_ARGUMENTS": """
				--gc=serial
				-H:+UnlockExperimentalVMOptions
				-H:-ReduceImplicitExceptionStackTraceInformation
				-march=compatibility 
			""", // -O3 --link-at-build-time --gc=serial -march=native -J-XX:MaxRAMPercentage=80.0
            "BP_HEALTH_CHECKER_ENABLED": "true"
    ]
    imageName = "${project.name}:${project.version}"

}

// OK
// docker run -it --net=host taack-ui-test-minimal:0.7.0
// docker run -it --entrypoint /bin/bash taack-ui-test-minimal:0.7.0
// docker export 2438e7fad559 > output.tar

// Other
// docker exec -it docker.io/library/taack-ui-test-minimal /bin/bash
// docker run -u root -p 8080:9442 -v $(pwd)/w:/workspace/test:Z docker.io/library/taack-ui-test chown -R node:node /workspace/test
// docker run --rm -p 9442:9442 docker.io/library/taack-ui-test-minimal
// docker save docker.io/library/taack-ui-test-minimal > taack-ui-test-minimal.tar
