buildscript {
    repositories {
        mavenCentral()
        maven { url "https://repository.apache.org/content/groups/public" }
        maven { url "https://repo.grails.org/grails/restricted" }

    }
    dependencies {
        classpath platform("org.apache.grails:grails-bom:$grailsVersion")
        classpath "org.apache.grails:grails-gradle-plugins"
        classpath "org.apache.grails:grails-data-hibernate5"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle"
    }
}

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.apache.grails.gradle.grails-web"
apply plugin:"com.bertramlabs.asset-pipeline"
apply plugin:"org.apache.grails.gradle.grails-gsp"
//apply plugin:'org.graalvm.buildtools.native'

group = "taack.ui.test"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repository.apache.org/content/groups/public" }
    maven { url "https://repo.grails.org/grails/restricted" }
}

//dependencyManagement {
//    dependencies {
//        dependency "org.apache.solr:solr-solrj:${solrj}"
//
//        // 9.4.53.v20231009
//        dependency "org.eclipse.jetty.http2:http2-common:${jetty}"
//        dependency "org.eclipse.jetty.http2:http2-client:${jetty}"
//        dependency "org.eclipse.jetty.http2:http2-hpack:${jetty}"
//        dependency "org.eclipse.jetty.http2:http2-http-client-transport:${jetty}"
//        dependency "org.eclipse.jetty:jetty-alpn-client:${jetty}"
//        dependency "org.eclipse.jetty:jetty-http:${jetty}"
//        dependency "org.eclipse.jetty:jetty-io:${jetty}"
//        dependency "org.eclipse.jetty:jetty-util:${jetty}"
//        dependency "org.eclipse.jetty:jetty-client:${jetty}"
//        dependency "org.eclipse.jetty:jetty-alpn-java-client:${jetty}"
//    }
//}

dependencies {
    implementation platform("org.apache.grails:grails-bom:$grailsVersion")
    developmentOnly('org.springframework.boot:spring-boot-devtools')
    console 'org.apache.grails:grails-console'
    implementation 'org.apache.grails:gsp'
    profile 'org.grails.profiles:web'

    implementation("org.apache.grails:grails-core")
    implementation("org.apache.grails:grails-logging")
    implementation("org.apache.grails:grails-databinding")
    implementation("org.apache.grails:grails-i18n")
    implementation("org.apache.grails:grails-interceptors")
    implementation("org.apache.grails:async")
    implementation("org.apache.grails:grails-plugin-rest")
    implementation("org.apache.grails:grails-services")
    implementation("org.apache.grails:grails-plugin-url-mappings")
    implementation("org.apache.grails:grails-web-boot")
    implementation("org.apache.grails:gsp")
    implementation("org.apache.grails:grails-data-hibernate5")
    implementation "org.apache.grails:events"
    implementation("org.springframework.boot:spring-boot-autoconfigure")
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-logging")
    implementation("org.springframework.boot:spring-boot-starter-tomcat")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    runtimeOnly("com.h2database:h2")
    runtimeOnly "com.zaxxer:HikariCP"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails"

    implementation "org.apache.grails:spring-security-core:${grailsSpringSecurity}"

    implementation 'commons-io:commons-io:2.18.0'
    implementation "org.asciidoctor:asciidoctorj:${asciidoctorJ}"
    implementation 'org.asciidoctor:asciidoctorj-pdf:2.3.19'
    implementation 'org.asciidoctor:asciidoctorj-diagram:2.3.1'
    implementation 'org.asciidoctor:asciidoctorj-revealjs:5.1.0'

}

grails {
    // should use gradle -Dgrails.run.active=true bootRun
    exploded = true
    plugins {
        implementation project(':taack-ui')
    }
}

bootJar {
    enabled = true
    requiresUnpack '**/asciidoctorj*.jar'
}

//application {
//    mainClass.set("taack.ui.test.Application")
//}

//java {
//    sourceCompatibility = JavaVersion.toVersion("17")
//}

assets {
    minifyJs = true
    minifyCss = true
}

//tasks.withType(Test) {
//    useJUnitPlatform()
//    systemProperty "geb.env", System.getProperty('geb.env')
//    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
//    systemProperty 'webdriver.chrome.driver', "${System.getenv('CHROMEWEBDRIVER')}/chromedriver"
//    systemProperty 'webdriver.gecko.driver', "${System.getenv('GECKOWEBDRIVER')}/geckodriver"
//}

//graalvmNative {
//    toolchainDetection = true
//    binaries.main {
//        mainClass = 'taack.ui.test.Application'
//        buildArgs.addAll(
//                '--initialize-at-build-time=org.apache.sshd.common.file.root.RootedFileSystemProvider',
//                '--initialize-at-build-time=org.apache.sshd.sftp.client.fs.SftpFileSystemProvider',
//                '--initialize-at-build-time=ch.qos.logback.classic.Logger',
//                '-O3', '-march=native', '--link-at-build-time')
//    }
//    agent {
//        enabled = true
//
//    }
//}

/**
 * ~/.jdks/graalvm-jdk-24.0.1/bin/java -agentlib:native-image-agent=config-output-dir=test -jar taack-ui-test.jar
 *
 */