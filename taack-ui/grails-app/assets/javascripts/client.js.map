{"version":3,"file":"client.js","mappings":"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BglDkB,agBhlDlB,kBhBglDkB,EgBhlDlB,ahBglDR,EAAY,EAAI,EAAe,CgBjlD3B,OhBklDD,CgB/kDH,E,kCCD2B/b,G,QACvB4a,EAAmErV,OAA3CvF,EAAE,KAAEI,iBAAiB,uB,EjBsgDxC,wBAAa,wBiBrgDXwa,EjBqgDmC,KAuErC,EiB5kDEA,EjB4kDF,WACT,C,IADCtS,EAAQ,M,EiB3kDD,IAAA0T,mBAAmBhc,EjB4kDD,aiB5kDlB,kBjB4kDkB,EiB5kDlB,ajB4kDR,EAAY,EAAI,EAAe,CiB7kD3B,OjB8kDD,CiB3kDH,E,kCCGyBA,G,QACrB4a,EAAmErV,OAA3CvF,EAAE,KAAEI,iBAAiB,uB,ElB8/CxC,wBAAa,wBkB7/CXwa,ElB6/CmC,KAuErC,EkBpkDEA,ElBokDF,WACT,C,IADCtS,EAAQ,M,EkBnkDD,IAAA2T,iBAAiBjc,ElBokDC,akBpkDlB,kBlBokDkB,EkBpkDlB,alBokDR,EAAY,EAAI,EAAe,CkBrkD3B,OlBskDD,CkBnkDH,E,kCERiCA,G,QAC7B4a,EAA8ErV,OAAtDvF,EAAE,KAAEI,iBAAiB,kC,EpBigDxC,wBAAa,wBoBhgDXwa,EpBggDmC,KAuErC,EoBvkDEA,EpBukDF,WACT,C,IADCtS,EAAQ,M,EoBtkDD,IAAAM,mBAAmB5I,EpBukDD,aoBvkDlB,iBpBukDkB,EoBvkDlB,apBukDR,EAAY,EAAI,EAAe,CoBxkD3B,OpBykDD,CoBtkDH,E,kCCNiCA,G,QAC7B4a,EAA8ErV,OAAtDvF,EAAE,KAAEI,iBAAiB,kC,ErBkgDxC,wBAAa,wBqBjgDXwa,ErBigDmC,KAuErC,EqBxkDEA,ErBwkDF,WACT,C,IADCtS,EAAQ,M,EqBvkDD,IAAA4T,mBAAmBlc,ErBwkDD,aqBxkDlB,iBrBwkDkB,EqBxkDlB,arBwkDR,EAAY,EAAI,EAAe,CqBzkD3B,OrB0kDD,CqBvkDH,E,kCCHkCA,G,QAC9B4a,EAA8ErV,OAAtDvF,EAAE,KAAEI,iBAAiB,kC,EtBggDxC,wBAAa,wBsB//CXwa,EtB+/CmC,KAuErC,EsBtkDEA,EtBskDF,WACT,C,IADCtS,EAAQ,M,EsBrkDD,IAAA6T,oBAAoBnc,EtBskDF,asBtkDlB,kBtBskDkB,EsBtkDlB,atBskDR,EAAY,EAAI,EAAe,CsBvkD3B,OtBwkDD,CsBrkDH,E,kCCdyBiV,G,QACrB2F,EAAqErV,OAA7C0P,EAAE,KAAE7U,iBAAiB,yB,EvBygDxC,wBAAa,wBuBxgDXwa,EvBwgDmC,KAuErC,EuB/kDEA,EvB+kDF,WACT,C,IADCtS,EAAQ,M,EuB9kDD,IAAA8T,eAAenH,EvB+kDG,auB/kDlB,evB+kDkB,EuB/kDlB,avB+kDR,EAAY,EAAI,EAAe,CuBhlD3B,OvBilDD,CuB9kDH,E,kCCDgCjV,G,QAC5B4a,EAA2ErV,OAAnDvF,EAAE,KAAEI,iBAAiB,+B,ExBqgDxC,wBAAa,wBwBpgDXwa,ExBogDmC,KAuErC,EwB3kDEA,ExB2kDF,WACT,C,IADCtS,EAAQ,M,EwB1kDD,IAAA+T,kBAAkBrc,ExB2kDA,awB3kDlB,iBxB2kDkB,EwB3kDlB,axB2kDR,EAAY,EAAI,EAAe,CwB5kD3B,OxB6kDD,CwB1kDH,E,kCCX6BiV,G,QACzB2F,EAAkErV,OAA1C0P,EAAE,KAAE7U,iBAAiB,sB,EzB2gDxC,wBAAa,wByB1gDXwa,EzB0gDmC,KAuErC,EyBjlDEA,EzBilDF,WACT,C,IADCtS,EAAQ,M,EyBhlDD,IAAAgU,eAAerH,EzBilDG,ayBjlDlB,kBzBilDkB,EyBjlDlB,azBilDR,EAAY,EAAI,EAAe,CyBllD3B,OzBmlDD,CyBhlDH,E,kCCMwBA,G,QACpB2F,EAAoFrV,OAA5D0P,EAAE,KAAE7U,iBAAiB,wC,E1BggDxC,wBAAa,wB0B//CXwa,E1B+/CmC,KAuErC,E0BtkDEA,E1BskDF,WACT,C,IADCtS,EAAQ,M,E0BrkDD,IAAAiU,UAAUtH,E1BskDQ,a0BtkDlB,kB1BskDkB,E0BtkDlB,a1BskDR,EAAY,EAAI,EAAe,C0BvkD3B,O1BwkDD,C0BrkDH,E,iCAwCA,OAAO,UAAO,IAClB,E,kCC9CkCA,G,QAC1B2F,EAAiErV,OAAzC0P,EAAE,KAAE7U,iBAAiB,qB,E3BggDxC,wBAAa,wB2B//CXwa,E3B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","sources":["webpack://client/webpack/universalModuleDefinition","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/ICanvasDrawable.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/ICanvasCommand.kt","webpack://client/../../../../src/jsMain/kotlin/main.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Strings.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/Helper.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Maps.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/stringJs.kt","webpack://client/../../../../../../../../../../Users/victor.turansky/projects/seskar/seskar/seskar-core/src/jsMain/kotlin/seskar/js/internal/getIndexedValue.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/element/AjaxBlock.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-web/src/jsMain/generated/web/http/RequestMethod.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Collections.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/element/Block.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/element/Filter.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/element/Form.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Collections.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-js/src/jsMain/kotlin/js/iterable/JsIterable.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/element/Modal.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-browser/src/jsMain/generated/web/html/ButtonType.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/element/Show.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/element/Tab.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/element/Table.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/element/TableRow.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/ActionLink.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/AnchorHref.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/BaseAjaxAction.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-browser/src/jsMain/generated/web/xhr/XMLHttpRequestResponseType.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/math.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/ContextualLink.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Strings.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-browser/src/jsMain/generated/web/dom/parsing/DOMParserSupportedType.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/ContextualLinkEntry.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/FilterActionButton.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/FormActionButton.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Maps.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/FormActionInputM2M.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/FormActionInputM2O.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/FormActionSelectM2O.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/FormErrorInput.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/FormOverrideField.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/ShowActionLink.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/TabButton.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/TableGroupableColumn.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/TablePaginate.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/TableSelectCheckbox.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/base/leaf/TableSortableColumn.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/MainCanvas.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-browser/src/jsMain/generated/web/canvas/CanvasRenderingContext2D.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-web/src/jsMain/generated/web/http/CrossOrigin.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-web/src/jsMain/generated/web/events/Event.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/AddCharCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/AddDrawableCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/AddImageCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/AddStyleCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/AddTableColumnCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/AddTableCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/AddTableRowCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/ChangeStyleCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/DeIndentCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/DeleteCharCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/DeleteDrawableCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/IndentCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/RemoveTableColumnCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/RemoveTableRowCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/command/RmCharCommand.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/item/CanvasCaret.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/item/CanvasFigure.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/item/CanvasImg.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/item/CanvasLink.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/table/CanvasTable.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/table/TxtHeaderCanvas.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/table/TxtRowCanvas.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/text/CanvasLine.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/comparisons/Comparisons.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/text/CanvasText.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/text/H2Canvas.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/text/H3Canvas.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/text/H4Canvas.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/text/Li2Canvas.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/text/LiCanvas.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/text/PCanvas.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/canvas/text/TextStyle.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/diagram/Diagram.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/diagram/DiagramData.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/diagram/DiagramLegend.kt","webpack://client/../../../../src/jsMain/kotlin/taack/ui/diagram/DiagramTransformArea.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_ComparisonsJs.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-browser/src/jsMain/kotlin/web/svg/Document.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-js/src/jsMain/kotlin/js/array/ArrayLike.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-js/src/jsMain/kotlin/js/core/BigInt.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-js/src/jsMain/kotlin/js/iterable/JsIteratorLike.iterator.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-js/src/jsMain/kotlin/js/iterable/JsIterator.ext.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-js/src/jsMain/kotlin/js/iterable/JsIterable.iterator.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/js/math.polyfills.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/globalThis.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/math.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/ArrayBuffer.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/js.arrays/fill.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/js-builtin-sources/libraries/stdlib/jvm/builtins/Number.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Arrays.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Sequences.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/LinkedHashSet.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Sets.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/common/src/generated/_OneToManyTitlecaseMappings.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/charJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Char.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_TitlecaseMappings.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/CharCode.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Ranges.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Sequences.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Iterables.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/builtins/Char.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/builtins/Enum.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/builtins/Library.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/builtins/Primitives.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/BitMask.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/arrays.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/noPackageHacks.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/bitUtils.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/charSequenceJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/collectionsHacks.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/compareTo.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/coreRuntime.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/typeCheckUtils.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/hacks.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/longJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/metadataUtils.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/numberConversion.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/unsigned/src/kotlin/UShort.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/runtime/rangeTo.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Standard.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_ArraysJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_CharCategories.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_DigitChars.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_LetterChars.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_OtherLowercaseChars.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/NumbersJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/Unit.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collectionJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/kotlin.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashMap.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashSet.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableCollection.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableList.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableMap.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableSet.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/ArrayFunctions.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Preconditions.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/ArrayList.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/ArraySorting.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/InternalHashMap.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashMapEntry.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashMapEntryDefault.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/LinkedHashMap.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/console.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/CoroutineImpl.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/InterceptedCoroutine.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/cancellation/CancellationException.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/intrinsics/IntrinsicsJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/exceptions.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/KClassImpl.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/primitives.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/reflection.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/sequenceJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/StringBuilderJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/generated/_WhitespaceChars.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/numberConversions.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/StringNumberConversions.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/regex.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/stringsCode.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/time/DurationUnitJs.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractCollection.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractList.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractMap.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractSet.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/ArrayDeque.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/PrimitiveIterators.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/SequenceBuilder.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/ContinuationInterceptor.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/CoroutineContextImpl.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/intrinsics/Intrinsics.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/enums/EnumEntries.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/internal/progressionUtil.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/PrimitiveRanges.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/ProgressionIterators.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/Progressions.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/Ranges.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Appendable.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/time/Duration.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/time/DurationUnit.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Result.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Tuples.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/HashCode.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/Continuation.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/regexp.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/InternalMap.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/CoroutineContext.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/MutableCollections.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/throwableExtensions.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-web/src/jsMain/generated/web/events/EventTarget.kt","webpack://client/../../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers/kotlin-web/src/jsMain/generated/web/timers/setTimeout.kt","webpack://client/../../../../../../../../../../mnt/agent/work/88b0986a7186d029/atomicfu/src/commonMain/kotlin/kotlinx/atomicfu/Trace.common.kt","webpack://client/../../../../../../../../../../mnt/agent/work/88b0986a7186d029/atomicfu/src/jsAndWasmSharedMain/kotlin/kotlinx/atomicfu/AtomicFU.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CancellableContinuationImpl.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/DispatchedTask.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Job.kt","webpack://client/../../../../../../../../../../mnt/agent/work/88b0986a7186d029/atomicfu/src/commonMain/kotlin/kotlinx/atomicfu/AtomicFU.common.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CompletionState.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineDispatcher.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineExceptionHandler.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/EventLoop.common.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/ThreadLocal.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Exceptions.common.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/JobSupport.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/LinkedList.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/CoroutineExceptionHandlerImpl.common.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/CoroutineExceptionHandlerImpl.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/DispatchedContinuation.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/ThreadContext.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/Symbol.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/Debug.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/internal/CoroutineExceptionHandlerImpl.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmJsShared/src/EventLoop.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/CoroutineContext.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/SchedulerTask.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/StackTraceRecovery.kt","webpack://client/../../../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CancellableContinuation.kt","webpack://client/../../../../compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/StringBuilder.kt","webpack://client/webpack/bootstrap","webpack://client/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"client\"] = factory();\n\telse\n\t\troot[\"client\"] = factory();\n})(globalThis, () => {\nreturn ","package taack.ui.canvas\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.canvas.item.CanvasImg\nimport taack.ui.canvas.item.CanvasLink\nimport taack.ui.canvas.table.CanvasTable\nimport taack.ui.canvas.table.TxtHeaderCanvas\nimport taack.ui.canvas.table.TxtRowCanvas\nimport taack.ui.canvas.text.*\nimport web.canvas.CanvasRenderingContext2D\nimport web.html.HTMLInputElement\n\ninterface ICanvasDrawable : ICanvasSelectable {\n\n    enum class AdocToken(val regex: Regex) {\n        TITLE(Regex(\"^= \")),\n        ATTR(Regex(\"^:([a-z-]+): ([^*`\\n]*)\")),\n        INNER_BLOCK_DELIM(Regex(\"^____(__)+\\n\")),\n        //        INDENT(Regex(\"^> \")),\n        BLOCK_DELIM(Regex(\"^____\\n\")),\n        H4(Regex(\"^==== \")),\n        H3(Regex(\"^=== \")),\n        H2(Regex(\"^== \")),\n        B1(Regex(\"^\\\\* \")),\n        B2(Regex(\"^\\\\*\\\\* \")),\n        FIG(Regex(\"^\\\\.\")),\n        IMAGE(Regex(\"^image::[^:|*`]+\\\\[\\\\]\")),\n        LINK(Regex(\"^link:[^:|*`]+\\\\[.+,download\\\\]\")),\n//        IMAGE(Regex(\"^image::[^:|*`\\n\\\\[]+\")),\n        IMAGE_INLINE(Regex(\"image:[^:|*`]+\")),\n        TABLE_START(Regex(\"^\\\\|===\")),\n//        TABLE_COL(Regex(\"^\\\\|[^*`=\\n][^|*`\\n]+\\\\|([^|*`\\n])+\")),\n        TABLE_COL(Regex(\"^\\\\|[^*`=\\n][^|*`\\n]+(\\\\|([^|*`\\n])+)+\")),\n        TABLE_CELL(Regex(\"^\\\\|\")),\n//        MONO_BOLD(Regex(\"^`\\\\*\\\\*([^*`\\n]*)\\\\*\\\\*`\")),\n        BOLD(Regex(\"^\\\\*\\\\*([^*`\\n]*)\\\\*\\\\*\")),\n        MONO(Regex(\"^`([^`\\n]*)`\")),\n        NEXT_DRAWABLE(Regex(\"^ *\\n *\\n *\")),\n        NEXT_LINE(Regex(\"^\\n\")),\n        NORMAL(Regex(\"^[^\\n]+\")),\n        OTHER(Regex(\"[ \\t]*\")),\n        ERROR(Regex(\"ERRORRRORR\"))\n    }\n\n    class TokenInfo(val sequence: String, val token: AdocToken, val start: Int, val end: Int) {\n        override fun toString(): String {\n            return \"$token: $sequence\"\n        }\n    }\n\n    companion object {\n        fun dumpAsciidoc(mainCanvas: MainCanvas): String {\n            val out = StringBuilder()\n//            out.append(\"= Title\\n\")\n//            out.append(\":doctype: book\\n\")\n//            out.append(\":toc: left\\n\")\n//            out.append(\":toc-title: Table of Contents of {doctitle}\\n\")\n//            out.append(\":toclevels: 2\\n\")\n//            out.append(\":sectnums: 2\\n\")\n//            out.append(\":sectnumlevels: 2\\n\")\n            out.append(\"\\n\")\n            val drawables = mainCanvas.drawables\n            var previousCitationNumber = 0\n            drawables.forEach {\n                out.append(\"\\n\")\n                if (it.citationNumber > previousCitationNumber) {\n                    if (previousCitationNumber == 0)\n                        out.append(\"\\n____\")\n\n                    for (m in 1..<it.citationNumber) {\n                        out.append(\"\\n____\")\n                        for (n in 1..m) {\n                            out.append(\"__\")\n                        }\n                        out.append(\"\\n\")\n                    }\n                } else if (it.citationNumber < previousCitationNumber) {\n                    if (it.citationNumber == 0)\n                        out.append(\"\\n____\")\n                    for (m in 1..<previousCitationNumber) {\n                        out.append(\"\\n____\")\n                        for (n in 1..m) {\n                            out.append(\"__\")\n                        }\n                        out.append(\"\\n\")\n                    }\n                }\n                out.append(it.dumpAsciidoc())\n                previousCitationNumber = it.citationNumber\n            }\n            out.append(\"\\n\")\n            return out.toString()\n        }\n\n        fun readAsciidoc(mainCanvas: MainCanvas): List<ICanvasDrawable> {\n            val canvasDrawables = mutableListOf<ICanvasDrawable>()\n            val tokens = mutableListOf<TokenInfo>()\n            var start = 0\n            var end = 0\n\n            var s = mainCanvas.textarea.value.trim()\n\n            var pt: AdocToken = AdocToken.TITLE\n            while (s.isNotEmpty()) {\n                var match = false\n                for (t in AdocToken.entries) {\n                    val m = t.regex.find(s)\n                    if (m != null) {\n                        trace(\"ICanvasDrawable::readAsciidoc ${m.groups} ${m.range} $t\")\n                        if (m.value.isNotEmpty() && m.range.first == 0) {\n                            match = true\n                            end += m.value.length\n                            tokens.add(TokenInfo(m.value, t, start, end))\n                            start += m.value.length\n                            s = if (pt in listOf(AdocToken.MONO, /*AdocToken.MONO_BOLD,*/ AdocToken.NORMAL, AdocToken.BOLD)) {\n                                s.substring(m.value.length)\n                            } else {\n                                s.substring(m.value.length).trimStart(' ', '\\t', '\\r')\n                            }\n                        }\n                        pt = t\n                        break\n                    }\n                }\n                if (!match) {\n                    tokens.add(TokenInfo(s, AdocToken.ERROR, start, start))\n                    break\n                }\n            }\n\n            trace(\"ICanvasDrawable::readAsciidoc $tokens\")\n\n            val it = tokens.iterator()\n            var currentText: CanvasText? = null\n            var currentTextPosition = 0\n            var tableStart = false\n            val initCells: MutableList<TxtRowCanvas> = mutableListOf()\n            val initHeaders: MutableList<TxtHeaderCanvas> = mutableListOf()\n            var currentIndent = 0\n            var wasIndent = false\n            var wasInBlock = false\n            while (it.hasNext()) {\n//                if (!wasIndent) {\n////                    currentIndent = 0\n//                } else {\n//                    wasIndent = false\n//                }\n                val token = it.next()\n                trace(\"token: [$token]\")\n                val id = (mainCanvas.embeddingForm.f.elements.namedItem(\"id\") as HTMLInputElement).value.toLong()\n                val controller = (mainCanvas.embeddingForm.f.elements.namedItem(\"originController\") as HTMLInputElement).value\n                var varName = mainCanvas.textarea.name\n                if (varName.contains('.'))\n                    varName = varName.substring(0, varName.lastIndexOf('.'))\n                val action = \"downloadBin${varName.replaceFirstChar { if (it.isLowerCase()) it.titlecase() else it.toString() }}Files\"\n\n                when (token.token) {\n                    AdocToken.TITLE -> {}\n                    AdocToken.ATTR -> {}\n                    AdocToken.H2 -> {\n                        currentText = H2Canvas(\"\", currentIndent)\n                        currentTextPosition = token.end\n                        canvasDrawables.add(currentText)\n                    }\n\n                    AdocToken.H3 -> {\n                        currentText = H3Canvas(\"\", currentIndent)\n                        currentTextPosition = token.end\n                        canvasDrawables.add(currentText)\n                    }\n\n                    AdocToken.H4 -> {\n                        currentText = H4Canvas(\"\", currentIndent)\n                        currentTextPosition = token.end\n                        canvasDrawables.add(currentText)\n                    }\n\n                    AdocToken.B1 -> {\n                        currentText = LiCanvas(\"\", currentIndent)\n                        currentTextPosition = token.end\n                        canvasDrawables.add(currentText)\n                    }\n\n                    AdocToken.B2 -> {\n                        currentText = Li2Canvas(\"\", currentIndent)\n                        currentTextPosition = token.end\n                        canvasDrawables.add(currentText)\n                    }\n\n                    AdocToken.TABLE_START -> {\n                        if (tableStart) {\n                            canvasDrawables.add(CanvasTable(initHeaders, initCells))\n                            tableStart = false\n                        } else tableStart = true\n                    }\n                    AdocToken.TABLE_COL -> {\n                        for (txt in token.sequence.split('|')) {\n                            if (txt.isNotEmpty()) {\n                                val h = TxtHeaderCanvas(txt)\n                                currentTextPosition = token.end\n                                initHeaders.add(h)\n                            }\n                        }\n                    }\n                    AdocToken.TABLE_CELL -> {\n                        val t = TxtRowCanvas(\"\")\n                        currentText = t\n                        currentTextPosition = token.end\n                        initCells.add(t)\n                    }\n                    AdocToken.NEXT_DRAWABLE -> {\n                        if (!tableStart) {\n                            currentText = PCanvas(\"\", currentIndent)\n                        }\n                        currentTextPosition = token.end\n                    }\n\n                    AdocToken.NEXT_LINE -> {\n                        currentText = null\n                    }\n//                    AdocToken.MONO_BOLD -> {\n//                        if (canvasDrawables.isNotEmpty() && currentText != canvasDrawables.last())\n//                            canvasDrawables.add(currentText!!)\n//                        currentText?.addToTxtInit(token.sequence.substring(3,token.sequence.length - 3))\n//                        currentText?.addStyle(\n//                            TextStyle.BOLD_MONOSPACED,\n//                            token.start - currentTextPosition,\n//                            token.end - currentTextPosition\n//                        )\n//                        currentTextPosition += 6\n//                    }\n\n                    AdocToken.BOLD -> {\n                        if (canvasDrawables.isNotEmpty() && currentText != canvasDrawables.last())\n                            canvasDrawables.add(currentText!!)\n                        currentText?.addToTxtInit(token.sequence.substring(2,token.sequence.length - 2))\n                        currentText?.addStyle(\n                            TextStyle.BOLD,\n                            token.start - currentTextPosition,\n                            token.end - currentTextPosition\n                        )\n                        currentTextPosition += 4\n                    }\n\n                    AdocToken.MONO -> {\n                        if (canvasDrawables.isNotEmpty() && currentText != canvasDrawables.last())\n                            canvasDrawables.add(currentText!!)\n                        currentText?.addToTxtInit(token.sequence.substring(1,token.sequence.length - 1))\n                        currentText?.addStyle(\n                            TextStyle.MONOSPACED,\n                            token.start - currentTextPosition,\n                            token.end - currentTextPosition\n                        )\n                        currentTextPosition += 2\n                    }\n\n                    AdocToken.NORMAL -> {\n                        if (currentText != null && (canvasDrawables.isNotEmpty() && currentText != canvasDrawables.last()) && !tableStart)\n                            canvasDrawables.add(currentText)\n                        else if (canvasDrawables.isEmpty() || currentText == null) {\n                            currentText = PCanvas(\"\", currentIndent)\n                            canvasDrawables.add(currentText)\n                        }\n\n                        currentText.addToTxtInit(token.sequence)\n                        currentText.addStyle(\n                            TextStyle.NORMAL,\n                            token.start - currentTextPosition,\n                            token.end - currentTextPosition\n                        )\n                    }\n\n                    AdocToken.ERROR -> {\n                        currentText = PCanvas(\"ERROR: $token\", currentIndent)\n                        canvasDrawables.add(currentText)\n}\n                    AdocToken.OTHER -> {}\n//                    AdocToken.INDENT -> {\n//                        wasIndent = true\n//                        currentIndent ++\n//                    }\n\n                    AdocToken.IMAGE -> {\n                        val fileName = token.sequence.substring(\"image::\".length, token.sequence.length - 2)\n                        canvasDrawables.add(CanvasImg(\"/$controller/$action/$id?path=$fileName\", fileName, 0))\n                        currentTextPosition = token.end\n                    }\n                    AdocToken.IMAGE_INLINE -> {\n\n                    }\n\n                    AdocToken.BLOCK_DELIM -> {\n                        if (!wasInBlock) {\n                            wasInBlock = true\n                            currentIndent = 1\n                        } else {\n                            wasInBlock = false\n                            currentIndent = 0\n                        }\n                    }\n                    AdocToken.INNER_BLOCK_DELIM -> {\n                        val indent = 1 + (token.sequence.length - 4) / 2\n                        if (currentIndent == indent) {\n                            currentIndent--\n                        } else currentIndent = indent\n                    }\n\n                    AdocToken.FIG -> {}\n                    AdocToken.LINK -> {\n                        val fileName = token.sequence.substring(\"link:\".length, token.sequence.indexOf('['))\n                        canvasDrawables.add(CanvasLink(\"/$controller/$action/$id?path=$fileName\", fileName, 0))\n                        currentTextPosition = token.end\n                    }\n                }\n            }\n            currentText = PCanvas(\"\", currentIndent)\n            canvasDrawables.add(currentText)\n            return canvasDrawables\n        }\n\n    }\n\n    var globalPosYStart: Double\n    var globalPosYEnd: Double\n    var citationNumber: Int\n    val citationXPos: Double\n        get() = 16.0 * citationNumber\n\n    fun isClicked(posX: Double, posY: Double): Boolean {\n        return posY in globalPosYStart..globalPosYEnd\n    }\n\n    fun drawCitation(ctx: CanvasRenderingContext2D, textY: Double, height: Double): Double {\n        ctx.save()\n        ctx.fillStyle = \"#dadde3\"\n        for (i in 0 until citationNumber) {\n            val marginTop = getSelectedText()!!.marginTop\n            val marginBottom = getSelectedText()!!.marginBottom\n            ctx.fillRect(8.0 + 16.0 * i, textY - height - marginTop, 4.0, height + marginTop + marginBottom)        }\n        ctx.restore()\n        return citationXPos\n    }\n\n    fun getSelectedText(posX: Double? = null, posY: Double? = null): CanvasText?\n\n    fun draw(ctx: CanvasRenderingContext2D, width: Double, posY: Double, posX: Double): Double\n\n    fun dumpAsciidoc(): String\n\n    fun reset()\n}","package taack.ui.canvas.command\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.canvas.ICanvasDrawable\nimport taack.ui.canvas.table.CanvasTable\nimport taack.ui.canvas.text.CanvasText\nimport web.uievents.MouseEvent\n\ninterface ICanvasCommand {\n    fun doIt(): Boolean\n    fun embeddedText(drawables: MutableList<ICanvasDrawable>, textIndex: Int, textSubIndex: Int, mouseEvent: MouseEvent?): CanvasText? {\n        trace(\"embeddedText textIndex: $textIndex, textSubIndex: $textSubIndex, mouseEvent: $mouseEvent\")\n        val currentDrawable = drawables[textIndex]\n        if (currentDrawable is CanvasTable) {\n            currentDrawable.currentRowIndex = textSubIndex\n        }\n        return currentDrawable.getSelectedText(mouseEvent?.offsetX, mouseEvent?.offsetY)\n    }\n}","\nimport taack.ui.base.element.Block\nimport web.events.EventHandler\nimport web.location.location\nimport web.window.window\n\nfun main() {\n    if (!location.href.contains(\"login\")) {\n        Block.href = location.href\n        Block.getSiblingBlock(null)\n        window.onpopstate = EventHandler{\n            if (location.hash.isEmpty()) location.reload()\n        }\n    }\n}",null,"package taack.ui.base\n\nimport js.iterable.asSequence\nimport taack.ui.base.element.Block\nimport taack.ui.base.element.Filter\nimport taack.ui.base.element.Form\nimport web.blob.Blob\nimport web.dom.document\nimport web.events.EventHandler\nimport web.events.EventType\nimport web.form.FormData\nimport web.form.FormDataEntryValue\nimport web.history.history\nimport web.html.HTMLAnchorElement\nimport web.html.HTMLButtonElement\nimport web.http.RequestMethod\nimport web.location.location\nimport web.uievents.MouseEvent\nimport web.url.URL\nimport web.xhr.XMLHttpRequest\n\ntypealias CloseModalPostProcessing = ((String, String, Map<String, String>) -> Unit)\n\nclass Helper {\n    companion object {\n        private var level = 0\n        private const val BLOCK_START = \"__ajaxBlockStart__\"\n        private const val BLOCK_END = \"__ajaxBlockEnd__\"\n        private const val OPEN_MODAL = \"__openModal__:\"\n        private const val REFRESH_MODAL = \"__refreshModal__:\"\n        private const val CLOSE_LAST_MODAL = \"__closeLastModal__:\"\n        private const val CLOSE_LAST_MODAL_AND_UPDATE_BLOCK = \"__closeLastModalAndUpdateBlock__:\"\n        private const val FIELD_INFO = \":__FieldInfo__:\"\n        private const val FIELD_INFO_END = \":__FieldInfoEnd__\"\n        private const val RELOAD = \"__reload__\"\n        private const val REDIRECT = \"__redirect__\"\n        private const val ERROR_START = \"__ErrorKeyStart__\"\n        var historyState = HashMap<String, FormDataEntryValue>()\n        var traceEnabled = true\n        fun trace(level: Int, message: String) {\n            if (traceEnabled) {\n                var s = \"\"\n                for (i in 0..level) {\n                    s += \"    \"\n                }\n                println(s + message)\n            }\n        }\n\n        fun trace(message: String) {\n            if (traceEnabled) trace(level, message)\n        }\n\n        fun traceIndent(message: String) {\n            if (traceEnabled) trace(level++, message)\n        }\n\n        fun traceDeIndent(message: String) {\n            if (traceEnabled) trace(--level, message)\n        }\n\n        private fun mapAjaxErrors(text: String): Map<String, String> {\n            val m = mutableMapOf<String, String>()\n            val errStart = \"__ErrorKeyStart__\"\n            val errEnd = \"__ErrorKeyEnd__\"\n\n            if (text.startsWith(errStart)) {\n\n                var pos1 = errStart.length\n                var pos2 = text.indexOf(':')\n                do {\n                    val abId = text.substring(pos1, pos2)\n                    pos1 = text.indexOf(errEnd, pos2)\n                    val content = text.substring(pos2 + 1, pos1)\n                    pos1 += errEnd.length + errStart.length\n                    pos2 = text.indexOf(':', pos1)\n\n                    m[abId] = content\n                } while (pos2 != -1)\n            }\n            return m\n        }\n\n        fun filterForm(\n            filter: Filter,\n            offset: Int? = null,\n            sort: String? = null,\n            order: String? = null,\n            b: HTMLButtonElement? = null\n        ) {\n            b?.disabled = true\n            val innerText = b?.innerText\n            b?.innerText = \"Submitting ...\"\n            val f = filter.f\n            val fd = FormData(f)\n            val formUrl = URL(f.action)\n            fd[\"isAjax\"] = \"true\"\n            fd[\"refresh\"] = \"true\"\n            fd[\"filterTableId\"] = filter.filterId\n            fd[\"ajaxBlockId\"] = filter.parent.blockId\n            if (offset != null) fd[\"offset\"] = offset.toString()\n            else {\n                if (sort != null) fd[\"sort\"] = sort\n                if (order != null && order != \"neutral\") fd[\"order\"] = order\n                else fd.delete(\"order\")\n            }\n\n            val xhr = XMLHttpRequest()\n            xhr.onloadend = EventHandler {\n                //Filter used saved to historyState\n                historyState = fd.entries().asSequence().map {\n                    it.component1() to it.component2()\n                }.toMap() as HashMap<String, FormDataEntryValue>\n                hydrateStateToUrl(formUrl)\n                history.pushState(\"{}\", document.title, formUrl)\n                processAjaxLink(xhr.responseText, filter)\n                b?.disabled = false\n                if (innerText != null) b.innerText = innerText\n\n            }\n            xhr.open(RequestMethod.POST, f.action)\n            xhr.send(fd)\n        }\n\n        fun mapAjaxBlock(text: String): Map<String, String> {\n            trace(\"Mapping Ajax Content ... ${text.substring(0, 10)}\")\n            val m = mutableMapOf<String, String>()\n            if (text.startsWith(BLOCK_START)) {\n                var pos1 = 0\n                do {\n                    pos1 += BLOCK_START.length\n                    val pos2 = text.indexOf(':', pos1)\n                    val abId = text.substring(pos1, pos2)\n                    pos1 = text.indexOf(BLOCK_END, pos2)\n                    m[abId] = text.substring(pos2 + 1, pos1)\n\n                    pos1 = text.indexOf(BLOCK_START, pos1)\n                } while (pos1 != -1)\n            }\n            return m\n        }\n\n        private val processingStack: ArrayDeque<CloseModalPostProcessing> = ArrayDeque()\n\n        fun processAjaxLink(text: String, base: BaseElement?, process: CloseModalPostProcessing? = null) {\n            val block = base?.getParentBlock() ?: Block.getSiblingBlock(null)!!\n            when {\n                text.contains(RELOAD) -> {\n                    location.href = (Block.href ?: \"\")\n                }\n\n                text.startsWith(CLOSE_LAST_MODAL) -> {\n                    val pos = text.indexOf(':', CLOSE_LAST_MODAL.length)\n                    if (text[CLOSE_LAST_MODAL.length] != ':' || text.subSequence(\n                            text.length - FIELD_INFO_END.length,\n                            text.length\n                        ) == FIELD_INFO_END\n                    ) {\n                        var posField = text.indexOf(FIELD_INFO)\n                        val id = text.substring(CLOSE_LAST_MODAL.length, pos)\n                        val value =\n                            if (posField == -1) text.substring(pos + 1) else text.substring(pos + 1, posField)\n                        var otherField = emptyMap<String, String>()\n                        while (posField != -1) {\n                            val endFieldNameIndex = text.indexOf(':', posField + FIELD_INFO.length)\n                            val fieldName = text.substring(posField + FIELD_INFO.length, endFieldNameIndex)\n                            val endFieldValueIndex = text.indexOf(FIELD_INFO_END, endFieldNameIndex)\n                            val fieldValue = text.substring(endFieldNameIndex + 1, endFieldValueIndex)\n                            otherField = otherField.plus(Pair(fieldName, fieldValue))\n                            posField = text.indexOf(FIELD_INFO, endFieldValueIndex)\n                        }\n                        if (processingStack.isNotEmpty()) {\n                            trace(\"Helper::process\")\n                            val f = processingStack.removeLast()\n                            f(id, value, otherField)\n                        }\n                    } else {\n                        if (text.length > CLOSE_LAST_MODAL.length + 1 && text.substring(CLOSE_LAST_MODAL.length + 1)\n                                .startsWith(BLOCK_START)\n                        ) {\n                            mapAjaxBlock(text.substring(CLOSE_LAST_MODAL.length + 1)).map {\n                                val target = block.parent?.parent?.ajaxBlockElements?.get(it.key)\n                                target!!.d.innerHTML = it.value\n                                target.refresh()\n                            }\n                        }\n                    }\n                    trace(\"Helper::closing Modal ${block.modal.mId}\")\n                    if (block.parent != null) block.parent.close()\n                    else block.modal.close()\n                }\n\n                text.startsWith(CLOSE_LAST_MODAL_AND_UPDATE_BLOCK) -> {\n                    trace(\"Helper::CLOSE_LAST_MODAL_AND_UPDATE_BLOCK ${block.modal.mId}\")\n                    if (block.parent != null) block.parent.close()\n                    else block.modal.close()\n                    val innerText = text.substring(CLOSE_LAST_MODAL_AND_UPDATE_BLOCK.length)\n                    processAjaxLink(innerText, block.parent ?: base, process)\n                }\n\n                text.startsWith(BLOCK_START) -> {\n                    mapAjaxBlock(text).map {\n                        val target = block.ajaxBlockElements[it.key]\n                        if (target != null) {\n                            var pos1 = 0\n                            if (it.value.startsWith(BLOCK_START))\n                                pos1 += it.value.indexOf(':') + 1\n                            var pos2 = it.value.length - pos1\n                            if (it.value.endsWith(BLOCK_END))\n                                pos2 -= BLOCK_END.length\n                            target.d.innerHTML = it.value.substring(pos1, pos2)//.substring(it.value.indexOf(':') + 1)\n                            target.refresh()\n                        }\n                    }\n                }\n\n                text.startsWith(OPEN_MODAL) -> {\n                    trace(\"Helper::opening modal ...\")\n                    if (process != null) {\n                        processingStack.add(process)\n                    }\n                    block.modal.open(text.substring(OPEN_MODAL.length))\n                    val s = block.modal.dModalBody.getElementsByTagName(\"script\")\n                    trace(\"Executing $s\")\n                }\n\n                text.startsWith(REFRESH_MODAL) -> {\n                    trace(\"Helper::refresh modal $text\")\n                    if (process != null) {\n                        processingStack.add(process)\n                    }\n                    block.modal.dModalBody.innerHTML = text\n                    val s = block.modal.dModalBody.getElementsByTagName(\"script\")\n                    trace(\"Executing $s\")\n                }\n\n                text.startsWith(REDIRECT) -> {\n                    trace(\"Helper::redirect ${text.substring(REDIRECT.length)}\")\n                    location.href = text.substring(REDIRECT.length)\n                }\n\n                text.startsWith(ERROR_START) -> {\n                    var hasErrors = false\n                    (base as Form).cleanUpErrors()\n                    val map = mapAjaxErrors(text).map { me ->\n                        hasErrors = true\n                        val d = base.errorPlaceHolders[me.key]?.d\n                        if (d != null) {\n                            d.innerHTML = me.value\n                            d.style.display = \"block\"\n                        }\n                    }\n                    if (!hasErrors) {\n                        trace(\"FormActionButton::hasNoErrors\")\n                    } else {\n                        trace(\"FormActionButton::hasErrors $map\")\n                    }\n                }\n\n                else -> {\n                    if (text.isNotEmpty()) {\n                        trace(\"Helper::update current block $text\")\n                        block.updateContent(text)\n                    }\n                }\n\n            }\n        }\n\n        fun saveOrOpenBlob(blob: Blob, fileName: String) {\n            trace(\"Helper::saveOrOpenBlob blob.size: ${blob.size}, fileName: $fileName\")\n            val a = document.createElement(\"a\") as HTMLAnchorElement\n            a.href = URL.createObjectURL(blob)\n            a.download = fileName\n            a.dispatchEvent(MouseEvent(EventType(\"click\")))\n        }\n\n        fun hydrateStateToUrl(targetUrl: URL) {\n            historyState.forEach { entry: Map.Entry<String, FormDataEntryValue> ->\n                if (entry.key != \"refresh\" && entry.value.toString().isNotEmpty()) {\n                    targetUrl.searchParams[entry.key] = entry.value.toString()\n                }\n            }\n        }\n\n    }\n}\n",null,null,null,"package taack.ui.base.element\n\nimport js.array.asList\nimport taack.ui.base.BaseElement\nimport taack.ui.base.Helper\nimport taack.ui.base.leaf.ActionLink\nimport taack.ui.base.leaf.AnchorHref\nimport taack.ui.base.leaf.ContextualLink\nimport taack.ui.diagram.Diagram\nimport web.events.EventHandler\nimport web.html.HTMLDivElement\nimport web.http.RequestMethod\nimport web.timers.TimerHandler\nimport web.timers.setTimeout\nimport web.xhr.XMLHttpRequest\nimport kotlin.time.Duration\n\nclass AjaxBlock(val parent: Block, val d: HTMLDivElement) :\n    BaseElement {\n    companion object {\n        fun getSiblingAjaxBlock(p: Block): List<AjaxBlock> {\n            val divElements: List<*> = p.d.querySelectorAll(\"div[ajaxBlockId]\").asList()\n            return divElements.map {\n                AjaxBlock(p, it as HTMLDivElement)\n            }\n        }\n    }\n\n    private val ajaxBlockId = d.attributes.getNamedItem(\"ajaxBlockId\")!!.value\n    val blockId = ajaxBlockId\n    var filters: Map<String, Filter> = mutableMapOf()\n    private var tables: Map<String, Table> = mutableMapOf()\n    private var forms: List<Form> = mutableListOf()\n    private var shows: List<Show> = mutableListOf()\n    private var diagrams: List<Diagram> = mutableListOf()\n    private var progressId: String = \"\"\n    private val onPoll: TimerHandler = { onPoll() }\n\n    private val innerScripts = d.getElementsByTagName(\"script\")\n\n    init {\n        Helper.traceIndent(\"AjaxBlock::init +++ blockId: $blockId\")\n        refresh()\n        parent.ajaxBlockElements[blockId] = this\n        Helper.traceDeIndent(\"AjaxBlock::init --- blockId: $blockId\")\n    }\n\n\n    private fun onPoll() {\n        Helper.trace(\"AjaxBlock::onPoll\")\n        val xhr = XMLHttpRequest()\n        xhr.onloadend = EventHandler {\n            Helper.processAjaxLink(xhr.responseText, parent)\n        }\n        xhr.open(RequestMethod.GET,\"/progress/drawProgress/$progressId?isAjax=true&refresh=true\", true)\n        xhr.send()\n    }\n\n    private fun poolDrawProgress(blockId: String) {\n        progressId = blockId.substring(13)\n        Helper.traceIndent(\"poolDrawProgress::start +++ progressId: $progressId\")\n        setTimeout(Duration.parse(\"1s\"), onPoll)\n        Helper.traceDeIndent(\"poolDrawProgress::start ---\")\n    }\n\n    fun refresh() {\n        Helper.traceIndent(\"AjaxBlock::refresh +++ blockId: $blockId\")\n        if (blockId.startsWith(\"drawProgress=\")) {\n            poolDrawProgress(blockId)\n        }\n        filters = Filter.getSiblingFilterBlock(this).associateBy { it.filterId + blockId }\n        tables = Table.getSiblingTable(this).associateBy { it.tableId + blockId }\n        forms = Form.getSiblingForm(this)\n        shows = Show.getSiblingShow(this)\n        diagrams = Diagram.getSiblingDiagram(this)\n        for (i in 0 until innerScripts.length) {\n            eval(innerScripts[i].innerHTML)\n        }\n        ActionLink.getActionLinks(this)\n        AnchorHref.getAnchorHref(this)\n        ContextualLink.getContextualLinks(this)\n        Helper.traceDeIndent(\"AjaxBlock::refresh --- \")\n    }\n\n    fun updateContent(newContent: String) {\n        Helper.trace(\"AjaxBlock::updateContent ... ${d.className}\")\n        d.innerHTML = newContent\n        refresh()\n    }\n\n    override fun getParentBlock(): Block {\n        return parent\n    }\n}",null,null,"package taack.ui.base.element\n\nimport taack.ui.base.BaseElement\nimport taack.ui.base.Helper\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.base.leaf.ActionLink\nimport taack.ui.base.leaf.AnchorHref\nimport taack.ui.base.leaf.ContextualLink\nimport web.dom.document\nimport web.html.HTMLDivElement\n\nclass Block(val parent: Modal?, val d: HTMLDivElement) :\n    BaseElement {\n    companion object {\n        var href: String? = null\n        fun getSiblingBlock(p: Modal?): Block? {\n            val div = p?.dModalBody ?: document.querySelector(\"div[blockId]\") as HTMLDivElement?\n            return if (div != null) Block(p, div) else null\n        }\n    }\n\n    val ajaxBlockElements = mutableMapOf<String, AjaxBlock>()\n    val modal: Modal\n    private var tabs: List<Tab>\n    val blockId: String\n    private var modalNumber = 0\n\n    init {\n        val tmpBlockId = d.attributes.getNamedItem(\"blockId\")?.value\n        traceIndent(\"Block::init +++ ${d.id}, ${tmpBlockId}.\")\n        if (tmpBlockId != null && tmpBlockId != \"\") {\n            blockId = tmpBlockId\n            ActionLink.getActionLinks(this)\n            AnchorHref.getAnchorHref(this)\n            ContextualLink.getContextualLinks(this)\n\n        } else {\n            blockId = \"modal${modalNumber++}\"\n        }\n        tabs = Tab.getSiblingTab(this)\n        AjaxBlock.getSiblingAjaxBlock(this)\n        modal = Modal.buildModal(this)\n\n//        AjaxBlock(this, d)\n        traceDeIndent(\"Block::init --- ${d.id}\")\n    }\n\n    override fun getParentBlock(): Block {\n        return this\n    }\n\n    override fun toString(): String {\n        return \"Block{ajaxBlockElements: $ajaxBlockElements, parent: ${parent}}\"\n    }\n\n    fun updateContent(newContent: String) {\n        Helper.trace(\"Block::updateContent ...\")\n        d.children[0].innerHTML = newContent\n        for (i in 1 until d.children.length) {\n            d.children[i].remove()\n        }\n        AjaxBlock.getSiblingAjaxBlock(this)\n    }\n}\n","package taack.ui.base.element\n\nimport js.array.asList\nimport taack.ui.base.BaseElement\nimport taack.ui.base.Helper\nimport taack.ui.base.leaf.FilterActionButton\nimport web.html.HTMLFormElement\n\nclass Filter(val parent: AjaxBlock, val f: HTMLFormElement):\n    BaseElement {\n    companion object {\n        fun getSiblingFilterBlock(p: AjaxBlock): List<Filter> {\n            val elements: List<*> = p.d.querySelectorAll(\"form[taackfilterid]\").asList()\n            return elements.map {\n                Filter(p, it as HTMLFormElement)\n            }\n        }\n    }\n\n    val filterId = f.attributes.getNamedItem(\"taackFilterId\")!!.value\n    private val actions: List<FilterActionButton>\n\n    init {\n        Helper.traceIndent(\"Filter::init +++ filterId: $filterId\")\n        actions = FilterActionButton.getSiblingFilterAction(this)\n        Helper.traceDeIndent(\"Filter::init --- filterId: $filterId\")\n    }\n\n    override fun getParentBlock(): Block {\n        return parent.getParentBlock()\n    }\n}","package taack.ui.base.element\n\nimport js.array.asList\nimport taack.ui.base.BaseElement\nimport taack.ui.base.Helper\nimport taack.ui.base.leaf.*\nimport taack.ui.canvas.MainCanvas\nimport web.dom.document\nimport web.file.File\nimport web.html.HTMLDivElement\nimport web.html.HTMLFormElement\nimport web.html.HTMLTextAreaElement\n\nclass Form(val parent: AjaxBlock, val f: HTMLFormElement):\n    BaseElement {\n    companion object {\n        fun getSiblingForm(p: AjaxBlock): List<Form> {\n            val elements: List<*> = p.d.querySelectorAll(\"form.taackForm\").asList()\n            return elements.map {\n                Form(p, it as HTMLFormElement)\n            }\n        }\n    }\n\n    private val formName = f.attributes.getNamedItem(\"name\")?.value\n    val mapFileToSend: MutableMap<String, MutableList<File>> = mutableMapOf()\n    private val actions: List<FormActionButton>\n    private var m2oList: List<FormActionInputM2O>\n    private val overrideFields: List<FormOverrideField>\n    private var m2oSelectM2OList: List<FormActionSelectM2O>\n    private var m2mList: List<FormActionInputM2M>\n    val errorPlaceHolders: Map<String, FormErrorInput>\n\n    fun rescanOverridableInputs() {\n        Helper.traceIndent(\"Form::rescanOverridableInputs +++ formName: $formName\")\n        m2oList = FormActionInputM2O.getSiblingFormActionInputO2M(this)\n        m2mList = FormActionInputM2M.getSiblingFormActionInputM2M(this)\n        m2oSelectM2OList = FormActionSelectM2O.getSiblingFormActionSelectO2M(this)\n        Helper.traceDeIndent(\"Form::rescanOverridableInputs --- formName: $formName\")\n    }\n\n    init {\n        Helper.traceIndent(\"Form::init +++ formName: $formName\")\n        actions = FormActionButton.getSiblingFormAction(this)\n        m2oList = FormActionInputM2O.getSiblingFormActionInputO2M(this)\n        m2mList = FormActionInputM2M.getSiblingFormActionInputM2M(this)\n        overrideFields = FormOverrideField.getSiblingFormOverrideField(this)\n        m2oSelectM2OList = FormActionSelectM2O.getSiblingFormActionSelectO2M(this)\n        errorPlaceHolders = FormErrorInput.getSiblingErrorInput(this).associateBy {\n            it.fieldName\n        }\n\n        val textareaList = f.querySelectorAll(\"textarea.asciidoctor\")\n\n        for (element in textareaList) {\n            val textarea = element as HTMLTextAreaElement\n            textarea.style.display = \"none\"\n            val scrollContainer = document.createElement(\"div\") as HTMLDivElement\n            scrollContainer.style.height = \"calc(max(30vh, 320px))\"\n            scrollContainer.style.border = \"1px solid grey\"\n            scrollContainer.style.overflow = \"auto\"\n            val largeContainer = document.createElement(\"div\") as HTMLDivElement\n            largeContainer.style.overflow = \"hidden\"\n            val canvasContainer = document.createElement(\"div\") as HTMLDivElement\n            largeContainer.append(canvasContainer)\n            scrollContainer.append(largeContainer)\n            textarea.parentElement?.append(scrollContainer)\n            MainCanvas(this, textarea, canvasContainer, scrollContainer)\n        }\n\n\n        Helper.traceDeIndent(\"Form::init --- formName: $formName\")\n    }\n\n    fun cleanUpErrors() {\n        for (errorInput in errorPlaceHolders.values) {\n            errorInput.d.style.display = \"none\"\n            errorInput.d.innerHTML = \"\"\n        }\n    }\n\n    override fun getParentBlock(): Block {\n        return parent.getParentBlock()\n    }\n}",null,null,"package taack.ui.base.element\n\nimport kotlinx.browser.document\nimport org.w3c.dom.events.Event\nimport org.w3c.dom.events.KeyboardEvent\nimport taack.ui.base.BaseElement\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport web.events.EventHandler\nimport web.html.ButtonType\nimport web.html.HTMLButtonElement\nimport web.html.HTMLDivElement\n\nclass Modal(val parent: Block) : BaseElement {\n    companion object {\n        fun buildModal(p: Block): Modal {\n            return Modal(p)\n        }\n\n        var id: Int = 0\n    }\n\n    private var dModal: HTMLDivElement\n    private var dModalDialog: HTMLDivElement\n    var dModalBody: HTMLDivElement\n    private val dModalContent: HTMLDivElement\n    private val escModalCallback = { event: Event ->\n        val e = event as KeyboardEvent\n        if (e.key == \"Escape\") {\n            e.preventDefault()\n            close()\n        }\n    }\n\n    val mId = id++\n\n    init {\n        trace(\"Modal::init $mId\")\n        dModal = document.createElement(\"div\") as HTMLDivElement\n        dModal.classList.add(\"modal\")\n        dModalDialog = document.createElement(\"div\") as HTMLDivElement\n        dModalDialog.classList.add(\"modal-dialog\", \"modal-xl\", \"modal-dialog-scrollable\", \"modal-dialog-centered\")\n        dModalContent = document.createElement(\"div\") as HTMLDivElement\n        dModalBody = document.createElement(\"div\") as HTMLDivElement\n        dModalBody.classList.add(\"modal-body\", \"overflow-y-auto\")\n        dModalContent.classList.add(\"modal-content\")\n        dModalContent.classList.add(\"taackModal\")\n        val dClose = document.createElement(\"div\") as HTMLDivElement\n        val fullscreenButton = document.createElement(\"button\") as HTMLButtonElement\n        fullscreenButton.type = ButtonType.button\n        fullscreenButton.className = \"btn-fullscreen\"\n        fullscreenButton.onclick = EventHandler { e ->\n            e.preventDefault()\n            toggleFullscreen()\n        }\n        val closeButton = document.createElement(\"button\") as HTMLButtonElement\n        closeButton.type = ButtonType.button\n        closeButton.className = \"btn-close\"\n        closeButton.onclick = EventHandler { e ->\n            e.preventDefault()\n            close()\n        }\n        document.addEventListener(\"keydown\", escModalCallback)\n\n        dClose.classList.add(\"taack-close\")\n        dClose.classList.add(\"modal-header\")\n        dClose.appendChild(fullscreenButton)\n        dClose.appendChild(closeButton)\n        dModalContent.appendChild(dClose)\n        dModalContent.appendChild(dModalBody)\n        dModalDialog.appendChild(dModalContent)\n        dModal.appendChild(dModalDialog)\n        parent.d.parentElement?.appendChild(dModal)\n    }\n\n    fun open(htmlContent: String) {\n        traceIndent(\"Modal::open $mId\")\n        dModalBody.innerHTML = htmlContent\n        dModal.style.display = \"block\"\n        Block.getSiblingBlock(this)\n        document.body!!.classList.add(\"modal-open\")\n        document.body!!.style.paddingRight = \"15px\"\n        document.body!!.style.overflowY = \"hidden\"\n        val modalBackdrop = document.createElement(\"div\") as HTMLDivElement\n        modalBackdrop.id = \"modal-backdrop-$mId\"\n        modalBackdrop.classList.add(\"modal-backdrop\", \"fade\", \"show\")\n        parent.d.parentElement!!.appendChild(modalBackdrop)\n    }\n\n    fun close() {\n        traceDeIndent(\"Modal::close $mId\")\n        dModal.style.display = \"none\"\n        dModalBody.innerHTML = \"\"\n        document.removeEventListener(\"keydown\", escModalCallback)\n        document.body!!.classList.remove(\"modal-open\")\n        document.body!!.style.removeProperty(\"padding-right\")\n        document.body!!.style.removeProperty(\"overflow-y\")\n        document.getElementById(\"modal-backdrop-$mId\")?.remove()\n    }\n\n    private fun toggleFullscreen() {\n        trace(\"Modal::fullscreen $mId\")\n        if (dModalDialog.classList.contains(\"modal-fullscreen\")) {\n            dModalDialog.classList.remove(\"modal-fullscreen\")\n        } else {\n            dModalDialog.classList.add(\"modal-fullscreen\")\n        }\n    }\n\n    override fun getParentBlock(): Block {\n        return parent\n    }\n\n    override fun toString(): String {\n        return \"Modal\"\n    }\n}",null,"package taack.ui.base.element\n\n\nimport js.array.asList\nimport taack.ui.base.BaseElement\nimport taack.ui.base.Helper\nimport taack.ui.base.leaf.ShowActionLink\nimport web.html.HTMLDivElement\n\nclass Show(val parent: AjaxBlock, val d: HTMLDivElement):\n    BaseElement {\n    companion object {\n        fun getSiblingShow(p: AjaxBlock): List<Show> {\n            val elements: List<*> = p.d.querySelectorAll(\"div.taackShow\").asList()\n            return elements.map {\n                Show(p, it as HTMLDivElement)\n            }\n        }\n    }\n\n    private val actions: List<ShowActionLink>\n\n    init {\n        Helper.traceIndent(\"Show::init +++\")\n        actions = ShowActionLink.getSiblingShowActionLink(this)\n        Helper.traceDeIndent(\"Show::init ---\")\n    }\n\n    override fun getParentBlock(): Block {\n        return parent.getParentBlock()\n    }\n}","package taack.ui.base.element\n\nimport js.array.asList\nimport taack.ui.base.BaseElement\nimport taack.ui.base.Helper\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.base.leaf.*\nimport web.html.HTMLUListElement\n\nclass Tab(val parent: Block, val d: HTMLUListElement) :\n    BaseElement {\n    companion object {\n        fun getSiblingTab(p: Block): List<Tab> {\n            val elements: List<*> = p.d.querySelectorAll(\"ul[role='tablist']\").asList()\n            return elements.map {\n                Tab(p, it as HTMLUListElement)\n            }\n        }\n\n    }\n\n    private val tabs: List<TabButton>?\n\n    init {\n        traceIndent(\"Tab::init +++\")\n        tabs = TabButton.getSiblingTabButton(this)\n        traceDeIndent(\"Tab::init ---\")\n    }\n\n    override fun getParentBlock(): Block {\n        return this.parent\n    }\n\n    override fun toString(): String {\n        return \"Tab{}\"\n    }\n\n    fun updateContent(newContent: String) {\n        Helper.trace(\"Block::updateContent ...\")\n        d.children[0].innerHTML = newContent\n        AjaxBlock.getSiblingAjaxBlock(this.parent)\n    }\n}\n","package taack.ui.base.element\n\nimport js.array.asList\nimport taack.ui.base.BaseElement\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.base.leaf.TableGroupableColumn\nimport taack.ui.base.leaf.TableSortableColumn\nimport taack.ui.base.leaf.TablePaginate\nimport taack.ui.base.leaf.TableSelectCheckbox\nimport web.html.HTMLTableElement\n\nclass Table(val parent: AjaxBlock, val t: HTMLTableElement) :\n    BaseElement {\n    companion object {\n        fun getSiblingTable(p: AjaxBlock): List<Table> {\n            val elements: List<*> = p.d.querySelectorAll(\"table[taackTableId]\").asList()\n            return elements.map {\n                Table(p, it as HTMLTableElement)\n            }\n        }\n    }\n\n    private val tableSortableColumns: List<TableSortableColumn>?\n    private val tableGroupableColumns: List<TableGroupableColumn>?\n    val rows: List<TableRow>\n    val tableId = t.attributes.getNamedItem(\"taackTableId\")!!.value\n    val filter: Filter\n    private val paginate: TablePaginate?\n    val tableSelectCheckboxes: Pair<TableSelectCheckbox, List<TableSelectCheckbox>>?\n\n    init {\n        traceIndent(\"Table::init +++ tableId: $tableId\")\n        val f = parent.filters[tableId + parent.blockId]\n        filter = f!!\n        tableSortableColumns = TableSortableColumn.getSiblingSortableColumn(this)\n        tableGroupableColumns = TableGroupableColumn.getSiblingGroupableColumn(this)\n        rows = TableRow.getSiblingRows(this)\n        paginate = TablePaginate.getSiblingTablePaginate(this)\n        tableSelectCheckboxes = TableSelectCheckbox.getSiblingTableSelectCheckbox(this)\n        traceDeIndent(\"Table::init --- tableId: $tableId\")\n    }\n\n    override fun getParentBlock(): Block {\n        return parent.getParentBlock()\n    }\n}","package taack.ui.base.element\n\nimport js.array.asList\nimport taack.ui.base.BaseElement\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport web.events.EventHandler\nimport web.html.HTMLTableCellElement\nimport web.html.HTMLTableRowElement\n\nclass TableRow(val parent: Table, private val r: HTMLTableRowElement) :\n    BaseElement {\n    companion object {\n        fun getSiblingRows(p: Table): List<TableRow> {\n            val elements: List<*> = p.t.querySelectorAll(\"tr[taacktag]\").asList()\n            return elements.map {\n                TableRow(p, it as HTMLTableRowElement)\n            }\n        }\n    }\n\n    private val rowGroup: Int? = r.attributes.getNamedItem(\"taackTableRowGroup\")?.value?.toInt()\n    private val rowGroupHasChildren: Boolean? = r.attributes.getNamedItem(\"taackTableRowGroupHasChildren\")?.value?.toBoolean()\n\n    init {\n        traceIndent(\"TableRow::init +++ ${rowGroup ?: \"\"} ${rowGroupHasChildren ?: \"\"}\")\n        if (rowGroup != null && rowGroupHasChildren == true) {\n            (r.querySelector(\".firstCellInGroup\")!! as HTMLTableCellElement).onclick = EventHandler { e ->\n                if (e.target is HTMLTableCellElement) {\n                    val offsetX = e.clientX - (e.target as HTMLTableCellElement).getBoundingClientRect().left\n                    if (offsetX in (5.0 + 20.0 * rowGroup)..(15.0 + 20.0 * rowGroup)) {\n                        onclick()\n                    }\n                }\n            }\n        }\n        traceDeIndent(\"TableRow::init ---\")\n    }\n\n    private fun expends() {\n        r.setAttribute(\"taackTableRowIsExpended\", \"true\")\n        var expends = false\n        val rg = rowGroup!! + 1\n\n        for (r in parent.rows) {\n            if (expends && r.rowGroup == rg) {\n                r.r.style.removeProperty(\"display\")\n            } else if (expends && r.rowGroup == rowGroup) {\n                break\n            }\n            if (r === this) {\n                expends = true\n            }\n        }\n    }\n\n    private fun collapse() {\n        r.setAttribute(\"taackTableRowIsExpended\", \"false\")\n        var collapse = false\n        val rg = rowGroup!! + 1\n\n        for (r in parent.rows) {\n            if (collapse && r.rowGroup!! >= rg) {\n                r.r.style.display = \"none\"\n                if (rowGroupHasChildren == true) {\n                    r.r.setAttribute(\"taackTableRowIsExpended\", \"false\")\n                }\n            } else if (collapse && r.rowGroup!! == rowGroup) {\n                break\n            }\n            if (r === this) {\n                collapse = true\n            }\n        }\n    }\n\n    private fun onclick(): Boolean {\n        if (r.attributes.getNamedItem(\"taackTableRowIsExpended\")?.value?.toBoolean() == true) {\n            collapse()\n        } else {\n            expends()\n        }\n        return false\n    }\n\n    override fun getParentBlock(): Block {\n        return parent.getParentBlock()\n    }\n}","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.element.AjaxBlock\nimport taack.ui.base.element.Block\nimport web.dom.document\nimport web.html.HTMLAnchorElement\n\nclass ActionLink(parent: Block, a: HTMLAnchorElement) : BaseAjaxAction(parent, a) {\n    companion object {\n        fun getActionLinks(p: AjaxBlock): List<ActionLink>? {\n            val elements: List<*> = p.d.querySelectorAll(\"a[ajaxaction]\").asList()\n            return elements.map {\n                ActionLink(p.parent, it as HTMLAnchorElement)\n            }\n        }\n\n        fun getActionLinks(p: Block): List<ActionLink> {\n            val elements: List<*> = document.querySelectorAll(\"body>nav a[ajaxaction]\").asList()\n            return (elements + p.d.querySelectorAll(\"div[blockId]>nav a[ajaxaction]\").asList()).map {\n                ActionLink(p, it as HTMLAnchorElement)\n            }\n        }\n    }\n}","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.element.AjaxBlock\nimport taack.ui.base.element.Block\nimport web.html.HTMLAnchorElement\n\nclass AnchorHref(parent: Block, a: HTMLAnchorElement) : BaseAjaxAction(parent, a) {\n    companion object {\n        fun getAnchorHref(p: AjaxBlock): List<AnchorHref> {\n            val elements: List<*> = p.d.querySelectorAll(\"a.taackMenu[href]\").asList()\n            return elements.map {\n                AnchorHref(p.parent, it as HTMLAnchorElement)\n            }\n        }\n        fun getAnchorHref(p: Block): List<AnchorHref> {\n            return (p.d.querySelectorAll(\"a.taackMenu[href]\").asList().map {\n                AnchorHref(p, it as HTMLAnchorElement)\n            })\n        }\n    }\n}","package taack.ui.base.leaf\n\nimport taack.ui.base.BaseElement\nimport taack.ui.base.Helper.Companion.processAjaxLink\nimport taack.ui.base.Helper.Companion.saveOrOpenBlob\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.LeafElement\nimport web.blob.Blob\nimport web.dom.document\nimport web.events.EventHandler\nimport web.history.history\nimport web.html.HTMLElement\nimport web.http.RequestMethod\nimport web.location.location\nimport web.uievents.MouseEvent\nimport web.url.URL\nimport web.xhr.XMLHttpRequest\nimport web.xhr.XMLHttpRequestResponseType\nimport kotlin.math.min\n\nopen class BaseAjaxAction(private val parent: BaseElement?, a: HTMLElement) : LeafElement {\n\n    companion object {\n        fun createUrl(isAjax: Boolean, action: String?, additionalParams: Map<String, String>? = null): URL {\n            if (action != null) {\n                val url = URL(action, \"${location.protocol}//${location.host}\")\n                if (isAjax) url.searchParams.set(\"isAjax\", \"true\")\n                additionalParams?.forEach {\n                    url.searchParams.set(it.key, it.value)\n                }\n                return url\n            } else return URL(\"${location.protocol}//${location.host}\")\n        }\n    }\n\n    private val action: String? =\n        a.attributes.getNamedItem(\"ajaxAction\")?.value ?: a.attributes.getNamedItem(\"href\")?.value\n    private val isHref = a.hasAttribute(\"href\")\n\n    init {\n        trace(\"BaseAjaxAction::init $action $isHref\")\n        if (!(action != null && action.contains(\"#\")))\n            a.onclick = EventHandler { e -> onclickBaseAjaxAction(e) }\n        else trace(\"BaseAjaxAction::init no onClick added\")\n    }\n\n    private fun onclickBaseAjaxAction(e: MouseEvent) {\n        e.preventDefault()\n        val targetUrl = createUrl(!isHref, action).toString()\n        trace(\"BaseAjaxAction::onclickBaseAjaxAction\")\n        //Display load spinner\n        val loader = document.getElementById(\"taack-load-spinner\")\n        loader?.classList?.remove(\"tck-hidden\")\n        val xhr = XMLHttpRequest()\n        if (action?.contains(\"downloadBin\") == true) {\n            trace(\"Binary Action ... $action\")\n            xhr.responseType = XMLHttpRequestResponseType.blob\n        }\n\n        xhr.onloadend = EventHandler { ev ->\n            ev.preventDefault()\n            trace(\"BaseAjaxAction::onclickBaseAjaxAction: Load End, action: $action responseType: '${xhr.responseType}'\")\n            loader?.classList?.add(\"tck-hidden\")\n            if (xhr.responseType == XMLHttpRequestResponseType.blob) {\n                val contentDispo = xhr.getResponseHeader(\"Content-Disposition\")\n                if (contentDispo != null) {\n                    val fileName =\n                        Regex(\"filename[^;=\\n]*=((['\\\"]).*?\\\\2|[^;\\n]*)\").find(contentDispo)?.groupValues?.get(1)\n                    if (fileName != null) {\n                        trace(\"saveOrOpenBlog $fileName\")\n                        saveOrOpenBlob(xhr.response as Blob, fileName)\n                    }\n                }\n            } else {\n                val text = xhr.responseText\n                if (text.substring(0, min(20, text.length)).contains(Regex(\" html\"))) {\n                    trace(\"Full webpage ...|$action|${document.title}|${document.documentURI}\")\n                    history.pushState(\"{}\", document.title, targetUrl)\n                    trace(\"Setting location.href: $targetUrl\")\n                    location.href = targetUrl\n                    document.write(text)\n                    document.close()\n                } else {\n                    trace(\"BaseAjaxAction::onclickBaseAjaxAction => processAjaxLink $parent\")\n                    processAjaxLink(text, parent)\n                }\n            }\n        }\n\n        if (!action.isNullOrEmpty()) {\n//            xhr.open(\"GET\", createUrl(!isHref, action).toString())\n            xhr.open(RequestMethod.GET, targetUrl)\n            xhr.send()\n        }\n    }\n}\n",null,null,"package taack.ui.base.leaf\n\nimport js.array.asList\nimport kotlinx.browser.window\nimport taack.ui.base.LeafElement\nimport taack.ui.base.element.AjaxBlock\nimport taack.ui.base.element.Block\nimport web.dom.Document\nimport web.dom.document\nimport web.dom.parsing.DOMParser\nimport web.dom.parsing.DOMParserSupportedType\nimport web.events.EventHandler\nimport web.html.HTMLAnchorElement\nimport web.html.HTMLDivElement\nimport web.html.HTMLElement\nimport web.html.HTMLSpanElement\nimport web.http.RequestMethod\nimport web.xhr.XMLHttpRequest\nimport kotlin.math.min\n\nclass ContextualLink(private val parent: Block, a: HTMLSpanElement, className: String, fieldName: String, id: Long) : LeafElement {\n    companion object {\n        fun getContextualLinks(p: AjaxBlock): List<ContextualLink>? {\n            val elements: List<*> = p.d.querySelectorAll(\"span[taackcontextualmenu]\").asList()\n            if (elements.isEmpty()) return emptyList()\n            return elements.map {\n                (it as HTMLSpanElement).getAttribute(\"taackcontextualmenu\")?.let { attribute ->\n                    val (className, fieldName, idValue) = attribute.split(\";\")\n                    ContextualLink(p.parent, it, className, fieldName, idValue.toLong())\n                }!!\n            }\n        }\n\n        fun getContextualLinks(p: Block): List<ContextualLink> {\n            val elements: List<*> = document.querySelectorAll(\"body>nav span[taackcontextualmenu]\").asList()\n            if (elements.isEmpty()) return emptyList()\n            return (elements + p.d.querySelectorAll(\"div[blockId]>nav span[taackcontextualmenu]\").asList()).map {\n                (it as HTMLSpanElement).getAttribute(\"taackcontextualmenu\")?.let { attribute ->\n                    val (className, fieldName, idValue) = attribute.split(\";\")\n                    ContextualLink(p, it, className, fieldName, idValue.toLong())\n                }!!\n            }\n        }\n    }\n\n    private var activeContextMenu: HTMLDivElement? = null\n    private val contextCloseCallback = EventHandler {\n        closeContextMenu()\n    }\n    private fun closeContextMenu() {\n        console.log(\"close\")\n        activeContextMenu?.let { document.body.removeChild(it) }\n        (document.asDynamic()).removeEventListener(\"click\", contextCloseCallback)\n        activeContextMenu = null\n    }\n\n    private fun buildCopyDropdown(a: HTMLElement): HTMLElement? {\n        val dropdownItem = document.createElement(\"li\")\n        var hasCopy = false\n        dropdownItem.textContent = \"Copy\"\n        dropdownItem.className = \"context-has-dropdown\"\n        val nestedUl = document.createElement(\"ul\")\n        nestedUl.className = \"custom-context-menu nested-dropdown\"\n        if (!a.textContent.isNullOrEmpty()) {\n            val copy = document.createElement(\"li\")\n            copy.textContent = \"Copy text\"\n            copy.onclick = EventHandler { _ ->\n                a.textContent?.let { text ->\n                    window.navigator.clipboard.writeText(text)\n                }\n            }\n            nestedUl.append(copy)\n            hasCopy = true\n        }\n        val id = a.getAttribute(\"ajaxaction\")?.split('/')?.last()?.replace(\"?isAjax=true\", \"\")\n        if (id?.all { it.isDigit() } == true) {\n            val copyId = document.createElement(\"li\")\n            copyId.textContent = \"Copy ID\"\n            copyId.onclick = EventHandler { _ ->\n                window.navigator.clipboard.writeText(id)\n            }\n            nestedUl.append(copyId)\n            hasCopy = true\n        }\n        if (!hasCopy) return null\n        dropdownItem.append(nestedUl)\n        dropdownItem.onmouseenter = EventHandler {\n            val rect = dropdownItem.getBoundingClientRect()\n            val potentialRightEdge = rect.right + nestedUl.offsetWidth\n            if (potentialRightEdge > window.innerWidth) {\n                nestedUl.classList.add(\"flip-left\")\n            } else {\n                nestedUl.classList.remove(\"flip-left\")\n            }\n        }\n        return dropdownItem\n    }\n\n    init {\n        a.oncontextmenu = EventHandler { e ->\n            e.preventDefault() //Block default context menu\n            closeContextMenu() // Close context if already opened\n            val xhr = XMLHttpRequest()\n            xhr.open(RequestMethod.GET, \"/taackContextMenu/index?className=$className&fieldName=$fieldName&id=$id\", true)\n            xhr.onload = EventHandler {\n                if (xhr.status == 200.toShort()) {\n                    val parser = DOMParser()\n                    val response = parser.parseFromString(xhr.responseText, DOMParserSupportedType.textHtml)\n                    buildCopyDropdown(a)?.let { response.querySelector(\"ul\")?.append(it) }\n                    val contextMenu = document.createElement(\"div\") as HTMLDivElement\n                    contextMenu.className = \"custom-context-menu\"\n                    contextMenu.style.apply {\n                        position = \"absolute\"\n                        document.body.appendChild(contextMenu)\n                        val maxX = window.innerWidth - contextMenu.offsetWidth\n                        val maxY = window.innerHeight - contextMenu.offsetHeight\n                        left = \"${min(e.clientX, maxX)}px\"\n                        top = \"${min(e.clientY, maxY)}px\"\n                        zIndex = \"9999\"\n                    }\n                    addIdToAnchors(response, id)\n                    contextMenu.append(response.body)\n                    activeContextMenu = contextMenu\n                    document.body.appendChild(activeContextMenu!!)\n                    (document.asDynamic()).addEventListener(\"click\", contextCloseCallback)\n                    activeContextMenu?.onmouseleave = EventHandler {\n                        closeContextMenu()\n                    }\n                    ContextualLinkEntry.getDropdownMenu(parent)\n                }\n            }\n            xhr.send()\n        }\n    }\n\n\n    private fun addIdToAnchors(doc: Document, id: Long) {\n        doc.querySelectorAll(\"a\").asList().forEach { anchor ->\n            val anchorElement = anchor as HTMLAnchorElement\n            val currentHref = anchorElement.href\n            if (currentHref.isNotEmpty()) {\n                anchorElement.href = if (currentHref.contains(\"?\")) {\n                    \"${currentHref}&id=$id&isAjax=true\"\n                } else {\n                    \"${currentHref}?id=$id&isAjax=true\"\n                }\n            }\n        }\n    }\n}",null,null,"package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.element.Block\nimport web.dom.document\nimport web.html.HTMLAnchorElement\n\nclass ContextualLinkEntry(a: HTMLAnchorElement) : BaseAjaxAction(null, a) {\n    companion object {\n\n        fun getDropdownMenu(parent: Block): List<ContextualLinkEntry> {\n            return (document.querySelectorAll(\"a.dropdown-item[href]\").asList().map {\n                ContextualLinkEntry(it as HTMLAnchorElement)\n            })\n        }\n    }\n}","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.Helper\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.LeafElement\nimport taack.ui.base.element.Filter\nimport web.events.Event\nimport web.events.EventHandler\nimport web.html.HTMLButtonElement\n\nclass FilterActionButton(private val parent: Filter, private val b: HTMLButtonElement?) : LeafElement {\n    companion object {\n        fun getSiblingFilterAction(f: Filter): List<FilterActionButton> {\n            val elements: List<*> = f.f.querySelectorAll(\"button[formaction]\").asList()\n            return elements.map {\n                FilterActionButton(f, it as HTMLButtonElement)\n            }\n        }\n    }\n\n    init {\n        trace(\"FilterActionButton::init ${b?.id}\")\n        b?.onclick = EventHandler { e ->\n            onClick(e)\n        }\n    }\n\n    private fun onClick(e: Event) {\n        e.preventDefault()\n        Helper.filterForm(parent, 0, null, null, b)\n    }\n}","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.Helper\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.LeafElement\nimport taack.ui.base.element.Form\nimport web.dom.document\nimport web.events.Event\nimport web.events.EventHandler\nimport web.form.FormData\nimport web.html.HTMLButtonElement\nimport web.html.HTMLInputElement\nimport web.html.HTMLTextAreaElement\nimport web.http.RequestMethod\nimport web.location.location\nimport web.xhr.XMLHttpRequest\nimport kotlin.math.min\n\nclass FormActionButton(private val parent: Form, private val b: HTMLButtonElement) : LeafElement {\n    companion object {\n        fun getSiblingFormAction(f: Form): List<FormActionButton> {\n            val elements: List<*> = f.f.querySelectorAll(\"button[formaction]\").asList()\n            return elements.map {\n                FormActionButton(f, it as HTMLButtonElement)\n            }\n        }\n    }\n\n    init {\n        trace(\"FormActionButton::init ${b.formAction}\")\n        b.onclick = EventHandler { e ->\n            onClick(e)\n        }\n    }\n\n    private fun modalReturnSelect(key: String, value: String, otherField: Map<String, String>) {\n        trace(\"FormActionButton::modalReturnSelect $key $value $otherField\")\n        for (field in otherField) {\n            val taOrI = parent.f.querySelector(\"#${field.key}\")\n            if (taOrI is HTMLInputElement) taOrI.value = field.value\n            else if (taOrI is HTMLTextAreaElement) taOrI.value = field.value\n        }\n    }\n\n    private fun onClick(e: Event) {\n        b.disabled = true\n        val innerText = b.innerText\n        b.innerText = \"Submitting ...\"\n        e.preventDefault()\n        trace(\"FormActionButton::onclick: ${b.formAction}\")\n        val f = parent.f\n        val fd = FormData(f)\n        fd.append(\"isAjax\", \"true\")\n        parent.mapFileToSend.forEach { inputKey ->\n            inputKey.value.forEach { fileValue ->\n                fd.append(inputKey.key, fileValue)\n            }\n        }\n        val xhr = XMLHttpRequest()\n        xhr.onloadend = EventHandler {\n            b.disabled = false\n            b.innerText = innerText\n            val t = xhr.responseText\n            if (t.substring(0, min(20, t.length)).contains(\"<!DOCTYPE html>\", false)) {\n                location.href = b.formAction\n                document.write(t)\n                document.close()\n            } else {\n                Helper.processAjaxLink(t, parent, ::modalReturnSelect)\n            }\n        }\n        xhr.open(RequestMethod.POST, b.formAction)\n        xhr.send(fd)\n    }\n}\n",null,"package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.Helper\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.LeafElement\nimport taack.ui.base.element.Form\nimport web.events.Event\nimport web.events.EventHandler\nimport web.html.HTMLElement\nimport web.html.HTMLInputElement\nimport web.html.HTMLSelectElement\nimport web.html.HTMLTextAreaElement\nimport web.http.RequestMethod\nimport web.xhr.XMLHttpRequest\n\nclass FormActionInputM2M(private val parent: Form, private val i: HTMLInputElement) : LeafElement {\n    companion object {\n        fun getSiblingFormActionInputM2M(f: Form): List<FormActionInputM2M> {\n            val elements: List<*> = f.f.querySelectorAll(\"input[taackAjaxFormM2MAction]\").asList()\n            return elements.map {\n                FormActionInputM2M(f, it as HTMLInputElement)\n            }\n        }\n    }\n\n    private val inputId = i.attributes.getNamedItem(\"taackAjaxFormM2MInputId\")!!.value\n    private val input = i.parentElement!!.querySelector(\"#${inputId}\") as HTMLInputElement\n    private val inputName = input.attributes.getNamedItem(\"attr-name\")!!.value\n    private val m2mClassList = input.parentElement!!.classList\n    init {\n\n        trace(\"FormActionInputM2M::init $inputName $m2mClassList\")\n        if (m2mClassList.contains(\"M2MToDuplicate\")) input.name = \"\"\n        i.onclick = EventHandler { e ->\n            onClick(e)\n        }\n    }\n\n    private fun onClick(e: Event) {\n        e.preventDefault()\n        trace(\"FormActionInputM2M::onclick\")\n        val action = i.attributes.getNamedItem(\"taackAjaxFormM2MAction\")!!.value\n        val additionalParams = mutableMapOf<String, String>()\n        i.attributes.getNamedItem(\"taackFieldInfoParams\")?.value?.split(\",\")?.map { s: String ->\n            val v = parent.f.elements.asList().find { it.attributes.getNamedItem(\"name\")?.value == s }\n            if (v is HTMLSelectElement) {\n                if (v.value.isNotBlank())\n                    additionalParams[\"ajaxParams.$s\"] = v.value\n            }\n            if (v is HTMLInputElement) {\n                if (v.value.isNotBlank())\n                    additionalParams[\"ajaxParams.$s\"] = v.value\n            }\n        }\n\n        val xhr = XMLHttpRequest()\n        val url = BaseAjaxAction.createUrl(true, action, additionalParams)\n\n        xhr.onloadend = EventHandler {\n            Helper.processAjaxLink(xhr.responseText, parent.parent.parent, ::modalReturnSelect)\n        }\n        xhr.open(RequestMethod.GET, url)\n        xhr.send()\n    }\n\n    private fun modalReturnSelect(key: String, value: String, otherField: Map<String, String>) {\n        trace(\"FormActionInputM2M::modalReturnSelect $key $value\")\n        val m2mDiv = i.parentElement!!\n        trace(\"AUO1 $m2mDiv\")\n        if (m2mDiv.classList.contains(\"M2MToDuplicate\")) {\n            val m2mDivCloned = m2mDiv.cloneNode(true) as HTMLElement\n            FormActionInputM2M(parent, m2mDivCloned.querySelector(\"input[taackAjaxFormM2MAction]\") as HTMLInputElement)\n            m2mDiv.parentElement!!.appendChild(m2mDivCloned)\n        }\n        m2mDiv.classList.remove(\"M2MToDuplicate\")\n        m2mDiv.classList.add(\"M2MParent\")\n        i.value = value\n        val i2 = i.parentElement!!.querySelector(\"#${inputId}\")!! as HTMLInputElement\n        i2.name = inputName\n        i2.value = key\n        for (field in otherField) {\n            val taOrI = parent.f.querySelector(\"#${field.key}\")\n            if (taOrI is HTMLInputElement) taOrI.value = field.value\n            else if (taOrI is HTMLTextAreaElement) taOrI.value = field.value\n        }\n    }\n}","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.Helper\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.LeafElement\nimport taack.ui.base.element.Form\nimport web.events.Event\nimport web.events.EventHandler\nimport web.html.HTMLInputElement\nimport web.html.HTMLSelectElement\nimport web.html.HTMLTextAreaElement\nimport web.http.RequestMethod\nimport web.xhr.XMLHttpRequest\n\nclass FormActionInputM2O(private val parent: Form, private val i: HTMLInputElement) : LeafElement {\n    companion object {\n        fun getSiblingFormActionInputO2M(f: Form): List<FormActionInputM2O> {\n            val elements: List<*> = f.f.querySelectorAll(\"input[taackAjaxFormM2OAction]\").asList()\n            return elements.map {\n                FormActionInputM2O(f, it as HTMLInputElement)\n            }\n        }\n    }\n\n    init {\n        trace(\"FormActionInputM2O::init ${i.name}\")\n        i.onclick = EventHandler{ e ->\n            onClick(e)\n        }\n    }\n\n    private fun onClick(e: Event) {\n        e.preventDefault()\n        trace(\"FormActionInputM2O::onclick\")\n        val action = i.attributes.getNamedItem(\"taackAjaxFormM2OAction\")!!.value\n        val additionalParams = mutableMapOf<String, String>()\n        i.attributes.getNamedItem(\"taackFieldInfoParams\")?.value?.split(\",\")?.map {\n            var v = parent.f.elements.namedItem(it.replace(\".id\", \"\"))\n            if (v == null) v = parent.f.elements.namedItem(it)\n            if (v is HTMLSelectElement) {\n                if (v.value.isNotBlank())\n                    additionalParams[\"ajaxParams.$it\"] = v.value\n\n            }\n            if (v is HTMLInputElement) {\n                if (v.value.isNotBlank())\n                    additionalParams[\"ajaxParams.$it\"] = v.value\n            }\n        }\n        val url = BaseAjaxAction.createUrl(true, action, additionalParams)\n        // TODO: change to Post (see FilterActionButton.kt)\n        val xhr = XMLHttpRequest()\n        xhr.onloadend = EventHandler {\n            Helper.processAjaxLink(xhr.responseText, parent.parent.parent, ::modalReturnSelect)\n        }\n        xhr.open(RequestMethod.GET, url)\n        xhr.send()\n    }\n\n    private fun modalReturnSelect(key: String, value: String, otherField: Map<String, String>) {\n        trace(\"FormActionInputM2O::modalReturnSelect $key $value\")\n        i.value = value\n        val i2 = i.parentElement!!.querySelector(\"input[type=hidden]\")!! as HTMLInputElement\n        i2.value = key\n        for (field in otherField) {\n            val taOrI = parent.f.querySelector(\"#${field.key}\")\n            if (taOrI is HTMLInputElement) taOrI.value = field.value\n            else if (taOrI is HTMLTextAreaElement) taOrI.value = field.value\n        }\n    }\n}","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.Helper\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.LeafElement\nimport taack.ui.base.element.Form\nimport web.dom.document\nimport web.events.Event\nimport web.events.EventHandler\nimport web.html.HTMLInputElement\nimport web.html.HTMLOptionElement\nimport web.html.HTMLSelectElement\nimport web.html.HTMLTextAreaElement\nimport web.http.RequestMethod\nimport web.xhr.XMLHttpRequest\n\nclass FormActionSelectM2O(private val parent: Form, private val sel: HTMLSelectElement) : LeafElement {\n    companion object {\n        fun getSiblingFormActionSelectO2M(f: Form): List<FormActionSelectM2O> {\n            val elements: List<*> = f.f.querySelectorAll(\"select.taackAjaxFormSelectM2O\").asList()\n            return elements.map {\n                FormActionSelectM2O(f, it as HTMLSelectElement)\n            }\n        }\n    }\n\n    init {\n        trace(\"FormActionSelectM2O::init ${sel.name}\")\n        sel.onmousedown = EventHandler { e ->\n            onClick(e)\n            e.preventDefault()\n        }\n    }\n\n    private fun onClick(e: Event) {\n        e.preventDefault()\n        trace(\"FormActionInputM2O::onclick\")\n        val action = sel.attributes.getNamedItem(\"taackAjaxFormM2OAction\")!!.value\n        val additionalParams = mutableMapOf<String, String>()\n        sel.attributes.getNamedItem(\"taackFieldInfoParams\")?.value?.split(\",\")?.map {\n            val v = parent.f.elements.namedItem(it)\n            if (v is HTMLSelectElement) {\n                if (v.value.isNotBlank())\n                    additionalParams[\"ajaxParams.$it\"] = v.value\n            }\n            if (v is HTMLInputElement) {\n                if (v.value.isNotBlank())\n                    additionalParams[\"ajaxParams.$it\"] = v.value\n            }\n        }\n        // TODO: change to Post (see FilterActionButton.kt)\n        val url = BaseAjaxAction.createUrl(true, action, additionalParams)\n        val xhr = XMLHttpRequest()\n        xhr.onloadend = EventHandler {\n            Helper.processAjaxLink(xhr.responseText, parent.parent.parent, ::modalReturnSelect)\n        }\n        xhr.open(RequestMethod.GET, url)\n        xhr.send()\n    }\n\n    private fun modalReturnSelect(key: String, value: String, otherField: Map<String, String>) {\n        trace(\"FormActionSelectM2O::modalReturnSelect $key $value\")\n        val opt = document.createElement(\"option\") as HTMLOptionElement\n        opt.value = key\n        opt.text = value\n        opt.selected = true\n        sel.options.add(opt, 0)\n        for (field in otherField) {\n            val taOrI = parent.f.querySelector(\"#${field.key}\")\n            if (taOrI is HTMLInputElement) taOrI.value = field.value\n            else if (taOrI is HTMLTextAreaElement) taOrI.value = field.value\n        }\n    }\n}","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.LeafElement\nimport taack.ui.base.element.Form\nimport web.html.HTMLDivElement\n\nclass FormErrorInput(private val parent: Form, val d: HTMLDivElement) : LeafElement {\n    companion object {\n        fun getSiblingErrorInput(p: Form): List<FormErrorInput> {\n            val elements: List<*> = p.f.querySelectorAll(\"div[taackfielderror]\").asList()\n            return elements.map {\n                FormErrorInput(p, it as HTMLDivElement)\n            }\n        }\n    }\n\n    val fieldName: String = d.attributes.getNamedItem(\"taackFieldError\")!!.value\n\n    init {\n        trace(\"FormErrorInput::init $fieldName\")\n    }\n}\n\n","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.base.LeafElement\nimport taack.ui.base.element.Form\nimport web.events.Event\nimport web.events.EventHandler\nimport web.html.HTMLImageElement\n\nclass FormOverrideField(private val parent: Form, private val i: HTMLImageElement) : LeafElement {\n    companion object {\n        fun getSiblingFormOverrideField(f: Form): List<FormOverrideField> {\n            val elements: List<*> = f.f.querySelectorAll(\"img[taackonclickinnerhtml]\").asList()\n            return elements.map {\n                FormOverrideField(f, it as HTMLImageElement)\n            }\n        }\n    }\n\n    init {\n        trace(\"FormOverrideField::init ${i.id}\")\n        i.onclick = EventHandler { e ->\n            onClick(e)\n        }\n    }\n\n    private fun onClick(e: Event) {\n        e.preventDefault()\n        traceIndent(\"FormActionInputM2O::onclick +++\")\n        val action = i.attributes.getNamedItem(\"taackOnclickInnerHTML\")!!.value\n        i.parentElement?.innerHTML = action\n        parent.rescanOverridableInputs()\n        traceDeIndent(\"FormActionInputM2O::onclick ---\")\n    }\n\n}","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.element.Show\nimport web.html.HTMLAnchorElement\n\nclass ShowActionLink(parent: Show, a: HTMLAnchorElement) : BaseAjaxAction(parent, a) {\n    companion object {\n        fun getSiblingShowActionLink(p: Show): List<ShowActionLink> {\n            val elements: List<*> = p.d.querySelectorAll(\"a.taackShowAction\").asList()\n            return elements.map {\n                ShowActionLink(p, it as HTMLAnchorElement)\n            }\n        }\n    }\n}\n\n","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.BaseElement\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.base.element.AjaxBlock\nimport taack.ui.base.element.Block\nimport taack.ui.base.element.Tab\nimport web.dom.Element\nimport web.dom.parsing.DOMParser\nimport web.dom.parsing.DOMParserSupportedType\nimport web.events.EventHandler\nimport web.form.FormData\nimport web.html.*\nimport web.http.RequestMethod\nimport web.xhr.XMLHttpRequest\n\nclass TabButton(val parent: Tab, val b: HTMLButtonElement) : BaseElement  {\n    companion object {\n        fun getSiblingTabButton(p: Tab): List<TabButton> {\n            val elements: List<*> = p.d.querySelectorAll(\"button[role='tab']:not(form button)\").asList()\n            return elements.map {\n                TabButton(p, it as HTMLButtonElement)\n            }\n        }\n    }\n\n    init {\n        traceIndent(\"TabButton::init +++ id: ${b.id}\")\n        b.onclick = EventHandler { e ->\n            e.preventDefault()\n            val tabIndex = b.getAttribute(\"id\")!!.split(\"-\").last()\n            val tabId = b.getAttribute(\"id\")!!.split(\"-\")[1]\n            val fd = FormData()\n            fd[\"isAjax\"] = \"true\"\n            fd[\"refresh\"] = \"true\"\n            fd[\"tabIndex\"] = tabIndex\n            fd[\"tabId\"] = tabId\n            val xhr = XMLHttpRequest()\n            xhr.onloadstart = EventHandler {\n                b.onclick = EventHandler { console.log(\"Tab already requested\")}\n            }\n            xhr.onloadend = EventHandler {\n                // Make new parser to parse xhr.responseText\n                val parser = DOMParser()\n                // Parse to a DOM document to allow query selection\n                val responseDoc = parser.parseFromString(xhr.responseText, DOMParserSupportedType.textHtml)\n                // Get the clicked tab from the response\n                val tabResponseEl = responseDoc.querySelector(\"#tab-${tabId}-${tabIndex}-pane\")\n                val div: Element? = parent.parent.d.querySelector(\".tab-content\")\n                println(\"div: ${div?.id}\")\n                if (div != null && tabResponseEl != null) {\n                    // Get the clicked tab content pane and fill it with the previously parsed response's inner html\n                    div.querySelector(\"#tab-${tabId}-${tabIndex}-pane\")?.innerHTML = tabResponseEl.innerHTML\n                    AjaxBlock.getSiblingAjaxBlock(parent.parent)\n                }\n            }\n            //Show loading spinner while loading\n            parent.parent.d.querySelector(\"#tab-${tabId}-${tabIndex}-pane\")?.innerHTML = \"<div class='taack-tab-load'></div>\"\n            xhr.open(RequestMethod.POST, b.getAttribute(\"action\")!!)\n            xhr.send(fd)\n        }\n    }\n    override fun getParentBlock(): Block {\n        return parent.parent\n    }\n}","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.Helper\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.LeafElement\nimport taack.ui.base.element.AjaxBlock\nimport taack.ui.base.element.Table\nimport web.events.EventHandler\nimport web.form.FormData\nimport web.html.HTMLAnchorElement\nimport web.html.HTMLInputElement\nimport web.html.HTMLSpanElement\nimport web.http.RequestMethod\nimport web.uievents.MouseEvent\nimport web.xhr.XMLHttpRequest\n\nclass TableGroupableColumn(private val parent: Table, s: HTMLSpanElement) : LeafElement {\n    companion object {\n        fun getSiblingGroupableColumn(p: Table): List<TableGroupableColumn> {\n            val elements: List<*> = p.t.querySelectorAll(\"span[groupField]\").asList()\n            return elements.map {\n                TableGroupableColumn(p, it as HTMLSpanElement)\n            }\n        }\n        var grouping = 0\n    }\n\n    private val property: String = s.attributes.getNamedItem(\"groupField\")!!.value\n    private val direction: String?\n    private val groupCheck: HTMLInputElement = s.querySelector(\"input\")!! as HTMLInputElement\n\n    init {\n        val fd = FormData(parent.filter.f)\n        if (property == fd[\"sort\"]) {\n            direction = fd[\"order\"] as String\n        } else {\n            direction = null\n        }\n        trace(\"TableGroupableColumn::init $property $direction\")\n        if (direction != null && direction != \"\") s.classList.add(direction)\n        val a = s.childNodes[0] as HTMLAnchorElement\n        a.onclick = EventHandler { e ->\n            onClick(e)\n        }\n\n        groupCheck.checked = fd.get(\"grouping\")!!.toString().contains(property)\n        groupCheck.onclick = EventHandler{\n            onGroup()\n        }\n    }\n\n    private fun onGroup() {\n        trace(\"TableGroupableColumn::onGroup\")\n        val f = parent.filter.f\n        val fd = FormData(f)\n        val g = fd[\"grouping\"]!! as String\n        val isGrouped = g.contains(property)\n        if (!isGrouped) {\n            fd[\"grouping\"] = \"$g $property\".trim()\n        } else {\n            fd[\"grouping\"] = g.replace(property, \"\").trim()\n        }\n        fd.append(\"isAjax\", \"true\")\n        val xhr = XMLHttpRequest()\n        xhr.onloadend = EventHandler {\n            Helper.mapAjaxBlock(xhr.responseText).map { me ->\n                parent.parent.d.innerHTML = me.value\n            }\n            AjaxBlock.getSiblingAjaxBlock(parent.parent.parent)\n\n        }\n        xhr.open(RequestMethod.POST, \"\")\n        xhr.send(fd)\n    }\n\n    private fun onClick(e: MouseEvent) {\n        e.preventDefault()\n        trace(\"TableGroupableColumn::onClick\")\n        val dir = if (direction == null || direction == \"\") \"desc\" else if (direction == \"desc\") \"asc\" else null\n        Helper.filterForm(parent.filter, null, property, dir)\n    }\n}","package taack.ui.base.leaf\n\nimport taack.ui.base.Helper\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.LeafElement\nimport taack.ui.base.element.Table\nimport web.dom.document\nimport web.events.EventHandler\nimport web.history.history\nimport web.html.*\nimport web.location.location\nimport web.uievents.MouseEvent\nimport web.url.URL\nimport kotlin.math.max\nimport kotlin.math.min\n\nclass TablePaginate(private val parent: Table, d: HTMLDivElement) : LeafElement {\n    companion object {\n        fun getSiblingTablePaginate(p: Table): TablePaginate? {\n            val d = p.t.parentElement!!.querySelector(\"div[taackmax]\")\n            if (d != null) {\n                try {\n                    return TablePaginate(p, d as HTMLDivElement)\n                } catch (e: Throwable) {\n                    trace(\"Exception in TablePaginate\")\n                    trace(e.message?:\"No message\")\n                    trace(\"table: $p\")\n                    trace(\"div: $d\")\n                }\n            }\n            return null\n        }\n    }\n\n    private val max: Number = d.attributes.getNamedItem(\"taackMax\")!!.value.toLong()\n    private val offset: Number = d.attributes.getNamedItem(\"taackOffset\")?.value!!.toLong()\n    private val count: Number = d.attributes.getNamedItem(\"taackCount\")!!.value.toLong()\n    private val currentPage = (offset.toDouble() / max.toDouble()).toInt()\n    private val numberOfPage = (count.toDouble() / max.toDouble()).toInt()\n    private val ul = document.createElement(\"ul\") as HTMLUListElement\n\n    init {\n        trace(\"TablePaginate1 max: $max, offset: $offset, count: $count\")\n        trace(\"TablePaginate2 currentPage: $currentPage, numberOfPage: $numberOfPage\")\n\n        val nav = document.createElement(\"nav\")\n        ul.classList.add(\"pagination\")\n        ul.classList.add(\"pagination-sm\")\n        nav.appendChild(ul)\n        if (numberOfPage <= 1) {\n            val f = count.toDouble() / max.toDouble()\n            if (f > 1) {\n                createAnchor(0)\n                createAnchor(1)\n            }\n        } else if (numberOfPage in 2..9) {\n            for (i in 0..numberOfPage) {\n                createAnchor(i)\n            }\n        } else if (numberOfPage in 10..19) {\n            createAnchor(0)\n            for (i in 1..(if (currentPage < 5) 5 else 3)) {\n                createAnchor(i)\n            }\n            appendSpan()\n            if (currentPage >= 5 && currentPage <= numberOfPage - 5) {\n                for (i in (currentPage - 2)..(currentPage + 2)) {\n                    createAnchor(i)\n                }\n                appendSpan()\n            }\n            for (i in (numberOfPage - (if (currentPage <= numberOfPage - 5) 5 else 3))..numberOfPage) {\n                createAnchor(i)\n            }\n            createAnchor(numberOfPage)\n        } else {\n            createAnchor(0)\n            val minInterval = 20\n\n            val iHalf = if (currentPage >= 4 && currentPage <= numberOfPage - 4) currentPage else numberOfPage / 2\n\n            for (i in 1..4) {\n                createAnchor(i)\n            }\n            appendSpan()\n            for (i in iHalf - 4..iHalf + 4) {\n                createAnchor(i)\n            }\n            appendSpan()\n            for (i in (numberOfPage - 4) until numberOfPage) {\n                createAnchor(i)\n            }\n            createAnchor(numberOfPage)\n        }\n        d.appendChild(nav)\n    }\n\n    private fun appendSpan() {\n        trace(\"appendSpan\")\n        val s = document.createElement(\"span\") as HTMLSpanElement\n        s.innerText = \" ... \"\n        ul.appendChild(s)\n    }\n\n    private fun createAnchor(pageOffset: Int) {\n        trace(\"createAnchor $pageOffset\")\n        val li = document.createElement(\"li\") as HTMLLIElement\n        li.classList.add(\"page-item\")\n        val a = document.createElement(\"a\") as HTMLAnchorElement\n        a.innerText = \" ${pageOffset + 1} \"\n        a.classList.add(\"taackPageOffset\")\n        a.classList.add(\"page-link\")\n        if (pageOffset == currentPage) {\n            a.style.fontWeight = \"bold\"\n            li.classList.add(\"active\")\n        }\n        a.setAttribute(\"taackPageOffset\", pageOffset.toString())\n        a.onclick = EventHandler { e ->\n            onClick(e, a)\n        }\n        li.appendChild(a)\n        ul.appendChild(li)\n    }\n\n    private fun onClick(e: MouseEvent, a: HTMLAnchorElement) {\n        e.preventDefault()\n        val offset = (a.attributes.getNamedItem(\"taackPageOffset\")!!.value.toDouble() * max.toDouble()).toInt()\n        Helper.filterForm(parent.filter, offset, null)\n        val offsetUrl = URL(location.href)\n        offsetUrl.searchParams[\"offset\"] = offset.toString()\n        history.pushState(null, \"\", offsetUrl)\n    }\n}","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.LeafElement\nimport taack.ui.base.element.Table\nimport web.dom.document\nimport web.events.EventHandler\nimport web.html.*\n\n\nclass TableSelectCheckbox(private val parent: Table, private val i: HTMLInputElement) : LeafElement {\n    companion object {\n        fun getSiblingTableSelectCheckbox(p: Table): Pair<TableSelectCheckbox, List<TableSelectCheckbox>>? {\n            val elements: List<*> = p.t.querySelectorAll(\"input[paramsKey]\").asList()\n            val inputToSelectAllRows = elements.find { (it as HTMLInputElement).attributes.getNamedItem(\"selectAll\")?.value == \"true\" }\n            if (inputToSelectAllRows != null) {\n                val inputsToSelectCurrentRow = elements.filter { (it as HTMLInputElement).attributes.getNamedItem(\"selectAll\")?.value != \"true\" }\n                return Pair(TableSelectCheckbox(p, inputToSelectAllRows as HTMLInputElement), inputsToSelectCurrentRow.map { TableSelectCheckbox(p, it as HTMLInputElement) })\n            } else {\n                return null\n            }\n        }\n    }\n\n    private val paramsKey: String = i.attributes.getNamedItem(\"paramsKey\")!!.value\n    private val isSelectAll: Boolean = i.attributes.getNamedItem(\"selectAll\")?.value == \"true\"\n    private val isDisabled: Boolean = i.attributes.getNamedItem(\"disabled\") != null\n\n    init {\n        i.onclick = EventHandler {\n            if (isSelectAll) {\n                parent.tableSelectCheckboxes?.second?.forEach {\n                    if (!it.isDisabled) {\n                        it.i.checked = i.checked\n                        it.changeValue()\n                    }\n                }\n            } else {\n                if (!isDisabled) {\n                    changeValue()\n                }\n            }\n        }\n    }\n\n    private fun changeValue() {\n        val inputs = document.querySelectorAll(\"input[type='hidden'][name='${paramsKey}']\").asList().unsafeCast<List<HTMLInputElement>>()\n        if (inputs.isNotEmpty()) {\n            val stockedValues: MutableList<String> = inputs.first().value.split(\",\").filter { it.isNotEmpty() }.toMutableList()\n            val index: Int = stockedValues.indexOf(i.value)\n            if (i.checked) {\n                if (index == -1) {\n                    stockedValues.add(i.value)\n                }\n            } else {\n                if (index > -1) {\n                    stockedValues.removeAt(index)\n                    parent.tableSelectCheckboxes?.first?.i?.checked = false\n                }\n            }\n            inputs.forEach {\n                it.value = stockedValues.joinToString(\",\")\n            }\n        }\n    }\n}","package taack.ui.base.leaf\n\nimport js.array.asList\nimport taack.ui.base.Helper\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.LeafElement\nimport taack.ui.base.element.Table\nimport web.events.EventHandler\nimport web.form.FormData\nimport web.html.HTMLAnchorElement\nimport web.html.HTMLSpanElement\nimport web.uievents.MouseEvent\n\nclass TableSortableColumn(private val parent: Table, s: HTMLSpanElement) : LeafElement {\n    companion object {\n        fun getSiblingSortableColumn(p: Table): List<TableSortableColumn> {\n            val elements: List<*> = p.t.querySelectorAll(\"span[sortField]\").asList()\n            return elements.map {\n                TableSortableColumn(p, it as HTMLSpanElement)\n            }\n        }\n    }\n\n    private val property: String = s.attributes.getNamedItem(\"sortField\")!!.value\n    private val direction: String\n\n    init {\n        val fd = FormData(parent.filter.f)\n        if (property == fd[\"sort\"]) {\n            var d: String = if (fd[\"order\"] != null) fd[\"order\"]!!.toString() else \"neutral\"\n            if (d.trim().isEmpty()) {\n                d = \"neutral\"\n            }\n            direction = d.trim()\n        } else {\n            direction = \"neutral\"\n        }\n        trace(\"SortableColumn::init $property $direction\")\n        s.classList.add(direction)\n        val a = s.childNodes[0] as HTMLAnchorElement\n        a.onclick = EventHandler{ e ->\n            onClick(e)\n        }\n    }\n\n    private fun onClick(e: MouseEvent) {\n        e.preventDefault()\n        trace(\"SortableColumn::onClick\")\n        val dir = if (direction == \"neutral\") \"desc\" else if (direction == \"desc\") \"asc\" else if (direction == \"asc\") \"neutral\" else null\n        Helper.filterForm(parent.filter, null, property, dir)\n    }\n}","package taack.ui.canvas\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceEnabled\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.base.element.Form\nimport taack.ui.canvas.command.*\nimport taack.ui.canvas.item.CanvasCaret\nimport taack.ui.canvas.item.CanvasImg\nimport taack.ui.canvas.item.CanvasLink\nimport taack.ui.canvas.table.CanvasTable\nimport taack.ui.canvas.table.TxtHeaderCanvas\nimport taack.ui.canvas.table.TxtRowCanvas\nimport taack.ui.canvas.text.*\nimport web.canvas.CanvasRenderingContext2D\nimport web.clipboard.ClipboardEvent\nimport web.dom.document\nimport web.events.Event\nimport web.events.EventHandler\nimport web.events.addEventListener\nimport web.file.File\nimport web.file.FileReader\nimport web.html.*\nimport web.http.CrossOrigin\nimport web.uievents.DragEvent\nimport web.uievents.KeyboardEvent\nimport web.uievents.MouseEvent\nimport web.window.window\nimport kotlin.math.floor\nimport kotlin.math.max\nimport kotlin.math.min\n\nclass MainCanvas(\n    internal val embeddingForm: Form,\n    internal val textarea: HTMLTextAreaElement,\n    private val divHolder: HTMLDivElement,\n    private val divScroll: HTMLDivElement\n) {\n\n    inner class MyMutableList(private val b: MutableList<ICanvasDrawable>) : MutableList<ICanvasDrawable> by b {\n        override fun add(element: ICanvasDrawable): Boolean {\n            return b.add(element)\n        }\n\n        override fun add(index: Int, element: ICanvasDrawable) {\n            return b.add(index, element)\n        }\n\n        override fun removeAt(index: Int): ICanvasDrawable {\n            if (index > 0) {\n                return b.removeAt(index)\n            } else if (index == 0 && b.size > 1) {\n                val ret = b.removeAt(0)\n                b.add(0, PCanvas(\"\"))\n                currentDrawableIndex = 0\n                return ret\n            } else throw IndexOutOfBoundsException(\"index: $index, size: ${b.size}\")\n        }\n\n        override fun remove(element: ICanvasDrawable): Boolean {\n            val i = b.indexOf(element)\n            if (i > 0) {\n                b.removeAt(i)\n                return true\n            } else if (i == 0 && b.size > 1) {\n                b.removeAt(0)\n                b.add(0, PCanvas(\"\"))\n                return true\n            }\n            return false\n        }\n    }\n\n    private var currentTableRowIndex = 0\n\n    private val dprX = 2.0\n    private val dprY = 2.0\n    val canvas: HTMLCanvasElement = document.createElement(\"canvas\") as HTMLCanvasElement\n    private val canvasInnerBorder = 10.0\n    private val ctx: CanvasRenderingContext2D\n        get() = canvas.getContext(CanvasRenderingContext2D.ID) as CanvasRenderingContext2D\n    private val texts: List<CanvasText>\n        get() = drawables.mapNotNull { it.getSelectedText(currentMouseEvent?.offsetX, currentMouseEvent?.offsetY) }\n            .toMutableList()\n    private val currentLine: CanvasLine\n        get() = currentText!!.lines[currentText!!.indexOfLine(caretPosInCurrentText)]\n    private val _drawables: MutableList<ICanvasDrawable> = mutableListOf()\n    internal val drawables = MyMutableList(_drawables)\n    private val initialDrawables = mutableListOf<ICanvasDrawable>()\n    private var dy: Double = 0.0\n    private var caretPosInCurrentText: Int = 0\n    private var currentDrawableIndex: Int = 0\n    private val currentDrawable: ICanvasDrawable\n        get() = drawables[currentDrawableIndex]\n    private val currentText: CanvasText?\n        get() {\n            if (currentDrawableIndex < drawables.size) {\n                if (drawables[currentDrawableIndex] is CanvasTable) {\n                    (drawables[currentDrawableIndex] as CanvasTable).currentRowIndex = currentTableRowIndex\n                }\n\n                return drawables[currentDrawableIndex].getSelectedText(\n                    currentMouseEvent?.offsetX,\n                    currentMouseEvent?.offsetY\n                )\n            } else\n                return null\n        }\n    private var currentDoubleClick: Triple<CanvasLine, Int, Int>? = null\n    private var currentMouseEvent: MouseEvent? = null\n    private var currentKeyboardEvent: KeyboardEvent? = null\n    private var isDoubleClick: Boolean = false\n    private var charSelectStartNInText: Int?\n        get() = currentDoubleClick?.second\n        set(value) = run { currentDoubleClick = currentDoubleClick?.copy(second = value!!) }\n    private var charSelectEndNInText: Int?\n        get() = currentDoubleClick?.third\n        set(value) = run { currentDoubleClick = currentDoubleClick?.copy(third = value!!) }\n    private var posYGlobal: Double = 0.0\n    private val commandDoList = mutableListOf<ICanvasCommand>()\n    private val commandUndoList = mutableListOf<ICanvasCommand>()\n    private val caretPosInLine\n        get() = caretPosInCurrentText - currentLine.posBegin\n\n    private fun addDrawable() {\n        var doNotDraw = false\n        when (currentKeyboardEvent!!.key) {\n            \"Backspace\" -> {\n                traceIndent(\"MainCanvas::addDrawable +++ press Backspace $caretPosInCurrentText, $currentDrawableIndex\")\n                if (caretPosInCurrentText == 0 && currentDrawableIndex > 0) {\n                    val txt = currentText!!.txt\n                    val i = currentDrawableIndex\n                    commandDoList.add(\n                        DeleteDrawableCommand(\n                            drawables, i\n                        )\n                    )\n                    caretPosInCurrentText = currentText!!.txt.length\n                    currentDrawableIndex = i - 1\n                    commandDoList.add(\n                        AddCharCommand(\n                            drawables,\n                            currentDrawableIndex,\n                            currentTableRowIndex,\n                            null,\n                            txt,\n                            currentMouseEvent\n                        )\n                    )\n                } else if (caretPosInCurrentText > 0)\n                    commandDoList.add(\n                        RmCharCommand(\n                            drawables,\n                            currentDrawableIndex,\n                            currentTableRowIndex,\n                            caretPosInCurrentText--,\n                            currentMouseEvent\n                        )\n                    )\n                traceDeIndent(\"MainCanvas::addDrawable --- press Backspace $currentDrawableIndex ${currentMouseEvent?.offsetX} ${currentMouseEvent?.offsetY}\")\n            }\n\n            \"Tab\" -> {\n                trace(\"MainCanvas::addDrawable press Tab\")\n                if (currentKeyboardEvent!!.shiftKey)\n                    commandDoList.add(\n                        DeIndentCommand(currentDrawable)\n                    )\n                else\n                    commandDoList.add(\n                        IndentCommand(currentDrawable)\n                    )\n\n            }\n\n            \"Delete\" -> {\n                trace(\"MainCanvas::addDrawable press Delete\")\n                if (currentKeyboardEvent!!.ctrlKey) {\n                    commandDoList.add(\n                        DeleteDrawableCommand(drawables, currentDrawableIndex)\n                    )\n                } else {\n                    val pos1 = caretPosInCurrentText\n                    val pos2: Int? = null\n                    commandDoList.add(\n                        DeleteCharCommand(\n                            drawables,\n                            currentDrawableIndex,\n                            currentTableRowIndex,\n                            pos1,\n                            pos2,\n                            currentMouseEvent\n                        )\n                    )\n                }\n            }\n\n            \"Enter\" -> {\n                traceIndent(\"MainCanvas::addDrawable press Enter +++ $caretPosInCurrentText, $currentDrawableIndex, ${currentKeyboardEvent!!.shiftKey}\")\n                val i = currentDrawableIndex\n\n                if (currentDrawable is CanvasTable) {\n                    when (currentText) {\n                        is TxtHeaderCanvas -> {\n                            if (currentKeyboardEvent!!.shiftKey)\n                                commandDoList.add(\n                                    RemoveTableColumnCommand(\n                                        drawables,\n                                        currentDrawableIndex,\n                                        currentTableRowIndex,\n                                        currentMouseEvent\n                                    )\n                                )\n                            else\n                                commandDoList.add(\n                                    AddTableColumnCommand(\n                                        drawables,\n                                        currentDrawableIndex,\n                                        currentTableRowIndex,\n                                        currentMouseEvent\n                                    )\n                                )\n                        }\n\n                        is TxtRowCanvas -> {\n                            if (currentKeyboardEvent!!.shiftKey) {\n                                if ((currentDrawable as CanvasTable).rows.size == 2) {\n                                    commandDoList.add(\n                                        DeleteDrawableCommand(\n                                            drawables,\n                                            currentDrawableIndex,\n                                        )\n                                    )\n                                    currentTableRowIndex = 0\n                                } else\n                                    commandDoList.add(\n                                        RemoveTableRowCommand(\n                                            drawables,\n                                            currentDrawableIndex,\n                                            currentTableRowIndex,\n                                            currentMouseEvent\n                                        )\n                                    )\n                            } else {\n\n                                commandDoList.add(\n                                    AddTableRowCommand(\n                                        drawables,\n                                        currentDrawableIndex,\n                                        currentTableRowIndex,\n                                        currentMouseEvent\n                                    )\n                                )\n                            }\n                        }\n                    }\n                } else if (caretPosInCurrentText == 0) {\n                    val d = PCanvas(\"\")\n                    commandDoList.add(\n                        AddDrawableCommand(drawables, i, d)\n                    )\n//                } else if (currentDrawable is CanvasKroki) {\n//                    commandDoList.add(\n//                        AddCharCommand(\n//                            currentText!!,\n//                            \"\\n\",\n//                            caretPosInCurrentText++\n//                        )\n//                    )\n                } else {\n                    val i2 = i + 1\n                    if (currentKeyboardEvent!!.ctrlKey) {\n                        commandDoList.add(\n                            AddTableCommand(drawables, i2)\n                        )\n                    } else {\n                        var initTxt = \"\"\n                        if (currentDrawable !is CanvasTable)\n                            if (caretPosInCurrentText != 0 && caretPosInCurrentText != currentText!!.txt.length) {\n                                initTxt = currentText!!.txt.substring(caretPosInCurrentText)\n                                commandDoList.add(\n                                    DeleteCharCommand(\n                                        drawables,\n                                        currentDrawableIndex,\n                                        currentTableRowIndex,\n                                        caretPosInCurrentText,\n                                        currentText!!.txt.length,\n                                        currentMouseEvent\n                                    )\n                                )\n                            }\n\n                        when (currentText) {\n                            is H2Canvas -> {\n                                val d = H3Canvas(initTxt)\n                                commandDoList.add(\n                                    AddDrawableCommand(drawables, i2, d)\n                                )\n                            }\n\n                            is H3Canvas -> {\n                                val d = H4Canvas(initTxt)\n                                commandDoList.add(\n                                    AddDrawableCommand(drawables, i2, d)\n                                )\n                            }\n\n\n                            else -> {\n                                val d = PCanvas(initTxt)\n                                commandDoList.add(\n                                    AddDrawableCommand(drawables, i2, d)\n                                )\n                            }\n                        }\n                        currentDrawableIndex = i2\n                    }\n                }\n                traceDeIndent(\"MainCanvas::addDrawable press Enter --- $caretPosInCurrentText, $currentDrawableIndex\")\n            }\n\n            \"ArrowUp\" -> {\n                trace(\"MainCanvas::addDrawable press ArrowUp value: currentDrawableIndex: $currentDrawableIndex\")\n                if (currentDrawableIndex > 0) {\n                    currentDrawableIndex--\n                    caretPosInCurrentText = min(currentLine.length, caretPosInCurrentText)\n                }\n            }\n\n            \"ArrowDown\" -> {\n                trace(\"MainCanvas::addDrawable press ArrowDown currentDrawableIndex: $currentDrawableIndex\")\n                if (currentDrawableIndex < drawables.size - 1) {\n                    currentDrawableIndex++\n                    caretPosInCurrentText = min(currentLine.length, caretPosInCurrentText)\n                }\n            }\n\n            \"ArrowLeft\" -> {\n                if (caretPosInCurrentText > 0) caretPosInCurrentText--\n                else if (currentDrawableIndex > 0) {\n                    currentDrawableIndex--\n                    caretPosInCurrentText = currentText!!.txt.length\n                }\n            }\n\n            \"ArrowRight\" -> {\n                if (currentKeyboardEvent!!.ctrlKey && isDoubleClick) {\n                    val decay =\n                        currentText!!.txt.substring(charSelectEndNInText!! + 1).indexOfFirst { !it.isLetter() } + 1\n                    if (decay == 0) {\n                        charSelectEndNInText = currentText!!.txt.length\n                    }\n                    charSelectEndNInText = charSelectEndNInText?.plus(decay)\n                } else if (currentText!!.txt.length > caretPosInCurrentText) {\n                    caretPosInCurrentText++\n                } else if (currentDrawableIndex < drawables.size - 1) {\n                    currentDrawableIndex++\n                    caretPosInCurrentText = 0\n                }\n            }\n\n            \"End\" -> {\n                trace(\"MainCanvas::addDrawable press End\")\n                if (currentKeyboardEvent!!.ctrlKey) {\n                    if (currentKeyboardEvent!!.shiftKey) {\n                        currentDrawableIndex = texts.size\n                    }\n                    caretPosInCurrentText = currentText!!.lines.last().posEnd - 1\n                }\n                caretPosInCurrentText = currentLine.posEnd\n            }\n\n            \"Home\" -> {\n                trace(\"MainCanvas::addDrawable press Home\")\n                if (currentKeyboardEvent!!.ctrlKey) {\n                    if (currentKeyboardEvent!!.shiftKey) {\n                        currentDrawableIndex = texts.size\n                    }\n                    caretPosInCurrentText = 0\n                }\n                caretPosInCurrentText = currentLine.posBegin\n            }\n\n            \"Shift\", \"ShiftLeft\", \"ShiftRight\", \"Control\", \"ControlLeft\", \"ControlRight\", \"AltGraph\" -> {\n                doNotDraw = true\n            }\n\n            else -> {\n                trace(\"MainCanvas::addDrawable else branch ${currentKeyboardEvent!!.key}, CTRL: ${currentKeyboardEvent!!.ctrlKey}, SHIFT: ${currentKeyboardEvent!!.shiftKey}\")\n                if (currentKeyboardEvent != null) {\n                    if (currentKeyboardEvent!!.ctrlKey) {\n                        if (currentKeyboardEvent!!.key[0] == 'z' && !currentKeyboardEvent!!.shiftKey && commandDoList.size > 0) {\n                            trace(\"MainCanvas::addDrawable undo commandDoList: ${commandDoList.size}, commandUndoList: ${commandUndoList.size}\")\n                            commandUndoList.add(commandDoList.removeLast())\n                        } else if (currentKeyboardEvent!!.key[0] == 'Z' && commandUndoList.size > 0) {\n                            trace(\"MainCanvas::addDrawable redo commandDoList: ${commandDoList.size}, commandUndoList: ${commandUndoList.size}\")\n                            commandDoList.add(commandUndoList.removeLast())\n                        }\n                    } else\n                        if (currentText != null) {\n                            commandDoList.add(\n                                AddCharCommand(\n                                    drawables,\n                                    currentDrawableIndex,\n                                    currentTableRowIndex,\n                                    caretPosInCurrentText++,\n                                    currentKeyboardEvent!!.key[0].toString(),\n                                    currentMouseEvent\n                                )\n                            )\n                        }\n                }\n            }\n        }\n        if (!doNotDraw)\n            draw()\n    }\n\n    private fun createButton(id: String, innerHtml: String, handler: () -> Unit) {\n        val b = document.createElement(\"button\") as HTMLButtonElement\n        b.id = id + textarea.name\n        b.innerHTML = innerHtml\n        b.type = ButtonType.button\n        b.classList.add(\"btn\")\n        b.classList.add(\"btn-light\")\n        b.style.margin = \"2px\"\n        b.style.height = \"29px\"\n        //  b.style.width = \"80px\"\n        b.contentEditable = \"false\"\n        b.onclick = EventHandler { e ->\n            e.preventDefault()\n            e.stopPropagation()\n            handler()\n        }\n        divHolder.appendChild(b)\n    }\n\n    init {\n\n        canvas.id = \"canvas\" + textarea.name\n        if (divHolder.clientWidth > 0) {\n            canvas.width = floor(divHolder.clientWidth * dprX).toInt()\n            canvas.style.width = \"${divHolder.clientWidth}px\"\n        } else trace(\"divHolder.clientWidth == 0 !!!\")\n        if (divScroll.clientHeight > 0) {\n            canvas.height = floor(divScroll.clientHeight * dprY).toInt()\n            canvas.style.height = \"${divScroll.clientHeight}px\"\n        } else trace(\"divScroll.clientHeight == 0 !!!\")\n\n        trace(\"Canvas width: ${canvas.width}, height: ${canvas.height}\")\n\n//        ctx.setTransform(dpr, 0.0, 0.0, dpr, 0.0, 0.0)\n        ctx.scale(dprX, dprY)\n\n\n        canvas.tabIndex = 1\n        canvas.style.border = \"0\"\n//        divHolder.draggable = false\n//        divHolder.contentEditable = \"false\"\n        divHolder.style.border = \"0\"\n        divScroll.style.border = \"0\"\n\n        createButton(\"buttonBold\", \"<b style='margin: 0;height: 23px;'>BOLD</b>\") {\n            if (currentDoubleClick != null)\n                commandDoList.add(\n                    AddStyleCommand(\n                        currentText!!,\n                        TextStyle.BOLD,\n                        currentDoubleClick!!.second,\n                        currentDoubleClick!!.third\n                    )\n                )\n            currentDoubleClick = null\n            draw()\n        }\n        createButton(\"buttonMono\", \"<code style='margin: 0;height: 23px;'>Mono</code>\") {\n            if (currentDoubleClick != null)\n                commandDoList.add(\n                    AddStyleCommand(\n                        currentText!!,\n                        TextStyle.MONOSPACED,\n                        currentDoubleClick!!.second,\n                        currentDoubleClick!!.third\n                    )\n                )\n            currentDoubleClick = null\n            draw()\n        }\n//        createButton(\"buttonBoldMono\", \"<code style='margin: 0;height: 23px;'><b>Mono</b></code>\") {\n//            if (currentDoubleClick != null)\n//                commandDoList.add(\n//                    AddStyleCommand(\n//                        currentText!!,\n//                        TextStyle.BOLD_MONOSPACED,\n//                        currentDoubleClick!!.second,\n//                        currentDoubleClick!!.third\n//                    )\n//                )\n//            currentDoubleClick = null\n//            draw()\n//        }\n//        createButton(\"buttonScript\", \"<code style='margin: 0;height: 23px;'><em>Kroki</em></code>\") {\n//            if (currentDrawable != null)\n//                commandDoList.add(\n//                    ChangeStyleCommand(drawables, initialDrawables, currentDrawable, CanvasKroki(currentText!!.txt))\n//                )\n//            draw()\n//        }\n        createButton(\"buttonTable\", \"<span style='margin: 0;height: 23px;'>Table</span>\") {\n            commandDoList.add(\n                AddTableCommand(drawables, currentDrawableIndex)\n            )\n            draw()\n\n        }\n\n        createButton(\n            \"bH2\",\n            \"<span style='margin: 0;height: 23px;font-size: 18px; font-weight: bold; color: #ba3925'>H2</span>\"\n        ) {\n            val d = H2Canvas(currentText!!.txt)\n            commandDoList.add(\n                ChangeStyleCommand(drawables, currentDrawableIndex, d)\n            )\n            draw()\n        }\n        createButton(\n            \"bH3\",\n            \"<span style='margin: 0;height: 23px;font-size: 16px; font-weight: bold; color: #ba3925'>H3</span>\"\n        ) {\n            val d = H3Canvas(currentText!!.txt)\n            commandDoList.add(\n                ChangeStyleCommand(drawables, currentDrawableIndex, d)\n            )\n\n            draw()\n        }\n        createButton(\n            \"bH4\",\n            \"<span style='margin: 0;height: 23px;font-size: 14px; font-weight: bold; color: #ba3925'>H4</span>\"\n        ) {\n            val d = H4Canvas(currentText!!.txt)\n            commandDoList.add(\n                ChangeStyleCommand(drawables, currentDrawableIndex, d)\n            )\n            draw()\n        }\n        createButton(\"bP\", \"<span style='margin: 0;height: 23px;'>P</span>\") {\n            val d = PCanvas(currentText!!.txt)\n            commandDoList.add(\n                ChangeStyleCommand(drawables, currentDrawableIndex, d)\n            )\n            draw()\n        }\n        createButton(\"bBullet\", \" • \") {\n            val d = LiCanvas(currentText!!.txt)\n            commandDoList.add(\n                ChangeStyleCommand(drawables, currentDrawableIndex, d)\n            )\n            draw()\n        }\n        createButton(\"bBullet2\", \"    ‧ \") {\n            val d = Li2Canvas(currentText!!.txt)\n\n            commandDoList.add(\n                ChangeStyleCommand(drawables, currentDrawableIndex, d)\n            )\n            draw()\n        }\n//        createButton(\"bAsciidoc\", \"ADoc\") {\n//            draw()\n//            val asciidoc = ICanvasDrawable.dumpAsciidoc(drawables)\n//            textarea.textContent = asciidoc\n//            prompt(\"Copy to clipboard: Ctrl+C, Enter\", asciidoc)\n//        }\n\n        divHolder.appendChild(canvas)\n\n        divScroll.addEventListener(Event.SCROLL, { ev: Event ->\n            trace(\"divScroll scroll\")\n            dy = divScroll.scrollTop\n            divHolder.style.transform = \"translate(0px, ${dy}px)\"\n            isDoubleClick = false\n            draw()\n            ev.preventDefault()\n            ev.stopPropagation()\n        })\n\n        window.onresize = EventHandler {\n            posYGlobal = -dy\n            isDoubleClick = false\n            draw()\n        }\n        canvas.onclick = EventHandler { event: MouseEvent ->\n            traceIndent(\"canvas click\")\n            isDoubleClick = false\n            if (event.detail == 3) {\n                isDoubleClick = true\n                charSelectStartNInText = 0\n                charSelectEndNInText =\n                    currentDrawable.getSelectedText(event.offsetX, event.offsetY)!!.txt.length\n                trace(\"canvas click double click == triple click\")\n            }\n\n            trace(\"setting currentMouseEvent = $event\")\n            currentMouseEvent = event\n            event.preventDefault()\n            event.stopPropagation()\n            for (i in 0..<drawables.size) {\n                if (drawables[i].isClicked(event.offsetX, event.offsetY)) {\n                    currentDrawableIndex = i\n                    val text = currentDrawable.getSelectedText(event.offsetX, event.offsetY)!!\n                    val currentClick = text.click(ctx, event.offsetX, event.offsetY)\n                    caretPosInCurrentText = currentClick!!.second\n                }\n            }\n            traceDeIndent(\"canvas click => $caretPosInCurrentText, $currentDrawableIndex, ${currentText?.txt}\")\n            draw()\n        }\n\n        canvas.onkeydown = EventHandler { event: KeyboardEvent ->\n            currentKeyboardEvent = event\n            if (!event.ctrlKey) isDoubleClick = false\n\n            val pasteEvent = event.ctrlKey && event.key[0] == 'v'\n\n            if (!pasteEvent) {\n                addDrawable()\n                event.preventDefault()\n            } else {\n                trace(\"paste event\")\n            }\n        }\n\n        canvas.ondblclick = EventHandler { event: MouseEvent ->\n            trace(\"canvas dblclick\")\n            event.preventDefault()\n//            event.stopPropagation()\n            isDoubleClick = true\n            for (i in 0..<drawables.size) {\n                if (drawables[i].isClicked(event.offsetX, event.offsetY)) {\n                    if (currentDrawable is CanvasImg || currentDrawable is CanvasLink)\n                        commandDoList.add(DeleteDrawableCommand(drawables, i))\n                    else {\n                        currentDrawableIndex = i\n                        currentDoubleClick = currentDrawable.doubleClick(ctx, event.offsetX, event.offsetY)\n                    }\n                }\n            }\n            draw()\n        }\n\n        document.onpaste = EventHandler { event: ClipboardEvent ->\n            trace(\"canvasEvent paste $currentText $currentMouseEvent $caretPosInCurrentText\")\n            val txt = event.clipboardData!!.getData(\"text\")\n            event.preventDefault()\n            event.stopPropagation()\n            if (currentText != null && txt.isNotEmpty()) {\n                commandDoList.add(\n                    AddCharCommand(\n                        drawables,\n                        currentDrawableIndex,\n                        currentTableRowIndex,\n                        caretPosInCurrentText,\n                        txt,\n                        currentMouseEvent\n                    )\n                )\n                trace(\"canvasEvent paste: $txt\")\n            } else if (event.clipboardData!!.items.length > 0) {\n                // Use DataTransferItemList interface to access the file(s)\n                for (item in event.clipboardData!!.items) {\n                    // If dropped items aren't files, reject them\n                    if (item.kind === \"file\") {\n                        val file = item.getAsFile()\n                        trace(\"canvasEvent1 file[].name = ${file?.name}\")\n                        if (file != null) {\n                            placeFile(file)\n                        }\n                    }\n                }\n            }\n            draw()\n        }\n\n        divScroll.ondrop = EventHandler { event: DragEvent ->\n            trace(\"canvasEvent drop $currentText $currentMouseEvent $caretPosInCurrentText\")\n            event.preventDefault()\n            event.stopPropagation()\n            if (event.dataTransfer?.items?.length!! > 0) {\n                // Use DataTransferItemList interface to access the file(s)\n                for (item in event.dataTransfer?.items!!) {\n                    // If dropped items aren't files, reject them\n                    if (item.kind === \"file\") {\n                        val file = item.getAsFile()\n                        trace(\"canvasEvent1 file[].name = ${file?.name}\")\n                        if (file != null) {\n                            placeFile(file)\n                        }\n                    }\n                }\n            } else {\n                // Use DataTransfer interface to access the file(s)\n                for (file in event.dataTransfer?.files!!) {\n                    trace(\"canvasEvent2 file[].name = ${file.name}\")\n                }\n            }\n\n            val txt = event.dataTransfer!!.getData(\"text\")\n\n            commandDoList.add(\n                AddCharCommand(\n                    drawables,\n                    currentDrawableIndex,\n                    currentTableRowIndex,\n                    caretPosInCurrentText,\n                    txt,\n                    currentMouseEvent\n                )\n            )\n\n            trace(\"canvasEvent drop on ${textarea.name}: $txt\")\n        }\n\n        divHolder.ondragover = EventHandler { event: DragEvent ->\n//            trace(\"canvasEvent ondragover\")\n            event.preventDefault()\n//            event.stopPropagation()\n//            val txt = event.dataTransfer!!.getData(\"text\")\n//            trace(\"canvasEvent ondragover: $txt\")\n        }\n        divHolder.ondrag = EventHandler { event: DragEvent ->\n            trace(\"canvasEvent ondrag\")\n            event.preventDefault()\n            event.stopPropagation()\n            val txt = event.dataTransfer!!.getData(\"text\")\n            trace(\"canvasEvent ondrag: $txt\")\n        }\n        addInitialTexts()\n        currentDrawableIndex = 0\n        draw()\n    }\n\n    private fun placeFile(file: File) {\n        val reader = FileReader()\n        if (file.type.startsWith(\"image/\")) {\n            reader.onload = EventHandler {\n                val img = document.createElement(\"img\") as HTMLImageElement\n                img.crossOrigin = CrossOrigin.anonymous\n                img.onload = EventHandler {\n                    val c = document.createElement(\"canvas\") as HTMLCanvasElement\n                    val rw = img.width / min(img.width, 1024)\n                    val rh = img.height / min(img.height, 1024)\n                    val r = max(rw, rh)\n                    c.width = img.width / r\n                    c.height = img.height / r\n                    val ctx = c.getContext(CanvasRenderingContext2D.ID)\n                    ctx!!.drawImage(\n                        img,\n                        0.0,\n                        0.0,\n                        img.width.toDouble(),\n                        img.height.toDouble(),\n                        0.0,\n                        0.0,\n                        c.width.toDouble(),\n                        c.height.toDouble()\n                    )\n\n                    val dataUrl = c.toDataURL(file.type)\n                    var index = currentDrawableIndex\n                    if (index == -1) {\n                        index = 0\n                    }\n\n                    commandDoList.add(\n                        AddImageCommand(\n                            drawables,\n                            index,\n                            CanvasImg(dataUrl, file.name, 0),\n                        )\n                    )\n                    val d = PCanvas(\"\")\n                    currentDrawableIndex = index + 1\n                    commandDoList.add(\n                        AddDrawableCommand(drawables, index + 1, d)\n                    )\n                }\n                img.src = reader.result.toString()\n\n            }\n            reader.readAsDataURL(file)\n        } else {\n            reader.onload = EventHandler {\n                var index = currentDrawableIndex\n                if (index == -1) {\n                    index = 0\n                }\n                commandDoList.add(\n                    AddDrawableCommand(\n                        drawables,\n                        index,\n                        CanvasLink(file.name, file.name, 0),\n                    )\n                )\n                val d = PCanvas(\"\")\n                currentDrawableIndex = index + 1\n                commandDoList.add(\n                    AddDrawableCommand(drawables, index + 1, d)\n                )\n            }\n            reader.readAsDataURL(file)\n        }\n\n        if (embeddingForm.mapFileToSend[\"${textarea.name}File\"] == null) {\n            embeddingForm.mapFileToSend[\"${textarea.name}File\"] = mutableListOf()\n        }\n        embeddingForm.mapFileToSend[\"${textarea.name}File\"]!!.add(file)\n    }\n\n    private fun addInitialTexts() {\n        if (textarea.innerText.isNotBlank()) {\n            trace(\"addInitialTexts ${textarea.innerText}\")\n            initialDrawables.addAll(ICanvasDrawable.readAsciidoc(this))\n        } else {\n            trace(\"addInitialTexts BLANK\")\n            initialDrawables.add(PCanvas(\"\"))\n        }\n\n        drawables.addAll(initialDrawables)\n    }\n\n    private fun draw() {\n        traceEnabled = true\n        traceIndent(\"MainCanvas::draw, currentDrawableIndex: $currentDrawableIndex\")\n        if (divHolder.clientWidth > 0) {\n            canvas.width = floor(divHolder.clientWidth * dprX).toInt()\n            canvas.style.width = \"${divHolder.clientWidth}px\"\n        } else trace(\"divHolder.clientWidth == 0 !!!\")\n        if (divScroll.clientHeight > 0) {\n            canvas.height = floor(divScroll.clientHeight * dprY).toInt()\n            canvas.style.height = \"${divScroll.clientHeight}px\"\n        } else trace(\"divScroll.clientHeight == 0 !!!\")\n        ctx.scale(dprX, dprY)\n\n        CanvasText.num1 = 0\n        CanvasText.num2 = 0\n        CanvasText.figNum = 1\n        posYGlobal = -dy\n\n        trace(\"Clear ${canvas.width.toDouble()} x ${canvas.height.toDouble()}\")\n        ctx.clearRect(0.0, 0.0, canvas.width.toDouble(), canvas.height.toDouble())\n\n        trace(\"Reset text\")\n        for (text in drawables) {\n            if (text is CanvasTable) {\n                if (text.currentRowIndex != 0)\n                    currentTableRowIndex = text.currentRowIndex\n            }\n            text.reset()\n        }\n\n        trace(\"Reset Drawables\")\n        drawables.clear()\n        drawables.addAll(initialDrawables)\n\n        trace(\"Execute commandList, currentDrawableIndex: $currentDrawableIndex\")\n        val executedCommands = mutableListOf<ICanvasCommand>()\n        for (cmd in commandDoList) {\n            if (cmd.doIt()) {\n                trace(\"Command executed successfully, currentDrawableIndex: $currentDrawableIndex\")\n                executedCommands.add(cmd)\n            } else trace(\"$cmd does not do it !!\")\n        }\n        commandDoList.clear()\n        commandDoList.addAll(executedCommands)\n\n        trace(\"Draw all drawables +++, currentDrawableIndex: $currentDrawableIndex\")\n        for (text in drawables) {\n            try {\n                posYGlobal = text.draw(ctx, divHolder.clientWidth - canvasInnerBorder, posYGlobal, canvasInnerBorder)\n            } catch (e: Throwable) {\n                trace(e.message ?: \"\")\n            }\n        }\n        trace(\"Draw all drawables ---, currentDrawableIndex: $currentDrawableIndex\")\n\n        if (currentText != null) {\n            trace(\"Draw caret currentText != null, currentDrawableIndex: ${currentDrawableIndex}, caretPosInCurrentText = $caretPosInCurrentText, caretPosInLine = $caretPosInLine, currentLine!!.length = ${currentLine.length}\")\n            CanvasCaret.draw(ctx, currentText!!, currentLine, caretPosInLine)\n            if (isDoubleClick && currentDoubleClick != null) {\n                trace(\"Draw dblClick\")\n                CanvasCaret.drawDblClick(\n                    ctx,\n                    currentText!!,\n                    currentDoubleClick!!.first,\n                    caretPosInLine,\n                    currentDoubleClick!!.second,\n                    currentDoubleClick!!.third\n                )\n            }\n        }\n        divHolder.style.minHeight = \"${posYGlobal + dy + 100}px\"\n        val asciidoc = ICanvasDrawable.dumpAsciidoc(this)\n        textarea.textContent = asciidoc\n\n        traceDeIndent(\"MainCanvas::draw ${divHolder.clientWidth} $currentText\")\n        traceEnabled = true\n    }\n}",null,null,null,"package taack.ui.canvas.command\n\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.ICanvasDrawable\nimport web.uievents.MouseEvent\n\nclass AddCharCommand(private val drawables: MutableList<ICanvasDrawable>, private val textIndex: Int, private val textSubIndex: Int, private val pos: Int? = null, private val ch: String, private val mouseEvent: MouseEvent?) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        val text = embeddedText(drawables, textIndex, textSubIndex, mouseEvent)\n        traceIndent(\"AddCharCommand +++ ${text?.txt}, $pos, $ch\")\n        text?.addChar(ch, pos)\n        traceDeIndent(\"AddCharCommand --- ${text?.txt}\")\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.ICanvasDrawable\n\nclass AddDrawableCommand(private val drawables: MutableList<ICanvasDrawable>, val i: Int, val text: ICanvasDrawable) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        traceIndent(\"AddDrawableCommand +++ $text $i\")\n        if (i == -1) drawables.add(text)\n        else drawables.add(i, text)\n        traceDeIndent(\"AddDrawableCommand --- ${drawables.size}\")\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.canvas.ICanvasDrawable\nimport taack.ui.canvas.item.CanvasImg\n\nclass AddImageCommand(private val drawables: MutableList<ICanvasDrawable>, val i: Int, val image: CanvasImg) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        drawables.add(i, image)\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.text.TextStyle\nimport taack.ui.canvas.text.CanvasText\n\nclass AddStyleCommand(val text: CanvasText, val style: TextStyle, private val start: Int, private val end: Int) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        traceIndent(\"AddStyleCommand +++ ${text.txt}, $start, $end\")\n        text.addStyle(style, start, end)\n        traceDeIndent(\"AddStyleCommand --- ${text.txt}\")\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.ICanvasDrawable\nimport taack.ui.canvas.table.CanvasTable\nimport web.uievents.MouseEvent\n\nclass AddTableColumnCommand(private val drawables: MutableList<ICanvasDrawable>, private val textIndex: Int, private val textSubIndex: Int, private val mouseEvent: MouseEvent?) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        traceIndent(\"AddTableColumnCommand +++\")\n        val table = drawables[textIndex] as CanvasTable\n        table.addColumn(textSubIndex)\n        traceDeIndent(\"AddTableColumnCommand ---\")\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.canvas.ICanvasDrawable\nimport taack.ui.canvas.table.CanvasTable\n\nclass AddTableCommand(private val drawables: MutableList<ICanvasDrawable>, val i: Int) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        drawables.add(i, CanvasTable.createTable())\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.ICanvasDrawable\nimport taack.ui.canvas.table.CanvasTable\nimport taack.ui.canvas.table.TxtHeaderCanvas\nimport taack.ui.canvas.table.TxtRowCanvas\nimport web.uievents.MouseEvent\n\nclass AddTableRowCommand(private val drawables: MutableList<ICanvasDrawable>, private val textIndex: Int, private val textSubIndex: Int, private val mouseEvent: MouseEvent?) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        traceIndent(\"AddTableRowCommand +++\")\n        val table = drawables[textIndex] as CanvasTable\n        table.addLine(textSubIndex)\n        traceDeIndent(\"AddTableRowCommand ---\")\n\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.canvas.ICanvasDrawable\nimport taack.ui.canvas.MainCanvas\nimport taack.ui.canvas.text.CanvasText\n\nclass ChangeStyleCommand(\n    private val drawables: MainCanvas.MyMutableList,\n    private val currentDrawableIndex: Int,\n    val text: CanvasText\n) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        trace(\"ChangeStyleCommand\")\n        drawables.add(currentDrawableIndex, text)\n        drawables.removeAt(currentDrawableIndex + 1)\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.canvas.ICanvasDrawable\n\nclass DeIndentCommand(private val drawable: ICanvasDrawable) : ICanvasCommand{\n    override fun doIt(): Boolean {\n        if (drawable.citationNumber > 0) {\n            drawable.citationNumber--\n            return true\n        }\n        return false\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.ICanvasDrawable\nimport web.uievents.MouseEvent\n\nclass DeleteCharCommand(\n    private val drawables: MutableList<ICanvasDrawable>,\n    private val textIndex: Int,\n    private val textSubIndex: Int,\n    private val pos1: Int,\n    private val pos2: Int?,\n    private val mouseEvent: MouseEvent?\n) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        traceIndent(\"DeleteCharCommand +++\")\n        val text = embeddedText(drawables, textIndex, textSubIndex, mouseEvent)\n        val ret = text?.delChar(pos1, pos2) == 0\n        traceDeIndent(\"DeleteCharCommand --- ${text?.txt}, ret = $ret\")\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.ICanvasDrawable\n\nclass DeleteDrawableCommand(private val drawables: MutableList<ICanvasDrawable>, private val textIndex: Int) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        traceIndent(\"DeleteDrawableCommand +++ ${textIndex}\")\n        if (textIndex == 0 && drawables.size <= 1) return false\n        drawables.removeAt(textIndex)\n        traceDeIndent(\"DeleteDrawableCommand --- ${drawables.size}\")\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.canvas.ICanvasDrawable\n\nclass IndentCommand(private val drawable: ICanvasDrawable) : ICanvasCommand{\n    override fun doIt(): Boolean {\n        drawable.citationNumber++\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.ICanvasDrawable\nimport taack.ui.canvas.table.CanvasTable\nimport taack.ui.canvas.table.TxtHeaderCanvas\nimport taack.ui.canvas.table.TxtRowCanvas\nimport web.uievents.MouseEvent\n\nclass RemoveTableColumnCommand(private val drawables: MutableList<ICanvasDrawable>, private val textIndex: Int, private val textSubIndex: Int, private val mouseEvent: MouseEvent?) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        traceIndent(\"RemoveTableColumnCommand +++\")\n        val table = drawables[textIndex] as CanvasTable\n//        val text = embeddedText(drawables, textIndex, textSubIndex, mouseEvent) as TxtHeaderCanvas\n        table.removeColumn(textSubIndex)\n        traceDeIndent(\"RemoveTableColumnCommand ---\")\n\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.ICanvasDrawable\nimport taack.ui.canvas.table.CanvasTable\nimport taack.ui.canvas.table.TxtHeaderCanvas\nimport taack.ui.canvas.table.TxtRowCanvas\nimport web.uievents.MouseEvent\n\nclass RemoveTableRowCommand(private val drawables: MutableList<ICanvasDrawable>, private val textIndex: Int, private val textSubIndex: Int, private val mouseEvent: MouseEvent?) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        traceIndent(\"RemoveTableRowCommand +++\")\n        val table = drawables[textIndex] as CanvasTable\n        table.removeLine(textSubIndex)\n        traceDeIndent(\"RemoveTableRowCommand ---\")\n\n        return true\n    }\n}","package taack.ui.canvas.command\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.ICanvasDrawable\nimport taack.ui.canvas.table.CanvasTable\nimport web.uievents.MouseEvent\n\nclass RmCharCommand(private val drawables: MutableList<ICanvasDrawable>, private val textIndex: Int, private val textSubIndex: Int, private val pos: Int, private val mouseEvent: MouseEvent?) : ICanvasCommand {\n    override fun doIt(): Boolean {\n        traceIndent(\"RmCharCommand +++\")\n        val text = embeddedText(drawables, textIndex, textSubIndex, mouseEvent)\n        trace(\"RmCharCommand ${text?.txt}, ${mouseEvent?.offsetX} ${mouseEvent?.offsetY}\")\n        val ret = text?.rmChar(pos) == 0\n        traceDeIndent(\"RmCharCommand --- ${text?.txt}, ret = $ret\")\n        return true\n    }\n}","package taack.ui.canvas.item\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.text.CanvasLine\nimport taack.ui.canvas.text.CanvasText\nimport web.canvas.CanvasRenderingContext2D\n\nclass CanvasCaret {\n\n    companion object {\n        private var posX: Double = 0.0\n        private var posY: Double = 0.0\n        private const val HEIGHT: Double = 20.0\n        private const val WIDTH: Double = 1.0\n\n        fun draw(ctx: CanvasRenderingContext2D, text: CanvasText, line: CanvasLine, n: Int) {\n            traceIndent(\"CanvasCaret::draw: $n line: $line\")\n            posY = line.textY\n            ctx.save()\n            text.initCtx(ctx)\n            posX = text.measureText(ctx, line.posBegin,line.posBegin + n) + line.leftMargin + text.posXStart\n            ctx.restore()\n            draw(ctx, posX, posY, null, text.lineHeight)\n            traceDeIndent(\"CanvasCaret::draw: $n\")\n        }\n\n        fun drawDblClick(ctx: CanvasRenderingContext2D, text: CanvasText, line: CanvasLine, n: Int, posNStart: Int, posNEnd: Int) {\n            traceIndent(\"CanvasCaret::drawDblClick: $n, $posNStart, $posNEnd\")\n            posY = line.textY\n            ctx.save()\n            text.initCtx(ctx)\n            var i = if (posNStart == 0) 0 else text.indexOfLine(line)\n            var isFirstLine = true\n            var cLine: CanvasLine?\n            posX = text.measureText(ctx, line.posBegin, line.posBegin + n) + line.leftMargin + text.posXStart\n            do {\n                if (i >= text.lines.size) break\n                cLine = text.lines[i]\n\n                val posXStart = text.posXStart + if (isFirstLine) text.measureText(ctx, cLine.posBegin, posNStart) + cLine.leftMargin else cLine.leftMargin\n                val posXEnd = text.measureText(ctx, cLine.posBegin, posNEnd) + cLine.leftMargin + text.posXStart\n                draw(ctx, posXStart, cLine.textY, posXEnd)\n                i += 1\n                isFirstLine = false\n            } while (posNEnd >= cLine!!.posEnd)\n            ctx.restore()\n            traceDeIndent(\"CanvasCaret::drawDblClick: $n, $posNStart, $posNEnd\")\n        }\n\n        private fun draw(ctx: CanvasRenderingContext2D, x: Double, y: Double, posXEnd: Double? = null, height: Double = HEIGHT) {\n            trace(\"CanvasCaret::draw: $x, $y, $posXEnd\")\n            this.posX = x\n            this.posY = y\n            ctx.save()\n            ctx.strokeStyle = if (posXEnd == null) \"green\" else \"blue\"\n            ctx.beginPath()\n            ctx.rect(posX - if (posXEnd != null) 0.0 else WIDTH, posY - height, if (posXEnd != null) posXEnd - posX else WIDTH, height)\n            ctx.stroke()\n            ctx.restore()\n        }\n    }\n\n}","package taack.ui.canvas.text\n\nclass CanvasFigure(txtInit: String, citationNumber: Int) : CanvasText(txtInit, citationNumber) {\n\n    override val fontWeight: String\n        get() = \"italic\"\n    override val fontSize: String\n        get() = \"12px\"\n    override val fontFace: String\n        get() = \"sans-serif\"\n    override val fillStyle: String\n        get() = \"#ba3925\"\n    override val letterSpacing: Double\n        get() = -0.37\n    override val lineHeight: Double\n        get() = 16.0\n    override val wordSpacing: Double\n        get() = -1.35\n    override val marginTop: Double\n        get() = 5.0\n    override val marginBottom: Double\n        get() = 15.0\n\n    override fun computeNum(): String {\n        return \"Fig. ${figNum++}: \"\n    }\n\n    override fun dumpAsciidoc(): String {\n        return \"\\n.\" + super.dumpAsciidoc() + \"\\n\"\n    }\n\n}","package taack.ui.canvas.item\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.canvas.ICanvasDrawable\nimport taack.ui.canvas.text.CanvasFigure\nimport taack.ui.canvas.text.CanvasLine\nimport taack.ui.canvas.text.CanvasText\nimport web.canvas.CanvasRenderingContext2D\nimport web.events.EventHandler\nimport web.html.Image\nimport kotlin.math.min\n\nclass CanvasImg(\n    private val src: String, txt: String, private val initCitationNumber: Int\n) : ICanvasDrawable {\n\n    companion object {\n        val srcImage = hashMapOf<String, Image>()\n        val srcRatio = hashMapOf<String, Double>()\n    }\n\n    override var globalPosYStart: Double = 0.0\n    override var globalPosYEnd: Double = 0.0\n    override var citationNumber: Int = initCitationNumber\n    val text = CanvasFigure(txt, citationNumber)\n\n    private var ratio: Double?\n        get() = srcRatio[src]\n        set(value) {\n            srcRatio[src] = value!!\n        }\n    private val image: Image = srcImage.getOrPut(src) {\n        val i = Image()\n        i.src = src\n        i\n    }\n\n    override fun getSelectedText(posX: Double?, posY: Double?): CanvasText {\n        return text\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage\n    override fun draw(ctx: CanvasRenderingContext2D, width: Double, posY: Double, posX: Double): Double {\n        trace(\"CanvasImg::draw width: $width, posY: $posY, posX: $posX\")\n        globalPosYStart = posY\n        globalPosYEnd = posY\n        if (ratio == null) {\n            image.onload = EventHandler {\n                val w = image.width\n                val h = image.height\n                ratio = if (h < 480) 1.0 else min(480.0 / h, width / w)\n                trace(\"CanvasImg::draw.onLoad $image ${image.width}x${image.height}, r: $ratio\")\n            }\n            image.src = src\n        } else if (image.complete) {\n            globalPosYEnd = ratio!! * (image.height) + globalPosYStart\n            ctx.drawImage(image, posX, posY, image.width * ratio!!, image.height * ratio!!)\n            globalPosYEnd = text.draw(ctx, width, globalPosYEnd, posX)\n            return globalPosYEnd\n        }\n        return globalPosYEnd\n    }\n\n    override fun click(ctx: CanvasRenderingContext2D, posX: Double, posY: Double): Pair<CanvasLine, Int>? {\n        TODO(\"Not yet implemented\")\n    }\n\n    override fun doubleClick(ctx: CanvasRenderingContext2D, posX: Double, posY: Double): Triple<CanvasLine, Int, Int>? {\n        return null\n    }\n\n    override fun reset() {\n        text.reset()\n        citationNumber = initCitationNumber\n    }\n\n    override fun dumpAsciidoc(): String {\n        //return //if (src.length < 250)\n//        return \"\\n${text.dumpAsciidoc()}\\nimage::${src}[]\"\n//        else {\n           return \"\\n\" + \"image::${text.txt}[]\" + \"\\n\"\n//            \"\\n+++<img src='$src'/>+++\"\n//        }\n    }\n\n    override fun toString(): String {\n        return \"CanvasImg(text=$text, citationNumber=$citationNumber, globalPosYEnd=$globalPosYEnd, globalPosYStart=$globalPosYStart)\"\n    }\n}","package taack.ui.canvas.item\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.canvas.ICanvasDrawable\nimport taack.ui.canvas.text.CanvasFigure\nimport taack.ui.canvas.text.CanvasLine\nimport taack.ui.canvas.text.CanvasText\nimport web.canvas.CanvasRenderingContext2D\nimport web.encoding.btoa\nimport web.html.Image\n\nclass CanvasLink(\n    txt: String, fileName: String, private val initCitationNumber: Int\n) : ICanvasDrawable {\n\n    companion object {\n        private val _image: Image\n            get() {\n                val i = Image(120, 120)\n\n                val svg = \"\"\"\n                    <?xml version=\"1.0\" encoding=\"utf-8\"?><!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\n                    <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path opacity=\"0.5\" d=\"M3 15C3 17.8284 3 19.2426 3.87868 20.1213C4.75736 21 6.17157 21 9 21H15C17.8284 21 19.2426 21 20.1213 20.1213C21 19.2426 21 17.8284 21 15\" stroke=\"#1C274C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                    <path d=\"M12 3V16M12 16L16 11.625M12 16L8 11.625\" stroke=\"#1C274C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                    </svg>\n                \"\"\".trimIndent()\n\n                i.src =\"data:image/svg+xml;base64,\" + btoa(svg)\n                return i\n            }\n        private val image = _image\n    }\n\n    override var globalPosYStart: Double = 0.0\n    override var globalPosYEnd: Double = 0.0\n    override var citationNumber: Int = initCitationNumber\n    val text = CanvasFigure(txt, citationNumber)\n    override fun getSelectedText(posX: Double?, posY: Double?): CanvasText {\n        return text\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage\n    override fun draw(ctx: CanvasRenderingContext2D, width: Double, posY: Double, posX: Double): Double {\n        trace(\"CanvasLink::draw width: $width, posY: $posY, posX: $posX\")\n        globalPosYStart = posY\n        globalPosYEnd = posY\n\n        if (image.complete) {\n            globalPosYEnd = (image.height) + globalPosYStart\n            ctx.drawImage(image, posX, posY, image.width.toDouble(), image.height.toDouble())\n            globalPosYEnd = text.draw(ctx, width, globalPosYEnd, posX)\n            return globalPosYEnd\n        }\n        return globalPosYEnd\n    }\n\n    override fun click(ctx: CanvasRenderingContext2D, posX: Double, posY: Double): Pair<CanvasLine, Int>? {\n        TODO(\"Not yet implemented\")\n    }\n\n    override fun doubleClick(ctx: CanvasRenderingContext2D, posX: Double, posY: Double): Triple<CanvasLine, Int, Int>? {\n        return null\n    }\n\n    override fun reset() {\n        text.reset()\n        citationNumber = initCitationNumber\n    }\n\n    override fun dumpAsciidoc(): String {\n        //return //if (src.length < 250)\n//        return \"\\n${text.dumpAsciidoc()}\\nimage::${src}[]\"\n//        else {\n        return \"\\nlink:${text.txt}[${text.txt},download]\\n\"\n//        return \"\\nlink:${text.txt}[${text.dumpAsciidoc()},download]\\n\"\n//            \"\\n+++<img src='$src'/>+++\"\n//        }\n    }\n}","package taack.ui.canvas.table\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.ICanvasDrawable\nimport taack.ui.canvas.text.CanvasFigure\nimport taack.ui.canvas.text.CanvasLine\nimport taack.ui.canvas.text.CanvasText\nimport web.canvas.CanvasRenderingContext2D\nimport kotlin.math.sign\n\nclass CanvasTable(\n    private val initHeaders: List<TxtHeaderCanvas> = listOf(),\n    private val initCells: List<TxtRowCanvas> = listOf(),\n    txt: String = \"\",\n    private val initCitationNumber: Int = 0\n) : ICanvasDrawable {\n\n    val rows = initCells.toMutableList()\n    private val headers = initHeaders.toMutableList()\n    var currentRowIndex: Int = 0\n    override var globalPosYStart: Double = 0.0\n    override var globalPosYEnd: Double = 0.0\n    private var isDrawn: Boolean = false\n    private val columns\n        get() = headers.size\n    val text = CanvasFigure(txt, initCitationNumber)\n    override var citationNumber: Int = initCitationNumber\n\n    companion object {\n\n        fun createTableFromAsciidoc(txt: String): CanvasTable {\n            return createTable()\n        }\n\n        fun createTable() = CanvasTable(\n            listOf(\n                TxtHeaderCanvas(\"Header 1\"),\n                TxtHeaderCanvas(\"Header 2\"),\n            ), listOf(\n                TxtRowCanvas(\"Cell 1\"),\n                TxtRowCanvas(\"Cell 2\"),\n            ), \"New Table\", 0\n        )\n    }\n\n    override fun getSelectedText(posX: Double?, posY: Double?): CanvasText {\n        if (posX == null || posY == null) {\n            return text\n        } else if (isDrawn) {\n            currentRowIndex = 0\n            for (r in headers + rows) {\n                if (posY in r.globalPosYStart..r.globalPosYEnd && posX in r.posXStart..r.posXEnd) {\n                    return r\n                }\n                currentRowIndex++\n            }\n            currentRowIndex++\n            return text\n        } else {\n            val t = (headers + rows)\n            if (t.size > currentRowIndex) {\n                return t[currentRowIndex]\n            }\n        }\n        return text\n    }\n\n    override fun draw(ctx: CanvasRenderingContext2D, width: Double, posY: Double, posX: Double): Double {\n        isDrawn = false\n        traceIndent(\"CanvasTable::draw: $posX, $posY, $width\")\n        ctx.save()\n        globalPosYStart = posY\n        var y = posY + 10.0\n        val w = width - 35.0 - citationNumber * 16.0\n        for (j in 0..<(headers + rows).size step columns) {\n            var hMax = 0.0\n            for (c in 0..<columns) {\n                val i = c + j\n                if (i < headers.size) {\n                    val h = headers[i].draw(\n                        ctx,\n                        (i % columns + 1) * w / columns,\n                        y,\n                        citationNumber * 16.0 + 20.0 + (i % columns).toDouble() * w / columns\n                    ) - y\n                    hMax = maxOf(hMax, h)\n                } else {\n                    val h = rows[i - headers.size].draw(\n                        ctx,\n                        (i % columns + 1) * w / columns,\n                        y,\n                        citationNumber * 16.0 + 20.0 + (i % columns).toDouble() * w / columns\n                    ) - y\n                    hMax = maxOf(hMax, h)\n                }\n            }\n            for (c in 0..<columns) {\n                val i = c + j\n\n                if (i < columns) {\n\n                    ctx.save()\n                    ctx.fillStyle = \"#58b2ee11\"\n                    ctx.strokeStyle = \"#ffffff\"\n                    ctx.fillRect(\n                        (citationNumber * 16.0 - j % columns) + 10.0 + (i % columns).toDouble() * w / columns,\n                        y,\n                        w / columns,\n                        hMax\n                    )\n                }\n                ctx.save()\n                ctx.fillStyle = \"#11111111\"\n                ctx.strokeRect(\n                    (citationNumber * 16.0 - j % columns) + 10.0 + (i % columns).toDouble() * w / columns,\n                    y,\n                    w / columns,\n                    hMax\n                )\n                ctx.restore()\n            }\n            y += hMax\n        }\n        ctx.restore()\n        drawCitation(ctx, y, y - posY)\n        globalPosYEnd = y\n        globalPosYEnd = text.draw(ctx, width, globalPosYEnd, posX)\n        traceDeIndent(\"CanvasTable::draw: $globalPosYEnd\")\n        isDrawn = true\n        return globalPosYEnd\n    }\n\n    override fun dumpAsciidoc(): String {\n        val ret = StringBuilder()\n        ret.append(\"\\n|===\\n|\")\n        for (h in headers) {\n            ret.append(h.dumpAsciidoc())\n            if (headers.indexOf(h) < headers.size - 1)\n                ret.append(\"|\")\n        }\n        ret.append(\"\\n\")\n        for (r in rows) {\n            ret.append(\"\\n|${r.dumpAsciidoc()}\")\n        }\n        ret.append(\"\\n|===\\n\")\n        return ret.toString()\n    }\n\n    override fun reset() {\n        trace(\"CanvasTable::reset before ${headers.size} ${rows.size}\")\n        headers.forEach { it.reset() }\n        headers.clear()\n        headers.addAll(initHeaders)\n        rows.forEach { it.reset() }\n        rows.clear()\n        rows.addAll(initCells)\n        text.reset()\n        citationNumber = initCitationNumber\n        trace(\"CanvasTable::reset after ${headers.size} ${rows.size}\")\n    }\n\n    override fun click(ctx: CanvasRenderingContext2D, posX: Double, posY: Double): Pair<CanvasLine, Int>? {\n        traceIndent(\"CanvasTable::click: $posX, $posY\")\n        for (r in headers + rows) {\n            if (r.isClicked(posX, posY)) {\n                traceDeIndent(\"CanvasTable::click: $r, $posX, $posY\")\n                return r.click(ctx, posX, posY)\n            }\n        }\n        if (text.isClicked(posX, posY)) {\n            traceDeIndent(\"CanvasTable::click: $text, $posX, $posY\")\n            return text.click(ctx, posX, posY)\n        }\n        traceDeIndent(\"CanvasTable::click: null\")\n        return null\n    }\n\n    override fun doubleClick(ctx: CanvasRenderingContext2D, posX: Double, posY: Double): Triple<CanvasLine, Int, Int>? {\n        traceIndent(\"CanvasTable::doubleClick: $posX, $posY\")\n        for (r in headers + rows) {\n            if (r.isClicked(posX, posY)) {\n                traceDeIndent(\"CanvasTable::doubleClick: $r, $posX, $posY\")\n                return r.doubleClick(ctx, posX, posY)\n            }\n        }\n        if (text.isClicked(posX, posY)) {\n            traceDeIndent(\"CanvasTable::click: $text, $posX, $posY\")\n            return text.doubleClick(ctx, posX, posY)\n        }\n        traceDeIndent(\"CanvasTable::doubleClick: null\")\n        return null\n\n    }\n\n    fun addLine(currentTextIndex: Int) {\n        traceIndent(\"CanvasTable::addLine: $currentTextIndex ${rows.size}\")\n        currentRowIndex = currentTextIndex\n        for (j in ((currentRowIndex - (currentRowIndex % columns)) until (columns + currentRowIndex - (currentRowIndex % columns)))) {\n            rows.add(j, TxtRowCanvas(\"New Cell $j\"))\n        }\n        traceDeIndent(\"CanvasTable::addLine: ${rows.size}\")\n    }\n\n    fun removeLine(currentTextIndex: Int) {\n        traceIndent(\"CanvasTable::removeLine: $currentTextIndex ${rows.size}\")\n        currentRowIndex = currentTextIndex\n        for (j in ((currentRowIndex - (currentRowIndex % columns)) until (columns + currentRowIndex - (currentRowIndex % columns)))) {\n            rows.removeAt(currentRowIndex - (currentRowIndex % columns))\n        }\n        traceDeIndent(\"CanvasTable::removeLine: ${rows.size}\")\n    }\n\n    fun addColumn(currentTextIndex: Int) {\n        currentRowIndex = currentTextIndex + 1\n        headers.add(currentRowIndex, TxtHeaderCanvas(\"New Header ${currentRowIndex + 1}\"))\n        for (j in ((currentRowIndex)..(rows).size step columns)) {\n            rows.add(j, TxtRowCanvas(\"New Cell ${j + 1}\"))\n        }\n    }\n\n    fun removeColumn(currentTextIndex: Int) {\n        currentRowIndex = if (currentTextIndex > 0) currentTextIndex - 1 else currentTextIndex\n        headers.removeAt(currentRowIndex)\n        for (j in ((rows.size)..<currentRowIndex step columns)) {\n            rows.removeAt(j)\n        }\n    }\n}\n","package taack.ui.canvas.table\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.canvas.text.CanvasText\n\nclass TxtHeaderCanvas(txtInit: String, indent: Int = 0) : CanvasText(txtInit, indent) {\n    override val fontWeight: String\n        get() = \"bold\"\n    override val fontSize: String\n        get() = \"17px\"\n    override val fontFace: String\n        get() = \"sans-serif\"\n    override val fillStyle: String\n        get() = \"#0000ff\"\n    override val letterSpacing: Double\n        get() = -0.17\n    override val lineHeight: Double\n        get() = 10.0\n    override val wordSpacing: Double\n        get() = -0.05\n    override val marginTop: Double\n        get() = 10.0\n    override val marginBottom: Double\n        get() = 10.0\n\n    override fun computeNum(): String {\n        return \"\"\n    }\n\n    override fun isClicked(posX: Double, posY: Double): Boolean {\n        trace(\"TxtHeaderCanvas.isClicked($posX, $posY)\")\n        if (super.isClicked(posX, posY)) return posX in this.posXStart..this.posXEnd\n        return false\n    }\n}","package taack.ui.canvas.table\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.canvas.text.CanvasText\n\nclass TxtRowCanvas(txtInit: String, indent: Int = 0) : CanvasText(txtInit, indent) {\n    override val fontWeight: String\n        get() = \"normal\"\n    override val fontSize: String\n        get() = \"17px\"\n    override val fontFace: String\n        get() = \"sans-serif\"\n    override val fillStyle: String\n        get() = \"#555\"\n    override val letterSpacing: Double\n        get() = -0.17\n    override val lineHeight: Double\n        get() = 20.0\n    override val wordSpacing: Double\n        get() = -0.05\n    override val marginTop: Double\n        get() = 10.0\n    override val marginBottom: Double\n        get() = 10.0\n\n    override fun computeNum(): String {\n        return \"\"\n    }\n\n    override fun isClicked(posX: Double, posY: Double): Boolean {\n        trace(\"TxtRowCanvas.isClicked($posX, $posY)\")\n        if (super.isClicked(posX, posY)) return posX in this.posXStart..this.posXEnd\n        return false\n    }\n\n}","package taack.ui.canvas.text\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport web.canvas.CanvasRenderingContext2D\n\n\nclass CanvasLine(\n    val posBegin: Int,\n    val posEnd: Int,\n    val textY: Double,\n    val height: Double,\n    val leftMargin: Double = 0.0\n) {\n\n    val length: Int\n        get() = posEnd - posBegin\n\n    fun drawLine(ctx: CanvasRenderingContext2D, text: CanvasText) {\n        traceIndent(\"CanvasLine::drawLine: $this\")\n        var posXStart = text.posXStart\n        text.drawCitation(ctx, textY, height)\n        val lineStyles = text.textStyles.filter {\n            posBegin <= it.end && posEnd >= it.start\n        }\n        trace(\"CanvasLine::drawLine:lineStyles: $lineStyles between $posBegin and $posEnd\")\n        if (lineStyles.isNotEmpty()) {\n            var pe = posBegin\n\n            val contextList = mutableListOf<StringStyle>()\n            var currentBackgroundStyle: StringStyle? = null\n            var currentEndPosition = 0\n            // merge at most 2 styles\n            lineStyles.sortedBy { it.start }.forEach {\n\n                if (currentBackgroundStyle == null) {\n                    currentBackgroundStyle = it\n                    currentEndPosition = it.end\n                    contextList.add(it)\n                } else {\n                    if (currentEndPosition < it.start) {\n                        currentBackgroundStyle = it\n                        currentEndPosition = it.end\n                        contextList.add(it)\n                    } else if (currentEndPosition > it.start && currentEndPosition > it.end) {\n                        it.mergeStyle(currentBackgroundStyle!!)\n                        contextList.add(it)\n                        val currentPosition = it.end\n                        currentBackgroundStyle!!.end = it.start\n                        val ctc = currentBackgroundStyle!!.copy()\n                        ctc.start = currentPosition\n                        ctc.end = currentEndPosition\n                        contextList.add(ctc)\n                        currentBackgroundStyle = ctc//currentBackgroundStyle!!.copy()\n                    }\n                }\n            }\n//            if (currentStyle != null) {\n//                contextList.add(currentStyle!!)\n//            }\n            trace(\"CanvasLine::drawLine:contextList $contextList\")\n            contextList.sortedBy { it.start }.forEach {\n                val s = if (it.start < posBegin) posBegin else it.start\n                val e = if (it.end > posEnd) posEnd else it.end\n                if (s > pe) {\n                    trace(\"CanvasLine::drawLine:s>pe: s: $s pe: $pe\")\n                    ctx.fillText(\n                        (if (pe == 0) text.txtPrefix else \"\") + text.txt.substring(pe, s),\n//                        (if (text.txtPrefix.isEmpty() || pe > 0) leftMargin else 0.0) + posXStart,\n                        posXStart,\n                        textY\n                    )\n                    posXStart += ctx.measureText(\n                        (if (pe == 0) text.txtPrefix else \"\") + text.txt.substring(pe, s)\n                    ).width\n                }\n                ctx.save()\n                it.getTextStyle().initCtx(ctx, text)\n                trace(\"CanvasLine::drawLine $s $e ${(if (s == 0) text.txtPrefix else \"\") + text.txt.substring(s, e)}\")\n                ctx.fillText(\n                    (if (s == 0) text.txtPrefix else \"\") + text.txt.substring(s, e),\n//                    (if (text.txtPrefix.isEmpty() || s > 0) leftMargin else 0.0) + posXStart,\n                    posXStart,\n                    textY\n                )\n                posXStart += ctx.measureText(\n                    (if (s == 0) text.txtPrefix else \"\") + text.txt.substring(s, e)\n                ).width\n\n                ctx.restore()\n                pe = e\n            }\n            if (pe < posEnd) {\n                trace(\"CanvasLine::drawLine:pe < posEnd: posEnd: $posEnd pe: $pe\")\n                ctx.fillText(\n                    (if (pe == 0) text.txtPrefix else \"\") + text.txt.substring(pe, posEnd),\n//                    (if (text.txtPrefix.isEmpty() || pe > 0) leftMargin else 0.0) + posXStart,\n                    posXStart,\n                    textY\n                )\n                posXStart += ctx.measureText(\n                    (if (pe == 0) text.txtPrefix else \"\") + text.txt.substring(pe, posEnd)\n                ).width\n            }\n        } else {\n            trace(\"CanvasLine::drawLine:else (empty...) ...\")\n            ctx.fillText(\n                (if (posBegin == 0) text.txtPrefix else \"\") + text.txt.substring(posBegin, posEnd),\n                (if (text.txtPrefix.isEmpty() || posBegin > 0) leftMargin else 0.0) + posXStart,\n                textY\n            )\n        }\n        traceDeIndent(\"CanvasLine::drawLine: ---\")\n    }\n\n    fun caretNCoords(ctx: CanvasRenderingContext2D, text: CanvasText, x: Double): Int {\n        ctx.save()\n        text.initCtx(ctx)\n\n        for (i in posBegin..posEnd) {\n            val pos = text.measureText(ctx, posBegin, i) + leftMargin + text.posXStart\n            if (pos >= x) {\n                ctx.restore()\n                trace(\"CanvasLine::caretNCoords: $x, ret ${i - 1}\")\n                return i - 1\n            }\n        }\n        ctx.restore()\n\n        trace(\"CanvasLine::caretNCoords: $x, ret txt.length = ${text.txt.length}\")\n        return text.txt.length\n    }\n\n    override fun toString(): String {\n        return \"CanvasLine(posBegin=$posBegin, posEnd=$posEnd, textY=$textY, height=$height, leftMargin=$leftMargin)\"\n    }\n\n}",null,"package taack.ui.canvas.text\n\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport taack.ui.canvas.ICanvasDrawable\nimport web.canvas.CanvasRenderingContext2D\n\n\nabstract class CanvasText(private val _txtInit: String = \"\", private var initCitationNumber: Int = 0) : ICanvasDrawable {\n    companion object {\n        var num1: Int = 0\n        var num2: Int = 0\n        var figNum: Int = 0\n    }\n\n    abstract val fontWeight: String\n    abstract val fontSize: String\n    abstract val fontFace: String\n    abstract val fillStyle: String\n    abstract val letterSpacing: Double\n    abstract val lineHeight: Double\n    abstract val wordSpacing: Double\n    var totalHeight: Double = 0.0\n    abstract val marginTop: Double\n    abstract val marginBottom: Double\n\n    override var globalPosYStart: Double = 0.0\n    override var globalPosYEnd: Double = 0.0\n    override var citationNumber: Int = initCitationNumber\n\n    private var __txtInit: String = _txtInit\n    var txtInit: String\n        get() {\n            return __txtInit\n        }\n        set(value) {\n            txtVar = value\n            __txtInit = value\n        }\n\n    var txtPrefix = \"\"\n    var lines: List<CanvasLine> = emptyList()\n    private var internTextStyles: MutableList<StringStyle>? = null\n    val textStyles: List<StringStyle>\n        get() {\n            if (internTextStyles == null) {\n                internTextStyles = mutableListOf()\n\n                val inlineStyles = mutableListOf<StringStyle>()\n\n                if (txt.isNotEmpty())\n                    for (s in TextStyle.entries) {\n                        if (s == TextStyle.NORMAL)\n                            continue\n                        var c = true\n                        var p = 0\n                        while (c && p < txt.length) {\n                            var ps = txt.substring(p).indexOf(s.sepBegin)\n                            if (ps != -1) {\n                                ps += p\n                                p = ps + s.sepBegin.length\n                                var pe = txt.substring(p).indexOf(s.sepEnd)\n                                if (pe != -1) {\n                                    pe += p + s.sepEnd.length\n                                    p = pe\n                                    inlineStyles.add(StringStyle(ps, pe).from(s))\n                                } else c = false\n                            } else c = false\n                        }\n                    }\n                if (inlineStyles.isNotEmpty()) {\n                    inlineStyles.sortBy { it.start }\n//                    inlineStyles.sortWith(compareBy({ it.start }, { it.end }))\n\n                    var currentStyle = inlineStyles.first()\n                    if (inlineStyles.size == 1) internTextStyles!!.add(currentStyle)\n                    else\n                        inlineStyles.forEach {\n//                            if (it.getTextStyle() != currentStyle.getTextStyle() && it.getTextStyle() != TextStyle.NORMAL) {\n//                                internTextStyles!!.addAll(currentStyle.merge(it))\n                                internTextStyles!!.add(it)\n//                            } else internTextStyles!!.add(it)\n                            currentStyle = it\n                        }\n                }\n\n            }\n            return internTextStyles!!\n        }\n    var posXEnd: Double = 0.0\n    var posXStart: Double = 0.0\n    var txtVar: String = _txtInit\n    val txt: String\n        get() {\n            return txtVar\n        }\n\n\n    fun addToTxtInit(txt: String) {\n        txtInit += txt\n    }\n\n    fun addChar(c: String, pos: Int? = null) {\n        val p = pos ?: txtVar.length\n        trace(\"CanvasText::addChar: $c, $p\")\n        txtVar = if (txtVar.isEmpty())\n            c\n        else\n            txtVar.substring(0, p) + c + txtVar.substring(p)\n    }\n\n    fun delChar(p: Int, pEnd: Int? = null): Int {\n        trace(\"CanvasText::delChar: $p, $pEnd\")\n        txtVar = txtVar.substring(0, p) + txtVar.substring(p + (pEnd ?: 1))\n\n        return txtVar.length\n    }\n\n    fun rmChar(p: Int): Int {\n        trace(\"CanvasText::rmChar: $p\")\n        if (txtVar.isEmpty() || p > txtVar.length) return 0\n        txtVar = txtVar.substring(0, p - 1) + txtVar.substring(p)\n        return txtVar.length\n    }\n\n    fun addStyle(style: TextStyle, p: Int, pEnd: Int) {\n        txtVar = style.applyStyle(txt, p, pEnd)\n        trace(\"CanvasText::addStyle $txtVar\")\n    }\n\n    fun measureText(ctx: CanvasRenderingContext2D, posBegin: Int, posEnd: Int): Double {\n        var textWidth = 0.0\n        if (textStyles.isNotEmpty()) {\n            var pe = posBegin\n            textStyles.forEach {\n                if (it.start > posEnd || it.end < posBegin) {\n                    return@forEach\n                }\n                val s = if (it.start < posBegin) posBegin else it.start\n                val e = if (it.end > posEnd) posEnd else it.end\n                if (s > pe) {\n                    textWidth += ctx.measureText(\n                        /*(if (pe == 0) txtPrefix else \"\") + */txt.substring(pe, s)\n                    ).width\n                }\n                ctx.save()\n                it.getTextStyle().initCtx(ctx, this)\n                textWidth += ctx.measureText(\n                    /*(if (s == 0) txtPrefix else \"\") + */txt.substring(s, e)\n                ).width\n                ctx.restore()\n                pe = e\n            }\n            if (pe < posEnd) {\n                textWidth += ctx.measureText(\n                    /*(if (pe == 0) txtPrefix else \"\") + */txt.substring(pe, posEnd)\n                ).width\n            }\n            return textWidth\n        } else {\n            textWidth = ctx.measureText(txt.substring(posBegin, posEnd)).width\n            return textWidth\n        }\n    }\n\n    fun font(): String {\n        return \"$fontWeight $fontSize $fontFace\"\n    }\n\n    fun initCtx(ctx: CanvasRenderingContext2D) {\n        //trace(\"CanvasText::initCtx\")\n        ctx.font = font()\n        ctx.fillStyle = fillStyle\n        ctx.letterSpacing = letterSpacing.toString() + \"px\"\n        ctx.wordSpacing = wordSpacing.toString() + \"px\"\n    }\n\n    override fun getSelectedText(posX: Double?, posY: Double?): CanvasText? {\n        return this\n    }\n\n    override fun draw(ctx: CanvasRenderingContext2D, width: Double, posY: Double, posX: Double): Double {\n        traceIndent(\"CanvasText::draw: $posX, $posY, $width\")\n        this.posXStart = posX + citationXPos\n        this.posXEnd = width\n        ctx.save()\n        initCtx(ctx)\n        txtPrefix = computeNum()\n        val tmpTxt = txtPrefix + txt\n        //val txtMetrics = ctx.measureText(tmpTxt.ifEmpty { \"|\" })\n        val height = lineHeight//txtMetrics.actualBoundingBoxAscent// + txtMetrics.actualBoundingBoxDescent//lineHeight\n        globalPosYStart = posY\n        var pX = posX\n        var pY = marginTop + height\n        totalHeight = pY\n        var currentLetterPos = 0\n        var posLetterLineBegin = 0\n        var posLetterLineEnd = 0\n        lines = emptyList()\n        val listTxt = tmpTxt.split(\" \")\n        for (i in listTxt.indices) {\n            listTxt[i]\n            val t = listTxt[i] + (if (i < listTxt.size - 1) \" \" else \"\")\n            currentLetterPos += t.length\n            val tWidth = measureText(ctx, posLetterLineEnd, currentLetterPos)\n            ctx.save()\n            initCtx(ctx)\n            if (pX + ctx.measureText(txtPrefix).width + tWidth >= width - 30.0) {\n                pX = posX + ctx.measureText(txtPrefix).width\n                lines += CanvasLine(\n                    posLetterLineBegin,\n                    posLetterLineEnd,\n                    posY + totalHeight,\n                    height,\n                    ctx.measureText(txtPrefix).width\n                )\n                pY += height\n                totalHeight = pY\n                posLetterLineBegin = posLetterLineEnd\n            }\n            posLetterLineEnd = currentLetterPos\n            pX += tWidth\n            ctx.restore()\n        }\n        if (posLetterLineBegin != currentLetterPos || currentLetterPos == 0) {\n\n            lines += CanvasLine(\n                posLetterLineBegin,\n                txt.length,\n                posY + totalHeight,\n                height,\n                ctx.measureText(txtPrefix).width\n            )\n        }\n\n\n        trace(\"draw lines: $this: $txt\")\n        lines.forEach { l ->\n            l.drawLine(ctx, this)\n        }\n\n        totalHeight += marginBottom\n        val ret = posY + totalHeight\n        globalPosYEnd = ret\n        ctx.restore()\n        traceDeIndent(\"CanvasText::draw: $globalPosYEnd\")\n        return ret\n    }\n\n\n    abstract fun computeNum(): String\n\n    fun indexOfLine(line: CanvasLine): Int {\n        var i = 0\n        lines.find {\n            i++\n            it.textY == line.textY\n        }\n        return i - 1\n    }\n\n    fun indexOfLine(pos: Int): Int {\n        var i = 0\n        lines.find {\n            i++\n            it.posBegin <= pos && it.posEnd > pos\n        }\n        return i - 1\n    }\n\n    override fun click(ctx: CanvasRenderingContext2D, posX: Double, posY: Double): Pair<CanvasLine, Int>? {\n        traceIndent(\"CanvasText::click: $posX, $posY\")\n        for (line in lines) {\n            if (posY in line.textY - line.height..line.textY) {\n                val caretPosInCurrentText = line.caretNCoords(ctx, this, posX)\n                traceDeIndent(\"CanvasText::click: $line, $caretPosInCurrentText\")\n                return Pair(line, caretPosInCurrentText)\n            }\n        }\n        if (posY < lines.last().textY) {\n            traceDeIndent(\"CanvasText::click: first ${lines.first()}\")\n            return Pair(lines.first(), 0)\n        }\n        traceDeIndent(\"CanvasText::click: last ${lines.last()}\")\n        return Pair(lines.last(), txt.length)\n    }\n\n    override fun doubleClick(\n        ctx: CanvasRenderingContext2D,\n        posX: Double,\n        posY: Double\n    ): Triple<CanvasLine, Int, Int>? {\n        traceIndent(\"CanvasText::doubleClick: $posX, $posY\")\n        for (line in lines) {\n            if (posY in line.textY - line.height..line.textY) {\n                val caretPosInCurrentText = line.caretNCoords(ctx, this, posX)\n                var charSelectStartNInText =\n                    txt.substring(line.posBegin, caretPosInCurrentText)\n                        .indexOfLast { !it.isLetter() } + 1\n                charSelectStartNInText += line.posBegin\n                var charSelectEndNInText =\n                    txt.substring(caretPosInCurrentText + 1).indexOfFirst { !it.isLetter() }\n                if (charSelectEndNInText == -1) {\n                    charSelectEndNInText = line.posEnd\n                } else\n                    charSelectEndNInText += caretPosInCurrentText + 1\n                traceDeIndent(\"CanvasText::doubleClick1: $line, $charSelectStartNInText, $charSelectEndNInText\")\n                return Triple(\n                    line,\n                    charSelectStartNInText,\n                    charSelectEndNInText\n                )\n            }\n        }\n        traceDeIndent(\"CanvasText::doubleClick: null\")\n        return null\n    }\n\n    override fun toString(): String {\n        return \"CanvasText(posXStart=$posXStart, posXEnd=$posXEnd, globalPosYStart=$globalPosYStart, globalPosYEnd=$globalPosYEnd, lines.size=${lines.size})\"\n    }\n\n    override fun reset() {\n        trace(\"CanvasText::reset  |$txtInit|$__txtInit|$_txtInit|\")\n        internTextStyles = null\n        citationNumber = initCitationNumber\n        txtVar = txtInit\n//        styles = emptyList()\n    }\n\n    override fun dumpAsciidoc(): String {\n        return txt\n    }\n}","package taack.ui.canvas.text\n\nclass H2Canvas(txtInit: String, indent: Int = 0) : CanvasText(txtInit, indent) {\n    override val fontWeight: String\n        get() = \"normal\"\n    override val fontSize: String\n        get() = \"37px\"\n    override val fontFace: String\n        get() = \"sans-serif\"\n    override val fillStyle: String\n        get() = \"#ba3925\"\n    override val letterSpacing: Double\n        get() = -0.37\n    override val lineHeight: Double\n        get() = 44.4\n    override val wordSpacing: Double\n        get() = -1.85\n    override val marginTop: Double\n        get() = 37.0\n    override val marginBottom: Double\n        get() = 18.5\n\n    override fun computeNum(): String {\n        num1++\n        num2 = 0\n        return \"$num1. \"\n    }\n\n    override fun dumpAsciidoc(): String {\n        return \"\\n== \" + super.dumpAsciidoc() + \"\\n\"\n    }\n}","package taack.ui.canvas.text\n\nclass H3Canvas(txtInit: String, indent: Int = 0) : CanvasText(txtInit, indent) {\n    override val fontWeight: String\n        get() = \"normal\"\n    override val fontSize: String\n        get() = \"27px\"\n    override val fontFace: String\n        get() = \"sans-serif\"\n    override val fillStyle: String\n        get() = \"#ba3925\"\n    override val letterSpacing: Double\n        get() = -0.37\n    override val lineHeight: Double\n        get() = 32.4\n    override val wordSpacing: Double\n        get() = -1.35\n    override val marginTop: Double\n        get() = 27.0\n    override val marginBottom: Double\n        get() = 13.5\n\n    override fun computeNum(): String {\n        num2++\n        return \"$num1.$num2. \"\n    }\n\n    override fun dumpAsciidoc(): String {\n        return \"\\n=== \" + super.dumpAsciidoc() + \"\\n\"\n    }\n\n}","package taack.ui.canvas.text\n\nclass H4Canvas(txtInit: String, indent: Int = 0) : CanvasText(txtInit, indent) {\n    override val fontWeight: String\n        get() = \"normal\"\n    override val fontSize: String\n        get() = \"23px\"\n    override val fontFace: String\n        get() = \"sans-serif\"\n    override val fillStyle: String\n        get() = \"#ba3925\"\n    override val letterSpacing: Double\n        get() = -0.37\n    override val lineHeight: Double\n        get() = 27.6\n    override val wordSpacing: Double\n        get() = -1.15\n    override val marginTop: Double\n        get() = 23.0\n    override val marginBottom: Double\n        get() = 11.5\n\n    override fun computeNum(): String {\n        return \"\"\n    }\n\n    override fun dumpAsciidoc(): String {\n        return \"\\n==== \" + super.dumpAsciidoc() + \"\\n\"\n    }\n\n}","package taack.ui.canvas.text\n\nclass Li2Canvas(txtInit: String, indent: Int = 0) : CanvasText(txtInit, indent) {\n    override val fontWeight: String\n        get() = \"normal\"\n    override val fontSize: String\n        get() = \"17px\"\n    override val fontFace: String\n        get() = \"sans-serif\"\n    override val fillStyle: String\n        get() = \"#555\"\n    override val letterSpacing: Double\n        get() = -0.17\n    override val lineHeight: Double\n        get() = 27.2\n    override val wordSpacing: Double\n        get() = -0.05\n    override val marginTop: Double\n        get() = 0.0\n    override val marginBottom: Double\n        get() = 8.0\n\n    override fun computeNum(): String {\n        return \"    ‧ \"\n    }\n\n    override fun dumpAsciidoc(): String {\n        return \"** \" + super.dumpAsciidoc() + \"\\n\"\n    }\n\n}","package taack.ui.canvas.text\n\nclass LiCanvas(txtInit: String, indent: Int = 0) : CanvasText(txtInit, indent) {\n    override val fontWeight: String\n        get() = \"normal\"\n    override val fontSize: String\n        get() = \"17px\"\n    override val fontFace: String\n        get() = \"sans-serif\"\n    override val fillStyle: String\n        get() = \"#555\"\n    override val letterSpacing: Double\n        get() = -0.17\n    override val lineHeight: Double\n        get() = 27.2\n    override val wordSpacing: Double\n        get() = -0.05\n    override val marginTop: Double\n        get() = 4.0\n    override val marginBottom: Double\n        get() = 8.0\n\n    override fun computeNum(): String {\n        return \" • \"\n    }\n\n    override fun dumpAsciidoc(): String {\n        return \"\\n\" + \"* \" + super.dumpAsciidoc() + \"\\n\"\n    }\n\n}","package taack.ui.canvas.text\n\nclass PCanvas(txtInit: String, indent: Int = 0) : CanvasText(txtInit, indent) {\n    override val fontWeight: String\n        get() = \"normal\"\n    override val fontSize: String\n        get() = \"17px\"\n    override val fontFace: String\n        get() = \"sans-serif\"\n    override val fillStyle: String\n        get() = \"#555\"\n    override val letterSpacing: Double\n        get() = -0.17\n    override val lineHeight: Double\n        get() = 27.2\n    override val wordSpacing: Double\n        get() = -0.05\n    override val marginTop: Double\n        get() = 10.0\n    override val marginBottom: Double\n        get() = 10.0\n\n    override fun computeNum(): String {\n        return \"\"\n    }\n\n    override fun dumpAsciidoc(): String {\n        return \"\\n${super.dumpAsciidoc()}\\n\"\n    }\n}","package taack.ui.canvas.text\n\nimport taack.ui.base.Helper.Companion.traceDeIndent\nimport taack.ui.base.Helper.Companion.traceIndent\nimport web.canvas.CanvasRenderingContext2D\n\n\ndata class StringStyle(\n    var start: Int,\n    var end: Int,\n    var italic: Boolean = false,\n    var bold: Boolean = false,\n    var monospace: Boolean = false\n) {\n    fun from(ts: TextStyle): StringStyle {\n        return when (ts) {\n            TextStyle.BOLD -> StringStyle(this.start, this.end, bold = true)\n            TextStyle.NORMAL -> StringStyle(this.start, this.end)\n            TextStyle.MONOSPACED -> StringStyle(this.start, this.end, monospace = true)\n            TextStyle.BOLD_MONOSPACED -> StringStyle(this.start, this.end, monospace = true, bold = true)\n        }\n    }\n\n    fun getTextStyle(): TextStyle {\n        if (monospace && bold) {\n            return TextStyle.BOLD_MONOSPACED\n        } else if (monospace) {\n            return TextStyle.MONOSPACED\n        } else if (bold) {\n            return TextStyle.BOLD\n        } else return TextStyle.NORMAL\n    }\n\n    fun mergeStyle(other: StringStyle) {\n        this.italic = italic || other.italic\n        this.bold = bold || other.bold\n        this.monospace = monospace || other.monospace\n    }\n}\n\nenum class TextStyle(val sepBegin: String, val sepEnd: String, private val regex: Regex?) {\n    NORMAL(\"\", \"\", null),\n    BOLD(\"*\", \"*\", Regex(\"[^\\\\\\\\]\\\\*\")),\n    MONOSPACED(\"`\", \"`\", Regex(\"[^\\\\\\\\]`\")),\n    BOLD_MONOSPACED(\"*`\", \"`*\", Regex(\"[^\\\\\\\\][*`][*`]\"))\n    ;\n\n    fun initCtx(ctx: CanvasRenderingContext2D, text: CanvasText) {\n        text.initCtx(ctx)\n        ctx.font = when (this) {\n            NORMAL -> {\n                text.font()\n            }\n\n            BOLD -> {\n                \"bold ${text.fontSize} ${text.fontFace}\"\n            }\n\n            MONOSPACED -> {\n                \"${text.fontWeight} ${text.fontSize} monospace\"\n            }\n\n            BOLD_MONOSPACED -> {\n                \"bold ${text.fontSize} monospace\"\n            }\n        }\n    }\n\n    private fun clearFormating(txt: String, p: Int, pEnd: Int): Triple<String, Int, Int> {\n        var text = txt\n        var ptEnd = pEnd\n        entries.forEach {\n            if (it.regex != null) {\n                val txtNormal = text.substring(p, ptEnd).replace(it.regex, \"\")\n                ptEnd -= (ptEnd - p - txtNormal.length)\n                text = text.substring(0, p) + txtNormal + text.substring(ptEnd)\n            }\n        }\n        return Triple(text, p, ptEnd)\n    }\n\n//    fun chargeWordCtx(ctx: CanvasRenderingContext2D, canvasText: CanvasText, text: String, currentWordStyle: StringStyle): StringStyle {\n//        entries.forEach { entry ->\n//            if (entry.regex != null && text.startsWith(entry.sepBegin)) {\n//                when (entry) {\n//                    NORMAL -> {\n//                        // Path-through\n//                    }\n//                    BOLD -> {\n//                        val end = text.endsWith(BOLD.sepEnd)\n//                        val ws = StringStyle(text, !currentWordStyle.bold && !end, currentWordStyle.italic, currentWordStyle.monospace)\n//                        BOLD.initCtx(ctx, canvasText)\n//                        return ws\n//                    }\n//                    MONOSPACED -> {\n//                        val end = text.endsWith(MONOSPACED.sepEnd)\n//                        val ws = StringStyle(text, !currentWordStyle.bold, currentWordStyle.italic, !currentWordStyle.monospace && !end)\n//                        BOLD.initCtx(ctx, canvasText)\n//                        return ws\n//\n//                    }\n//                    BOLD_MONOSPACED -> {\n//                        val end = text.endsWith(BOLD_MONOSPACED.sepEnd)\n//                        val ws = StringStyle(text, !currentWordStyle.bold && !end, currentWordStyle.italic, currentWordStyle.monospace && !end)\n//                        BOLD.initCtx(ctx, canvasText)\n//                        return ws\n//                    }\n//                }\n//            }\n//        }\n//        NORMAL.initCtx(ctx, canvasText)\n//        return currentWordStyle\n//    }\n\n    fun applyStyle(txt: String, p: Int, pEnd: Int): String {\n        traceIndent(\"TextStyle::applyStyle +++ $txt, $p, $pEnd\")\n        val t = clearFormating(txt, p, pEnd)\n        traceDeIndent(\"TextStyle::applyStyle --- $t\")\n        return t.first.substring(0, t.second) + sepBegin + t.first.substring(\n            t.second,\n            t.third\n        ) + sepEnd + t.first.substring(t.third)\n    }\n}","package taack.ui.diagram\n\nimport js.array.asList\nimport taack.ui.base.BaseElement\nimport taack.ui.base.element.AjaxBlock\nimport taack.ui.base.element.Block\nimport web.dom.document\nimport web.events.EventHandler\nimport web.events.EventType\nimport web.events.addEventListener\nimport web.svg.*\nimport web.uievents.MouseEvent\nimport web.uievents.WheelEvent\n\nclass Diagram(val parent: AjaxBlock, val s: SVGSVGElement): BaseElement {\n    companion object {\n        fun getSiblingDiagram(p: AjaxBlock): List<Diagram> {\n            val elements: List<*> = p.d.querySelectorAll(\"svg.taackDiagram\").asList()\n            return elements.map {\n                Diagram(p, it as SVGSVGElement)\n            }\n        }\n    }\n\n    private var isScrolling: Boolean = false\n    private var previousMouseX: Double? = null\n    private val legends: List<DiagramLegend> = DiagramLegend.getSiblingDiagramLegend(this)\n    val transformArea: DiagramTransformArea? = DiagramTransformArea.getSiblingDiagramTransformArea(this)\n\n    init {\n        s.style.userSelect = \"none\"\n\n        if (transformArea != null && s.querySelector(\"clipPath#clipSection\") != null) {\n            // Scroll\n            s.onmousedown = EventHandler { e ->\n                if (transformArea.isClientMouseInTransformArea(e.clientX.toDouble())) {\n                    isScrolling = true\n                    previousMouseX = translateX(e.clientX.toDouble())\n                }\n            }\n            s.onmousemove = EventHandler { e ->\n                if (isScrolling && previousMouseX != null) {\n                    val currentMouseX = translateX(e.clientX.toDouble())\n                    transformArea.scrollBy(currentMouseX - previousMouseX!!)\n                    previousMouseX = currentMouseX\n                }\n            }\n            s.onmouseup = EventHandler {\n                isScrolling = false\n            }\n            s.onmouseleave = EventHandler {\n                isScrolling = false\n            }\n\n            // Zoom\n            s.onwheel = EventHandler { e: WheelEvent -> // e.deltaY < 0 : wheel up\n                if (transformArea.isClientMouseInTransformArea(e.clientX.toDouble())) {\n                    e.preventDefault()\n                    transformArea.zoom(translateX(e.clientX.toDouble()), e.deltaY < 0)\n                }\n            }\n\n            // HoverLine and tooltip for LINE diagram\n            s.addEventListener(EventType(\"mousemove\"), EventHandler { e: MouseEvent ->\n                transformArea.refreshCurrentHoverLineAndDataToolTip(e.clientX.toDouble(), e.clientY.toDouble())\n            })\n            s.addEventListener(EventType(\"mouseleave\"), EventHandler {\n                transformArea.currentHoverLine?.remove()\n                s.querySelectorAll(\".diagram-tooltip\").forEach { it.remove() }\n            })\n        }\n    }\n\n    fun translateX(x: Double): Double {\n        val pt = s.createSVGPoint()\n        pt.x = x\n        return pt.matrixTransform(s.getScreenCTM()!!.inverse()).x\n    }\n\n    fun cloneLegendShape(dataset: String): SVGGElement {\n        val cloned = document.createElement(SvgTagName(\"g\")) as SVGGElement\n        cloned.innerHTML = legends.find { it.dataset == dataset }?.g?.innerHTML ?: \"\"\n        return cloned\n    }\n\n    override fun getParentBlock(): Block {\n        return parent.getParentBlock()\n    }\n}","package taack.ui.diagram\n\nimport js.array.asList\nimport taack.ui.base.Helper.Companion.processAjaxLink\nimport taack.ui.base.Helper.Companion.trace\nimport taack.ui.base.LeafElement\nimport web.dom.document\nimport web.events.EventHandler\nimport web.history.history\nimport web.http.RequestMethod\nimport web.location.location\nimport web.svg.*\nimport web.url.URL\nimport web.xhr.XMLHttpRequest\nimport kotlin.math.min\n\nclass DiagramData(private val parent: DiagramTransformArea, val g: SVGGElement): LeafElement {\n    companion object {\n        fun getSiblingDiagramData(dataGroup: DiagramTransformArea): List<DiagramData> {\n            val elements: List<*> = dataGroup.g.querySelectorAll(\"g[element-type='DATA']\").asList()\n            return elements.map {\n                DiagramData(dataGroup, it as SVGGElement)\n            }\n        }\n    }\n\n    val dataset: String = g.attributes.getNamedItem(\"dataset\")!!.value\n    val gapIndex = g.attributes.getNamedItem(\"gap-index\")?.value?.toInt()\n    private val shapes: List<SVGElement> = g.children.asList().filter { it.tagName != \"text\" }.unsafeCast<List<SVGElement>>()\n    private val tooltip: SVGGElement?\n\n    init {\n        val tooltipLabel = g.getAttribute(\"data-label\")\n        if (!tooltipLabel.isNullOrBlank()) {\n            val diagramRoot = parent.parent\n            tooltip = document.createElement(SvgTagName(\"g\"))\n            tooltip.classList.add(\"diagram-tooltip\")\n\n            val background: SVGPolygonElement = document.createElement(SvgTagName(\"polygon\"))\n            background.style.fill = \"#00000090\"\n            tooltip.appendChild(background)\n\n            val legend: SVGGElement = diagramRoot.cloneLegendShape(dataset)\n            legend.querySelectorAll(\"text\").forEach { (it as SVGTextElement).style.fill = \"white\" }\n            legend.setAttribute(\"transform\", \"translate(0,-15)\")\n            tooltip.appendChild(legend)\n\n            val value: SVGTextElement = document.createElement(SvgTagName(\"text\"))\n            value.setAttribute(\"text-rendering\", \"optimizeLegibility\")\n            value.setAttribute(\"style\", \"font-size: 13px; font-family: sans-serif; fill: white\")\n            value.innerHTML = tooltipLabel\n            value.setAttribute(\"transform\", \"translate(0,15)\")\n            tooltip.appendChild(value)\n\n            if (parent.currentHoverLine == null) {\n                g.onmouseenter = EventHandler {\n                    showTooltip()\n                }\n                g.onmouseleave = EventHandler {\n                    if (diagramRoot.s.contains(tooltip)) {\n                        tooltip.remove()\n                    }\n                }\n            }\n        } else {\n            tooltip = null\n        }\n\n        val action = parent.g.getAttribute(\"diagram-action-url\")\n        val dataX = g.getAttribute(\"data-x\")\n        val dataY = g.getAttribute(\"data-y\")\n        if (!action.isNullOrBlank() && (dataX != null || dataY != null)) {\n            g.style.cursor = \"pointer\"\n\n            var isClicked = false\n            g.onmousedown = EventHandler {\n                isClicked = true\n            }\n            g.onmousemove = EventHandler { // avoid conflict with Scroll\n                isClicked = false\n            }\n            g.onmouseup = EventHandler {\n                if (isClicked) {\n                    onClickShape(action, dataset, dataX ?: \"\", dataY ?: \"\")\n                    isClicked = false\n                }\n            }\n        }\n    }\n\n    fun hideOrShow(toShow: Boolean) {\n        g.style.display = if (toShow) \"\" else \"none\"\n    }\n\n    fun moveShapeHorizontally(startX: Double, shapeWidth: Double) {\n        shapes.forEach { shape ->\n            when (shape.tagName) {\n                \"rect\" -> {\n                    shape.setAttribute(\"x\", startX.toString())\n                    shape.setAttribute(\"width\", shapeWidth.toString())\n                }\n                \"circle\" -> {\n                    shape.setAttribute(\"cx\", startX.toString())\n                }\n                \"line\" -> {\n                    val x1 = shape.getAttribute(\"x1\")\n                    val x2 = shape.getAttribute(\"x2\")\n                    if (x1 == x2) { // vertical line\n                        shape.setAttribute(\"x1\", (startX + shapeWidth / 2).toString()) // for whiskers: move to center point\n                        shape.setAttribute(\"x2\", (startX + shapeWidth / 2).toString())\n                    } else {\n                        shape.setAttribute(\"x1\", startX.toString())\n                        shape.setAttribute(\"x2\", (startX + shapeWidth).toString())\n                    }\n                }\n            }\n        }\n    }\n\n    fun moveShapeVertically(startY: Double, shapeHeight: Double? = null): Double { // return startY of next shape which should be stacked\n        var y: Double = startY\n        var height: Double? = shapeHeight\n        shapes.forEach { shape ->\n            when (shape.tagName) {\n                \"rect\" -> {\n                    if (height != null) {\n                        shape.setAttribute(\"height\", height.toString())\n                    }\n                    y = startY - shape.getAttribute(\"height\")!!.toDouble()\n                    shape.setAttribute(\"y\", y.toString())\n                }\n                \"circle\" -> {\n                    shape.setAttribute(\"cy\", startY.toString())\n                }\n                \"line\" -> {\n                    val y1 = shape.getAttribute(\"y1\")\n                    val y2 = shape.getAttribute(\"y2\")\n                    if (y1 != y2) {\n                        if (height == null) {\n                            height = shape.getAttribute(\"y1\")!!.toDouble() - shape.getAttribute(\"y2\")!!.toDouble()\n                        }\n                        shape.setAttribute(\"y1\", startY.toString())\n                        shape.setAttribute(\"y2\", (startY - height!!).toString())\n                    } else { // horizontal line\n                        shape.setAttribute(\"y1\", (startY - (height ?: 0.0)).toString()) // for whiskers: move to top point\n                        shape.setAttribute(\"y2\", (startY - (height ?: 0.0)).toString())\n                    }\n                    y = shape.getAttribute(\"y2\")!!.toDouble()\n                }\n            }\n        }\n        return y\n    }\n\n    fun getShapeAttribute(name: String): String? {\n        return shapes.firstOrNull()?.getAttribute(name)\n    }\n\n    private fun onClickShape(action: String, dataset: String, x: String, y: String) {\n        val targetUrl = URL(action + (if (action.contains(\"?\")) \"&\" else \"?\") + \"dataset=${dataset}&x=${x}&y=${y}&isAjax=true\", \"${location.protocol}//${location.host}\").toString()\n\n        //Display load spinner\n        val loader = document.getElementById(\"taack-load-spinner\")\n        loader?.classList?.remove(\"tck-hidden\")\n        val xhr = XMLHttpRequest()\n\n        xhr.onloadend = EventHandler { ev ->\n            ev.preventDefault()\n            trace(\"DiagramData::onClickShape: Load End, action: $action responseType: '${xhr.responseType}'\")\n            loader?.classList?.add(\"tck-hidden\")\n\n            val text = xhr.responseText\n            if (text.substring(0, min(20, text.length)).contains(Regex(\" html\"))) {\n                trace(\"Full webpage ...|$action|${document.title}|${document.documentURI}\")\n                history.pushState(\"{}\", document.title, targetUrl)\n                trace(\"Setting location.href: $targetUrl\")\n                location.href = targetUrl\n                document.write(text)\n                document.close()\n            } else {\n                trace(\"BaseAjaxAction::onclickBaseAjaxAction => processAjaxLink $parent\")\n                processAjaxLink(text, parent)\n            }\n        }\n        xhr.open(RequestMethod.GET, targetUrl)\n        xhr.send()\n    }\n\n    fun showTooltip() {\n        if (tooltip != null) {\n            val diagramRoot = parent.parent\n            diagramRoot.s.appendChild(tooltip)\n\n            val background = tooltip.querySelector(\"polygon\")!! as SVGPolygonElement\n            if (background.getAttribute(\"points\") == null) {\n                val contentWidth = tooltip.getBBox().width\n                background.setAttribute(\"points\", \"${-contentWidth / 2 - 20},0 ${-contentWidth / 2 - 10},10 ${-contentWidth / 2 - 10},25 ${contentWidth / 2 + 10},25 ${contentWidth / 2 + 10},-25 ${-contentWidth / 2 - 10},-25 ${-contentWidth / 2 - 10},-10\")\n            }\n\n            val diagramScrollX = diagramRoot.transformArea?.g?.getAttribute(\"scroll-x\")?.toDouble() ?: 0.0\n            if (g.getBBox().x + g.getBBox().width + background.getBBox().width + diagramScrollX < diagramRoot.s.viewBox.baseVal.x + diagramRoot.s.viewBox.baseVal.width) {\n                background.setAttribute(\"transform\", \"translate(${(background.getBBox().width - 30) / 2},0)\")\n                tooltip.setAttribute(\"transform\", \"translate(${g.getBBox().x + g.getBBox().width + 20 + diagramScrollX},${g.getBBox().y + (if (shapes.firstOrNull()?.tagName == \"circle\") g.getBBox().height / 2.0 else 0.0)})\")\n            } else {\n                background.setAttribute(\"transform\", \"scale(-1,1) translate(${-(background.getBBox().width - 30) / 2},0)\")\n                tooltip.setAttribute(\"transform\", \"translate(${g.getBBox().x - (tooltip.getBBox().width - 10) + diagramScrollX},${g.getBBox().y + (if (shapes.firstOrNull()?.tagName == \"circle\") g.getBBox().height / 2.0 else 0.0)})\")\n            }\n        }\n    }\n}","package taack.ui.diagram\n\nimport js.array.asList\nimport taack.ui.base.LeafElement\nimport web.events.EventHandler\nimport web.svg.SVGGElement\nimport web.svg.SVGTextElement\n\n\nclass DiagramLegend(private val parent: Diagram, val g: SVGGElement): LeafElement {\n    companion object {\n        fun getSiblingDiagramLegend(d: Diagram): List<DiagramLegend> {\n            val elements: List<*> = d.s.querySelectorAll(\"g[element-type='LEGEND']\").asList()\n            return elements.map {\n                DiagramLegend(d, it as SVGGElement)\n            }\n        }\n    }\n\n    val dataset: String = g.attributes.getNamedItem(\"dataset\")!!.value\n    private val text: SVGTextElement = g.querySelector(\"text\") as SVGTextElement\n    private var isHidden: Boolean = false\n\n    init {\n        g.style.cursor = \"pointer\"\n        g.onclick = EventHandler{\n            text.style.textDecoration = if (isHidden) \"\" else \"line-through\"\n            parent.transformArea?.hideOrShowDataset(isHidden, dataset)\n            isHidden = !isHidden\n        }\n    }\n}","package taack.ui.diagram\n\nimport js.array.asList\nimport kotlinx.browser.window\nimport taack.ui.base.BaseElement\nimport taack.ui.base.element.Block\nimport web.dom.document\nimport web.svg.*\nimport kotlin.math.*\n\nclass DiagramTransformArea(val parent: Diagram, val g: SVGGElement): BaseElement {\n    companion object {\n        fun getSiblingDiagramTransformArea(d: Diagram): DiagramTransformArea? {\n            val g = d.s.querySelector(\"g[element-type='TRANSFORM_AREA']\")\n            return if (g != null) DiagramTransformArea(d, g as SVGGElement) else null\n        }\n    }\n\n    private val dataList: List<DiagramData> = DiagramData.getSiblingDiagramData(this)\n    private val shapeType: String = g.attributes.getNamedItem(\"shape-type\")!!.value\n    private val maxShapeWidth: Double = g.attributes.getNamedItem(\"shape-max-width\")!!.value.toDouble()\n    private val areaMinX: Double = g.attributes.getNamedItem(\"area-min-x\")!!.value.toDouble()\n    private val areaMaxX: Double = g.attributes.getNamedItem(\"area-max-x\")!!.value.toDouble()\n    private val areaMaxY: Double = g.attributes.getNamedItem(\"area-max-y\")!!.value.toDouble()\n\n    private val verticalBackground = g.querySelector(\"g[element-type='VERTICAL_BACKGROUND']\")\n    private val verticalBackgroundLines = verticalBackground?.querySelectorAll(\"line\")?.asList() ?: listOf()\n    private val verticalBackgroundTexts = verticalBackground?.querySelectorAll(\"text\")?.asList() ?: listOf()\n\n    private var gapWidth: Double = (areaMaxX - areaMinX) / (verticalBackgroundLines.size - 1)\n    var currentHoverLine: SVGLineElement? = null\n\n    init {\n        if (shapeType == \"line\" && dataList.any { it.g.hasAttribute(\"data-label\") }) {\n            currentHoverLine = document.createElement(SvgTagName(\"line\")) as SVGLineElement\n            currentHoverLine!!.setAttribute(\"y1\", verticalBackgroundLines.firstOrNull()?.getAttribute(\"y1\") ?: \"43.0\")\n            currentHoverLine!!.setAttribute(\"y2\", verticalBackgroundLines.firstOrNull()?.getAttribute(\"y2\") ?: \"425.0\")\n            currentHoverLine!!.setAttribute(\"style\", \"stroke:rgb(180, 180, 180);stroke-width:1.3\")\n        }\n\n        if ((verticalBackground?.getAttribute(\"show-label-every-x\")?.toDouble() ?: 1.0) > 1) {\n            refreshBackgroundXLabelsDisplay()\n        }\n    }\n\n    fun refreshCurrentHoverLineAndDataToolTip(mouseClientX: Double, mouseClientY: Double) {\n        if (currentHoverLine != null) {\n            var showToolTipData: DiagramData? = null\n            if (isClientMouseInTransformArea(mouseClientX)) {\n                var minGapX: Double = Double.MAX_VALUE\n                val datasetMap = dataList.filter { it.g.hasAttribute(\"data-label\") && it.g.style.display != \"none\" }.groupBy { it.dataset }\n                datasetMap.forEach {\n                    val dataList = it.value.filter { data -> round(parent.translateX(data.g.getBoundingClientRect().x + data.g.getBoundingClientRect().width / 2) * 100) / 100 in areaMinX..areaMaxX }\n                    val diagramDataIndex = dataList.indexOf(dataList.findLast { data -> data.g.getBoundingClientRect().x + data.g.getBoundingClientRect().width / 2 <= mouseClientX })\n                    if (diagramDataIndex != -1) {\n                        val gap1 = abs(dataList[diagramDataIndex].g.getBoundingClientRect().x + dataList[diagramDataIndex].g.getBoundingClientRect().width / 2 - mouseClientX)\n                        val gap2 = if (diagramDataIndex != dataList.size - 1) abs(dataList[diagramDataIndex + 1].g.getBoundingClientRect().x + dataList[diagramDataIndex + 1].g.getBoundingClientRect().width / 2 - mouseClientX) else Double.MAX_VALUE\n                        val closestDiagramData = if (min(gap1, gap2) == gap1) dataList[diagramDataIndex] else dataList[diagramDataIndex + 1]\n                        showToolTipData = if (min(minGapX, min(gap1, gap2)) == minGapX) showToolTipData else closestDiagramData\n                        minGapX = min(minGapX, min(gap1, gap2))\n                    }\n                }\n                if (showToolTipData != null) {\n                    currentHoverLine!!.setAttribute(\"x1\", showToolTipData!!.getShapeAttribute(\"cx\")!!)\n                    currentHoverLine!!.setAttribute(\"x2\", showToolTipData!!.getShapeAttribute(\"cx\")!!)\n                    if (!g.contains(currentHoverLine)) {\n                        g.appendChild(currentHoverLine!!)\n                    }\n\n                    var minGapY: Double = Double.MAX_VALUE\n                    datasetMap.values.forEach {\n                        val dataWithSameX = it.find { data -> data.getShapeAttribute(\"cx\") == showToolTipData!!.getShapeAttribute(\"cx\") }\n                        if (dataWithSameX != null) {\n                            val dataClientY = dataWithSameX.g.getBoundingClientRect().y + dataWithSameX.g.getBoundingClientRect().height / 2\n                            val gapY = abs(dataClientY - mouseClientY)\n                            if (min(minGapY, gapY) == gapY) {\n                                showToolTipData = dataWithSameX\n                                minGapY = gapY\n                            }\n                        }\n                    }\n                } else {\n                    currentHoverLine!!.remove()\n                }\n            } else {\n                currentHoverLine!!.remove()\n            }\n            parent.s.querySelectorAll(\".diagram-tooltip\").forEach { it.remove() }\n            showToolTipData?.showTooltip()\n        }\n    }\n\n    fun hideOrShowDataset(toShow: Boolean, dataset: String) {\n        dataList.filter { it.dataset == dataset }.forEach {\n            it.hideOrShow(toShow)\n        }\n        refreshDataShape()\n    }\n\n    fun scrollBy(movingDistance: Double) {\n        scrollTo((g.getAttribute(\"scroll-x\")?.toDouble() ?: 0.0) + movingDistance)\n    }\n\n    private fun scrollTo(x: Double) {\n        if (verticalBackgroundLines.isNotEmpty()) {\n            val minX = areaMaxX - gapWidth - round(verticalBackgroundLines.last().getAttribute(\"x1\")!!.toDouble())\n            val maxX = areaMinX + gapWidth - round(verticalBackgroundLines.first().getAttribute(\"x1\")!!.toDouble())\n            val adjustedX = min(maxX, max(minX, x))\n            g.setAttribute(\"scroll-x\", adjustedX.toString())\n            g.setAttribute(\"transform\", \"translate(${adjustedX},0.0)\")\n        }\n    }\n\n    private var zoomUpTimer: Int? = null\n    private var zoomUpTargetCenterLineIndex: Int? = null\n    fun zoom(mouseX: Double, isUp: Boolean) {\n        if (verticalBackgroundLines.isNotEmpty()) {\n            val currentMinLineIndex = verticalBackgroundLines.indexOf(verticalBackgroundLines.find { line -> round(parent.translateX(line.getBoundingClientRect().x)) >= areaMinX } ?: verticalBackgroundLines.first())\n            val currentMaxLineIndex = verticalBackgroundLines.indexOf(verticalBackgroundLines.findLast { line -> round(parent.translateX(line.getBoundingClientRect().x)) <= areaMaxX } ?: verticalBackgroundLines.last())\n            val changeGap = max(1, (currentMaxLineIndex - currentMinLineIndex) / 10)\n\n            val newMinLineIndex: Int // will move this line as new first background vertical line\n            val newMaxLineIndex: Int // will move this line as new last background vertical line\n            if (isUp) { // zoom-up to a target area\n                // the target area should always keep same (Around the line which is chosen at first)\n                if (zoomUpTargetCenterLineIndex == null) {\n                    zoomUpTargetCenterLineIndex = verticalBackgroundLines.indexOf(verticalBackgroundLines.find { line -> round(parent.translateX(line.getBoundingClientRect().x)) >= mouseX } ?: verticalBackgroundLines.last())\n                }\n                if (zoomUpTimer != null) {\n                    window.clearTimeout(zoomUpTimer!!)\n                }\n                zoomUpTimer = window.setTimeout({\n                    zoomUpTargetCenterLineIndex = null\n                }, 500)\n\n                val targetCenterLineIndex = zoomUpTargetCenterLineIndex ?: ((currentMinLineIndex + currentMaxLineIndex) / 2)\n                val leftGapNumber = targetCenterLineIndex - currentMinLineIndex\n                val rightGapNumber = currentMaxLineIndex - targetCenterLineIndex\n                if (leftGapNumber != rightGapNumber) { // the line is not centered, so only zoom-up the bigger side\n                    if (abs(leftGapNumber - rightGapNumber) - changeGap >= 0) { // changeGap is not enough to make the line centered, so zoom-up the side fully\n                        if (leftGapNumber > rightGapNumber) {\n                            newMinLineIndex = currentMinLineIndex + changeGap\n                            newMaxLineIndex = currentMaxLineIndex\n                        } else {\n                            newMinLineIndex = currentMinLineIndex\n                            newMaxLineIndex = currentMaxLineIndex - changeGap\n                        }\n                    } else { // changeGap is larger than the distance to make the line centered\n                        val extraChangeGap = max(1, (changeGap - abs(leftGapNumber - rightGapNumber)) / 2)\n                        if (leftGapNumber > rightGapNumber) {\n                            newMaxLineIndex = currentMaxLineIndex - extraChangeGap\n                            newMinLineIndex = max(0, targetCenterLineIndex * 2 - newMaxLineIndex)\n                        } else {\n                            newMinLineIndex = currentMinLineIndex + extraChangeGap\n                            newMaxLineIndex = min(verticalBackgroundLines.size - 1, targetCenterLineIndex * 2 - currentMinLineIndex)\n                        }\n                    }\n                } else { // the line is already centered, so zoom-up averagely\n                    newMinLineIndex = currentMinLineIndex + changeGap\n                    newMaxLineIndex = currentMaxLineIndex - changeGap\n                }\n            } else { // zoom-down averagely\n                newMinLineIndex = max(0, currentMinLineIndex - changeGap)\n                newMaxLineIndex = min(verticalBackgroundLines.size - 1, currentMaxLineIndex + changeGap)\n                zoomUpTargetCenterLineIndex = null\n            }\n\n            if ((!isUp || newMaxLineIndex - newMinLineIndex > 2) && (currentMinLineIndex != newMinLineIndex || currentMaxLineIndex != newMaxLineIndex)) {\n                val newMinLine = verticalBackgroundLines[newMinLineIndex] as SVGLineElement\n                val newMaxLine = verticalBackgroundLines[newMaxLineIndex] as SVGLineElement\n                val zoomRadio = (areaMaxX - areaMinX) / (newMaxLine.x1.baseVal.value - newMinLine.x1.baseVal.value)\n\n                verticalBackgroundLines.forEach { line ->\n                    val targetX = ((line.getAttribute(\"x1\")?.toDouble() ?: areaMinX) - areaMinX) * zoomRadio + areaMinX\n                    line.setAttribute(\"x1\", targetX.toString())\n                    line.setAttribute(\"x2\", targetX.toString())\n                }\n                refreshBackgroundXLabelsPosition(zoomRadio)\n                refreshBackgroundXLabelsDisplay(zoomRadio)\n                refreshDataShape(zoomRadio)\n                scrollTo(areaMinX - newMinLine.x1.baseVal.value)\n            }\n        }\n    }\n\n    private var zoomTimer: Int? = null\n    private fun refreshBackgroundXLabelsDisplay(zoomRadio: Double = 1.0) {\n        val showLabelEveryX = (verticalBackground!!.getAttribute(\"show-label-every-x\")?.toDouble() ?: 1.0) / zoomRadio\n        verticalBackground.setAttribute(\"show-label-every-x\", showLabelEveryX.toString())\n\n        // refresh the display only after stopping Zoom\n        if (zoomTimer != null) {\n            window.clearTimeout(zoomTimer!!)\n        }\n        zoomTimer = window.setTimeout({\n            verticalBackgroundTexts.forEachIndexed { index, text ->\n                (text as SVGTextElement).style.display = if (index % ceil(round(showLabelEveryX * 100) / 100).toInt() == 0) \"\" else \"none\"\n            }\n        }, if (zoomRadio == 1.0) 0 else 500)\n    }\n\n    private fun refreshBackgroundXLabelsPosition(zoomRadio: Double) {\n        verticalBackgroundTexts.forEach { text ->\n            val labelWidth = text.getAttribute(\"label-width\")?.toDouble() ?: 0.0\n            if (text.getAttribute(\"transform\")?.startsWith(\"rotate\") == true) {\n                val targetX = ((text.getAttribute(\"x\")?.toDouble() ?: (areaMinX - labelWidth)) + labelWidth - areaMinX) * zoomRadio + areaMinX - labelWidth\n                text.setAttribute(\"x\", targetX.toString())\n\n                val s = text.getAttribute(\"transform\")!!.split(\",\").toMutableList()\n                s[1] = (targetX + labelWidth).toString()\n                text.setAttribute(\"transform\", s.joinToString(\",\"))\n            } else {\n                val targetX = ((text.getAttribute(\"x\")?.toDouble() ?: (areaMinX - labelWidth / 2)) + labelWidth / 2 - areaMinX) * zoomRadio + areaMinX - labelWidth / 2\n                text.setAttribute(\"x\", targetX.toString())\n            }\n        }\n    }\n\n    private fun refreshDataShape(zoomRadio: Double = 1.0) {\n        gapWidth *= zoomRadio\n        when (shapeType) {\n            in listOf(\"bar\", \"whiskers\") -> {\n                dataList.filter { it.gapIndex != null }.groupBy { it.gapIndex }.values.forEach { gapDataList ->\n                    val displayedDataset: Map<String, List<DiagramData>> = gapDataList.filter { it.g.style.display != \"none\" }.groupBy { it.dataset }\n                    if (displayedDataset.isNotEmpty()) {\n                        val shapeNumber = displayedDataset.size\n                        var gapHorizontalPadding: Double = gapWidth * 0.2 / 2\n                        var shapeWidth: Double = if (shapeNumber > 1) (gapWidth * 0.8) * 0.8 / shapeNumber else gapWidth * 0.8\n                        val shapeMargin: Double = if (shapeNumber > 1) (gapWidth * 0.8) * 0.2 / (shapeNumber - 1) else 0.0\n                        if (maxShapeWidth > 0 && shapeWidth > maxShapeWidth) {\n                            shapeWidth = maxShapeWidth\n                            gapHorizontalPadding = (gapWidth - shapeWidth * shapeNumber - shapeMargin * (shapeNumber - 1)) / 2\n                        }\n                        for (key in displayedDataset.keys) {\n                            val index = displayedDataset.keys.indexOf(key)\n                            displayedDataset[key]!!.forEach {\n                                it.moveShapeHorizontally(areaMinX + gapWidth * it.gapIndex!! + gapHorizontalPadding + (shapeWidth + shapeMargin) * index, shapeWidth)\n                            }\n                        }\n                    }\n                }\n            }\n            \"stackedBar\" -> {\n                if (zoomRadio != 1.0) {\n                    var gapHorizontalPadding: Double = gapWidth * 0.2 / 2\n                    var shapeWidth: Double = gapWidth * 0.8\n                    if (maxShapeWidth > 0 && shapeWidth > maxShapeWidth) {\n                        shapeWidth = maxShapeWidth\n                        gapHorizontalPadding = (gapWidth - shapeWidth) / 2\n                    }\n                    dataList.filter { it.g.style.display != \"none\" }.forEach {\n                        it.moveShapeHorizontally(areaMinX + gapWidth * it.gapIndex!! + gapHorizontalPadding, shapeWidth)\n                    }\n                } else {\n                    dataList.filter { it.gapIndex != null }.groupBy { it.gapIndex }.values.forEach { gapDataList ->\n                        val displayedDataset: Map<String, List<DiagramData>> = gapDataList.filter { it.g.style.display != \"none\" }.groupBy { it.dataset }\n                        if (displayedDataset.isNotEmpty()) {\n                            var startY: Double = areaMaxY\n                            for (key in displayedDataset.keys) {\n                                displayedDataset[key]!!.forEach {\n                                    startY = it.moveShapeVertically(startY)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            \"scatter\" -> {\n                if (zoomRadio != 1.0) {\n                    dataList.forEach {\n                        val targetX = ((it.getShapeAttribute(\"cx\")?.toDouble() ?: areaMinX) - areaMinX) * zoomRadio + areaMinX\n                        it.moveShapeHorizontally(targetX, 0.0)\n                    }\n                }\n            }\n            \"line\" -> {\n                if (zoomRadio != 1.0) {\n                    dataList.forEach {\n                        val cx = it.getShapeAttribute(\"cx\")?.toDouble()\n                        if (cx != null) { // circle\n                            it.moveShapeHorizontally((cx - areaMinX) * zoomRadio + areaMinX, 0.0)\n                        } else {\n                            val x1 = it.getShapeAttribute(\"x1\")?.toDouble()\n                            val x2 = it.getShapeAttribute(\"x2\")?.toDouble()\n                            if (x1 != null && x2 != null) { // line between circles\n                                val targetX1 = (x1 - areaMinX) * zoomRadio + areaMinX\n                                val targetX2 = (x2 - areaMinX) * zoomRadio + areaMinX\n                                it.moveShapeHorizontally(targetX1, targetX2 - targetX1)\n                            }\n                        }\n                    }\n                }\n            }\n            else -> {}\n        }\n    }\n\n    fun isClientMouseInTransformArea(mouseClientX: Double): Boolean {\n        return parent.translateX(mouseClientX) in areaMinX..(parent.s.viewBox.baseVal.x + parent.s.viewBox.baseVal.width)\n    }\n\n    override fun getParentBlock(): Block {\n        return parent.getParentBlock()\n    }\n}",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(231);\n"],"names":["root","factory","exports","module","define","amd","globalThis","posX","posY","ctx","textY","height","save","fillStyle","i","marginTop","marginBottom","fillRect","restore","drawables","textIndex","textSubIndex","mouseEvent","currentDrawable","offsetX","offsetY","contains","location","href","window","onpopstate","hash","reload","mapAjaxErrors","text","m","startsWith","pos1","errStart","pos2","indexOf","abId","content","errEnd","it","$fd","$formUrl","$xhr","$filter","$b","$innerText","asSequence","entries","toMap","map","history","pushState","document","title","responseText","disabled","innerText","onPoll","xhr","XMLHttpRequest","onloadend","open","send","poolDrawProgress","blockId","setTimeout","parent","d","attributes","getNamedItem","value","getElementsByTagName","this","tmpBlockId","id","f","capacity","element","textareaList","querySelectorAll","textarea","style","display","createElement","scrollContainer","border","overflow","largeContainer","canvasContainer","append","parentElement","MainCanvas","toggleFullscreen","classList","remove","add","event","e","key","preventDefault","dClose","fullscreenButton","type","className","onclick","closeButton","addEventListener","appendChild","t","expends","setAttribute","rg","r","removeProperty","collapse","toBoolean","target","clientX","getBoundingClientRect","left","toInt","querySelector","a","BaseAjaxAction","onclickBaseAjaxAction","targetUrl","toString","loader","getElementById","responseType","$loader","$targetUrl","ev","contentDispo","getResponseHeader","fileName","response","length","documentURI","write","close","hasAttribute","closeContextMenu","console","log","body","removeChild","removeEventListener","buildCopyDropdown","dropdownItem","hasCopy","textContent","nestedUl","copy","getAttribute","last","replace","isDigit","copyId","onmouseenter","addIdToAnchors","doc","asList","anchorElement","currentHref","$a","navigator","clipboard","writeText","$id","$dropdownItem","$nestedUl","right","offsetWidth","innerWidth","$e","status","parser","DOMParser","parseFromString","contextMenu","position","maxX","maxY","innerHeight","offsetHeight","clientY","top","zIndex","onmouseleave","$className","$fieldName","onload","fieldName","oncontextmenu","onClick","b","modalReturnSelect","otherField","field","taOrI","formAction","fd","FormData","FormActionButton$modalReturnSelect$ref","FormActionButton$modalReturnSelect$ref$lambda","action","additionalParams","split","item","v","url","m2mDiv","cloneNode","m2mDivCloned","FormActionInputM2M","i2","name","FormActionInputM2M$modalReturnSelect$ref","FormActionInputM2M$modalReturnSelect$ref$lambda","FormActionInputM2O$modalReturnSelect$ref","FormActionInputM2O$modalReturnSelect$ref$lambda","opt","selected","options","FormActionSelectM2O$modalReturnSelect$ref","FormActionSelectM2O$modalReturnSelect$ref$lambda","sel","onmousedown","innerHTML","$tabId","$tabIndex","tabResponseEl","div","println","tabIndex","tabId","onloadstart","onGroup","g","dir","s","childNodes","checked","get","appendSpan","createAnchor","pageOffset","li","fontWeight","offset","toDouble","offsetUrl","URL","searchParams","toLong","nav","iHalf","changeValue","inputs","first","stockedValues","toMutableList","index","joinToString","<init>","regex","sequence","token","start","end","<get-ctx>","getContext","<get-texts>","<get-currentLine>","<get-currentDrawable>","<get-currentText>","<set-charSelectStartNInText>","<set-charSelectEndNInText>","<get-charSelectEndNInText>","<get-caretPosInLine>","addDrawable","doNotDraw","txt","DeleteDrawableCommand","AddCharCommand","RmCharCommand","shiftKey","DeIndentCommand","IndentCommand","ctrlKey","DeleteCharCommand","RemoveTableColumnCommand","AddTableColumnCommand","RemoveTableRowCommand","AddTableRowCommand","PCanvas","AddDrawableCommand","AddTableCommand","initTxt","H3Canvas","H4Canvas","isLetter","decay","removeLast","draw","createButton","innerHtml","handler","margin","contentEditable","placeFile","file","reader","FileReader","readAsDataURL","addInitialTexts","clientWidth","width","clientHeight","scale","clearRect","executedCommands","cmd","message","minHeight","asciidoc","$handler","stopPropagation","AddStyleCommand","H2Canvas","ChangeStyleCommand","LiCanvas","Li2Canvas","scrollTop","transform","detail","currentClick","clipboardData","getData","items","kind","getAsFile","dataTransfer","files","$img","$file","c","rw","rh","drawImage","dataUrl","toDataURL","AddImageCommand","CanvasImg","$reader","img","crossOrigin","src","result","CanvasLink","embeddingForm","divHolder","divScroll","MyMutableList","onresize","onkeydown","ondblclick","onpaste","ondrop","ondragover","ondrag","pos","ch","image","currentDrawableIndex","drawable","x","y","posXEnd","strokeStyle","beginPath","rect","stroke","draw$default","txtInit","citationNumber","CanvasText","<set-ratio>","<get-ratio>","$width","w","h","initCitationNumber","CanvasFigure","Image","answer","<get-_image>","btoa","<get-columns>","initHeaders","initCells","indent","posBegin","posEnd","leftMargin","_txtInit","emptyList","italic","bold","monospace","clearFormating","p","pEnd","ptEnd","txtNormal","Triple","sepBegin","sepEnd","currentMouseX","deltaY","forEach","userSelect","onmousemove","onmouseup","onwheel","onClickShape","dataset","protocol","host","fill","$diagramRoot","$isClicked","$action","$dataX","$dataY","children","tagName","tooltipLabel","diagramRoot","background","legend","dataX","dataY","cursor","isClicked","textDecoration","scrollTo","minX","round","adjustedX","refreshBackgroundXLabelsDisplay","zoomRadio","showLabelEveryX","clearTimeout","refreshBackgroundXLabelsDisplay$default","refreshBackgroundXLabelsPosition","labelWidth","targetX","refreshDataShape","listOf","displayedDataset","shapeNumber","gapHorizontalPadding","shapeWidth","shapeMargin","startY","cx","x1","x2","targetX1","targetX2","refreshDataShape$default","$showLabelEveryX","firstOrNull","level","filter","sort","order","formUrl","delete","base","process","block","posField","emptyMap","endFieldNameIndex","endFieldValueIndex","fieldValue","plus","Pair","hasErrors","blob","size","createObjectURL","download","dispatchEvent","MouseEvent","divElements","AjaxBlock","eval","Block","newContent","elements","Filter","Form","errorInput","Modal","htmlContent","paddingRight","overflowY","modalBackdrop","Show","Tab","Table","TableRow","ActionLink","AnchorHref","isAjax","set","idValue","ContextualLink","ContextualLinkEntry","FilterActionButton","FormActionButton","FormActionInputM2O","FormActionSelectM2O","FormErrorInput","FormOverrideField","ShowActionLink","TabButton","TableGroupableColumn","TablePaginate","inputToSelectAllRows","inputsToSelectCurrentRow","TableSelectCheckbox","TableSortableColumn","mainCanvas","out","previousCitationNumber","n","canvasDrawables","tokens","pt","match","TokenInfo","trimStart","currentText","currentTextPosition","tableStart","currentIndent","wasInBlock","namedItem","controller","varName","lastIndexOf","isLowerCase","titlecase","CanvasTable","TxtHeaderCanvas","TxtRowCanvas","ret","table","line","posNStart","posNEnd","cLine","isFirstLine","posXStart","<set-?>","complete","j","hMax","strokeRect","currentTextIndex","equals","lineStyles","fillText","pe","contextList","currentBackgroundStyle","currentEndPosition","currentPosition","ctc","measureText","inlineStyles","ps","StringStyle","currentStyle","textWidth","font","letterSpacing","wordSpacing","tmpTxt","pX","pY","currentLetterPos","posLetterLineBegin","posLetterLineEnd","listTxt","tWidth","CanvasLine","caretPosInCurrentText","charSelectStartNInText","charSelectEndNInText","ts","other","Diagram","createSVGPoint","matrixTransform","getScreenCTM","inverse","cloned","dataGroup","DiagramData","toShow","startX","shapeHeight","contentWidth","getBBox","diagramScrollX","viewBox","baseVal","DiagramLegend","DiagramTransformArea","mouseClientX","mouseClientY","showToolTipData","minGapX","datasetMap","dataList","iterator","diagramDataIndex","gap1","gap2","closestDiagramData","minGapY","dataWithSameX","gapY","movingDistance","mouseX","isUp","currentMinLineIndex","newMinLineIndex","newMaxLineIndex","currentMaxLineIndex","changeGap","targetCenterLineIndex","leftGapNumber","rightGapNumber","abs","extraChangeGap","newMinLine","newMaxLine","<this>","$source","LN2","O","len","relativeStart","k","relativeEnd","finalValue","TypedArray","asUint","searchString","subjectString","lastIndex","separator","prefix","postfix","limit","truncated","buffer","count","destination","single","initialCapacity","loadFactor","uppercase","code","to","minimumValue","maximumValue","ordinal","low","high","interfaces","maxSize","masks","currentSize","imask","iid","iidImask","numberIndex","intArray","numberWithSettledBit","activeBit","mask","array","initValue","arr","$array","obj","startIndex","endIndex","ia","descriptor","proto","o","typeOf","shiftNumber","MASK","bigNumber","hashCode","signum","chunk","hashCodeMap","symbol","cachedHashCode","str","obj1","obj2","instance","constructorFunction","constructor","this_","cause","errorInfo","thisNeg","otherNeg","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","b00","numBits","radix","radixLong","rem","digitsPerTime","radixToPower","remDiv","digits","twoPwr32","ctor","defaultConstructor","suspendArity","associatedObjectKey","associatedObjects","metadata","endInclusive","iface","possibleActiveBit","parentProto","propName","fromIndex","toIndex","base64","fromBase64","resultLength","int","shift","char","sixBit","diff","needle","bottom","middle","rangeStart","rangeEnd","lastTwoBits","threshold","distance","toBase64","collection","expectedSize","comparator","list","pair","pairs","source","destinationOffset","rangeSize","subrange","newSize","defaultValue","ArrayList_init_$Init$","rangeCheck","comparison","$comparator","median","leftIndex","rightIndex","leftValue","rightValue","internalMap","HashMap_init_$Init$","original","backing","$entryIterator","backingMap","HashSet_init_$Init$","computeHashSize","computeShift","hashSize","checkForComodification","InternalHashMap_init_$Init$","<get-capacity>","<get-hashSize>","registerModification","ensureExtraCapacity","shouldCompact","extraCapacity","spareCapacity","gaps","ensureCapacity","minCapacity","dst","srcLen","dstLen","newHashSize","allocateValuesArray","curValuesArray","newValuesArray","compact","updateHashArray","valuesArray","rehash","putRehash","probesLeft","findKey","addKey","tentativeMaxProbeDistance","probeDistance","putIndex","putEntry","entry","oldValue","keysArray","presenceArray","hashArray","maxProbeDistance","LinkedHashMap_init_$Init$","LinkedHashSet_init_$Init$","outputStream","isNode","resultContinuation","$receiver","$completion$1","Exception_init_$Init$","IllegalArgumentException_init_$Init$","IllegalStateException_init_$Init$","UnsupportedOperationException_init_$Init$","RuntimeException_init_$Init$","NoSuchElementException_init_$Init$","Error_init_$Init$","ConcurrentModificationException_init_$Init$","NullPointerException_init_$Init$","NoWhenBranchMatchedException_init_$Init$","ClassCastException_init_$Init$","jClass","givenSimpleName","isInstanceFunction","jClasses","kClass","StringBuilder_init_$Init$","isNegative","firstChar","limitForMaxRadix","limitBeforeMul","digit","$replacement","replacement","groupName","groups","groupIndex","pattern","input","from","nextPattern","groupCount","newGroupIndex","$match","$range","$nextPattern","$input","ignoreCase","thisOffset","otherOffset","sourceUnit","targetUnit","sourceCompareTarget","implFindEntry","ArrayDeque_init_$Init$","copyElements","newCapacity","newElements","positiveMod","negativeMod","incremented","decremented","nullifyNonEmpty","internalFromIndex","internalToIndex","values","isVarargs","default","exceptionalState","transformer","baseKey","safeCast","step","mod","thisUpper","otherUpper","string","indices","chars","charAtIndex","delimiter","currentOffset","nextIndex","isLimited","range","calcNext","getNextMatch","rawValue","<get-value>","isInNanos","normalValue","unitDiscriminator","nanos","isInMillis","addValuesMixedRanges","thisMillis","otherNanos","otherMillis","resultMillis","otherNanoRemainder","unit","<get-storageUnit>","normalMillis","maxNsInUnit","valueInNs","strictIso","infinityString","hasSign","isTimeComponent","prevUnit","component","dotIndex","afterFirst","allowSpaces","unitName","millis","normalNanos","isoChar","shortName","exception","second","that","third","CancellationException_init_$Init$","IndexOutOfBoundsException_init_$Init$","AssertionError_init_$Init$","ArithmeticException_init_$Init$","NumberFormatException_init_$Init$","UninitializedPropertyAccessException_init_$Init$","approx","res","approxDouble","approx2","log2","delta","approxRes","approxRem","bitCount","l","modified","insertionRangeCheck","increaseLength","amount","previous","sb","findValue","putAllEntries","updated","contentEquals","messageString","current","currentResult","currentException","outcome","completion","intercepted","arity","$arity","stringCsq","literal","lastStart","foundMatch","hasOwnPrototypeProperty","advanceToNextCharacter","code1","code2","oldCapacity","otherIterator","ourValue","internalLastIndex","internalIndex","decrementedInternalIndex","decrementedHead","tail","copyCollectionElements","oldElement","dest","collectionSize","removeRangeShiftPreceding","copyFromIndex","copyToIndex","copyCount","segmentLength","newHead","removeRangeShiftSucceeding","nextNotReady","$completion","floor","isPositive","suffix","newValue","delimiters","$delimiters","$ignoreCase","$this$DelimitedRangesSequence","currentIndex","$delimitersList","strings","startFound","msg","suppressed","timeout","event1","event2","event3","event4","expect","update","initial","trace","<get-parentHandle>","isReusable","callSegmentOnCancellation","segment","ex","installParentHandle","handle","invokeImmediately","JobNode$invoke$ref","JobNode$invoke$ref$lambda","multipleHandlersError","state","dispatchResume","mode","tryResume","delegate","undispatched","dispatcher","context","eventLoop","resumedState","proposedUpdate","resumeMode","onCancellation","idempotent","alreadyResumedError","detachChildIfNonResuable","cancelHandler","idempotentResume","cancelCause","child","handled","continuation","originalException","thrownException","unconfined","isActive","promoteEmptyToNodeList","promoteSingleToNodeList","takenState","cancelLater","dispatched","trySuspend","job","cancellationCause","invokeOnCancellationImpl","cont","task","queue","cur","node","rootCause","fatalException","reason","permissionsBitmask","prev","next","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","__webpack_exports__"],"sourceRoot":""}